[
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Hello, world!",
  "id": "5a4baac20163b02810a38d8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-02T15:52:34.733Z",
  "text": "Hello, world!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> waves",
  "id": "5a4baad929ec6ac311ad5683",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-02T15:52:57.155Z",
  "status": true,
  "text": "@stuartarchibald waves",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/teoliphant",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/254880?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/254880?v=4&s=60",
   "displayName": "Travis E. Oliphant",
   "gv": "4",
   "id": "54185f0c163965c9bc204e58",
   "url": "/teoliphant",
   "username": "teoliphant",
   "v": 19
  },
  "html": "Hi.",
  "id": "5a4bd16168d092bb6216fa17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-02T18:37:21.360Z",
  "text": "Hi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Hi",
  "id": "5a4d0d365355812e57497fb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-03T17:04:54.424Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "what&#39;s the process for getting a PR reviewed?",
  "id": "5a4d0d5c232e79134dc0453f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-03T17:05:32.570Z",
  "text": "what's the process for getting a PR reviewed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Once you open it, we should assign a reviewer.  We&#39;re a little behind on things since we were all out for the holidays",
  "id": "5a4d0d7eb48e8c35669700a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-03T17:06:06.975Z",
  "text": "Once you open it, we should assign a reviewer.  We're a little behind on things since we were all out for the holidays",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "If you don&#39;t see a reviewer assigned in a few days, this is a good place to prod people to take a look.  (As you have done.)",
  "id": "5a4d0db5edd22308110a93ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-03T17:07:01.610Z",
  "text": "If you don't see a reviewer assigned in a few days, this is a good place to prod people to take a look.  (As you have done.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Heh, thanks ",
  "id": "5a4d0dd368d092bb621cf1d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-03T17:07:31.661Z",
  "text": "Heh, thanks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mrocklin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/306380?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/306380?v=4&s=60",
   "displayName": "Matthew Rocklin",
   "gv": "4",
   "id": "530c03e25e986b0712efafb8",
   "url": "/mrocklin",
   "username": "mrocklin",
   "v": 45
  },
  "html": "I&#39;m glad to see this move",
  "id": "5a4e9554bd369bc824874a12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-04T20:57:56.955Z",
  "text": "I'm glad to see this move",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Long time coming.  Stuart was sold once he discovered the IRC bridge to Gitter.  :)",
  "id": "5a4e9609edd22308111293de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-04T21:00:57.181Z",
  "text": "Long time coming.  Stuart was sold once he discovered the IRC bridge to Gitter.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mbargull",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10598343?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10598343?v=4&s=60",
   "displayName": "Marcel Bargull",
   "gv": "4",
   "id": "59e4b3ecd73408ce4f7a3dce",
   "url": "/mbargull",
   "username": "mbargull",
   "v": 181
  },
  "html": "Wait, what? IRC bridge? Didn&#39;t know that either! Need to check that one out :smile: ",
  "id": "5a4e96975355812e5751bdc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-04T21:03:19.495Z",
  "text": "Wait, what? IRC bridge? Didn't know that either! Need to check that one out :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Looks like the ParallelAccelerator refactor PR has been opened.  <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: I tagged you for the review.",
  "id": "5a4e9cac0163b02810b2820b",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-04T21:29:16.584Z",
  "text": "Looks like the ParallelAccelerator refactor PR has been opened.  @stuartarchibald: I tagged you for the review.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, will take a look.",
  "id": "5a4ea3ca29ec6ac311bcc9c9",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-04T21:59:38.013Z",
  "text": "Thanks @seibert, will take a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Should we move the git notification integration out of <code>numba/numba</code> and into here? I think it is most useful for developers and just creates noise on the user channel.",
  "id": "5a4f5a88edd223081115ee5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T10:59:20.363Z",
  "text": "Should we move the git notification integration out of `numba/numba` and into here? I think it is most useful for developers and just creates noise on the user channel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, is<span data-link-type=\"issue\" data-issue=\"2610\" class=\"issue\">#2610</span> for 0.37RC, if so I&#39;ll review.",
  "id": "5a4f6252232e79134dcbe998",
  "issues": [
   {
    "number": "2610"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T11:32:34.287Z",
  "text": "@sklam, is#2610 for 0.37RC, if so I'll review.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: That&#39;s a good idea about the notification.  I tried clicking around to see if I could get Github to send it to both channels, but couldn&#39;t figure it out",
  "id": "5a4f90c35355812e57563780",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:50:43.026Z",
  "text": "@stuartarchibald: That's a good idea about the notification.  I tried clicking around to see if I could get Github to send it to both channels, but couldn't figure it out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so maybe just this channel is better",
  "id": "5a4f90ccb48e8c3566a37b3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:50:52.597Z",
  "text": "so maybe just this channel is better",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah I think it&#39;d be best here",
  "id": "5a4f9100ce68c3bc7480e27f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:51:44.361Z",
  "text": "yeah I think it'd be best here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "also the build notifications",
  "id": "5a4f91080163b02810b6b723",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:51:52.226Z",
  "text": "also the build notifications",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, that I&#39;m less sure about.  I think we can get the Travis-CI/Appveyor stuff pointed over pretty easily",
  "id": "5a4f9121232e79134dccde1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:52:17.289Z",
  "text": "yeah, that I'm less sure about.  I think we can get the Travis-CI/Appveyor stuff pointed over pretty easily",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Not sure what we have to do to buildbot",
  "id": "5a4f9128ba39a53f1adcd4b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:52:24.002Z",
  "text": "Not sure what we have to do to buildbot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "maybe nothing, since those links are also useless to anyone not on the Anaconda VPN",
  "id": "5a4f91380163b02810b6b7e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:52:40.952Z",
  "text": "maybe nothing, since those links are also useless to anyone not on the Anaconda VPN",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "one minor annoyance is that GH names appear in the notifications and my IRC client pings me every time thinking someone is talking to me, guess I need to mess with the config",
  "id": "5a4f913b0163b02810b6b80e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:52:43.149Z",
  "text": "one minor annoyance is that GH names appear in the notifications and my IRC client pings me every time thinking someone is talking to me, guess I need to mess with the config",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, Travis-CI/Appveyor would be good to move",
  "id": "5a4f9166edd2230811171016",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:53:26.681Z",
  "text": "yeah, Travis-CI/Appveyor would be good to move",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think buildbot is just POSTing at present, so it could probably do so here if there&#39;s an API",
  "id": "5a4f91890163b02810b6b9e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T14:54:01.114Z",
  "text": "I think buildbot is just POSTing at present, so it could probably do so here if there's an API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, I&#39;ve added serialisation to the _DisableJitWrapper class <span data-link-type=\"commit\" data-commit-sha=\"4a35fb48123d70781bcb1ad5678d8fe2947c11f2\" data-commit-repo=\"stuartarchibald/numba\" class=\"commit\">stuartarchibald/numba@4a35fb4</span> do you think that&#39;s the right approach to close <span data-link-type=\"issue\" data-issue=\"2210\" class=\"issue\">#2210</span> ?",
  "id": "5a4f9317232e79134dcce861",
  "issues": [
   {
    "number": "2210"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T15:00:39.406Z",
  "text": "@sklam, I've added serialisation to the _DisableJitWrapper class https://github.com/stuartarchibald/numba/commit/4a35fb48123d70781bcb1ad5678d8fe2947c11f2 do you think that's the right approach to close #2210 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I also tried with functools.wraps but it gets in an argument with npyufunc stuff",
  "id": "5a4f933f0505ad8b45ba8450",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T15:01:19.876Z",
  "text": "I also tried with functools.wraps but it gets in an argument with npyufunc stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "OK, I&#39;ve moved the Numba, llvmlite, pyculib, and pyculib sorting Github activity log to this channel.",
  "id": "5a4f996b29ec6ac311c13985",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T15:27:39.916Z",
  "text": "OK, I've moved the Numba, llvmlite, pyculib, and pyculib sorting Github activity log to this channel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , yes, <span data-link-type=\"issue\" data-issue=\"2610\" class=\"issue\">#2610</span> is for 0.37rc.  Please review it.",
  "id": "5a4f9d9429ec6ac311c15195",
  "issues": [
   {
    "number": "2610"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T15:45:24.716Z",
  "text": "@stuartarchibald , yes, #2610 is for 0.37rc.  Please review it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, I&#39;ve added serialisation to the _DisableJitWrapper class <span data-link-type=\"commit\" data-commit-sha=\"4a35fb48123d70781bcb1ad5678d8fe2947c11f2\" data-commit-repo=\"stuartarchibald/numba\" class=\"commit\">stuartarchibald/numba@4a35fb4</span> do you think that&#39;s the right approach to close <span data-link-type=\"issue\" data-issue=\"2210\" class=\"issue\">#2210</span> ?</p></blockquote>\n<p>Looks good. Do you think the serialisation logic can be refactored for sharing between the DisableJitWrapper and the Dispatcher?</p>",
  "id": "5a4f9e2eedd2230811175beb",
  "issues": [
   {
    "number": "2210"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T15:47:58.078Z",
  "text": "> @sklam, I've added serialisation to the _DisableJitWrapper class https://github.com/stuartarchibald/numba/commit/4a35fb48123d70781bcb1ad5678d8fe2947c11f2 do you think that's the right approach to close #2210 ?\n\nLooks good. Do you think the serialisation logic can be refactored for sharing between the DisableJitWrapper and the Dispatcher?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-05T15:57:14.819Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "On <span data-link-type=\"issue\" data-issue=\"2668\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2668</span>, we should check all usage of <code>arraytype.copy</code> and be explicit about how the <code>readonly</code> flag is propagated.",
  "id": "5a4fa053edd22308111768e3",
  "issues": [
   {
    "number": "2668",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T15:57:07.622Z",
  "text": "On https://github.com/numba/numba/pull/2668, we should check all usage of `arraytype.copy` and be explicit about how the `readonly` flag is propagated.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Before I merge <span data-link-type=\"issue\" data-issue=\"318\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#318</span>, do we need to do a dummy commit and add the dev tag?",
  "id": "5a4faedf5355812e5756e044",
  "issues": [
   {
    "number": "318",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T16:59:11.475Z",
  "text": "@sklam: Before I merge https://github.com/numba/llvmlite/pull/318, do we need to do a dummy commit and add the dev tag?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes, I\u2019ll do that",
  "id": "5a4fb0b30505ad8b45bb2f21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T17:06:59.211Z",
  "text": "yes, I\u2019ll do that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Done",
  "id": "5a4fb1466117191e612cf39a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T17:09:26.254Z",
  "text": "Done",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, I&#39;ll merge now",
  "id": "5a4fb14f232e79134dcd9761",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T17:09:35.105Z",
  "text": "ok, I'll merge now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-05T17:13:33.828Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: I can merge the Numba side once we resolve Stuart&#39;s question here: <a href=\"https://github.com/numba/numba/pull/2627#discussion_r159856197\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/2627#discussion_r159856197</a>",
  "id": "5a4fb23729ec6ac311c1cbf6",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T17:13:27.067Z",
  "text": "@sklam: I can merge the Numba side once we resolve Stuart's question here: https://github.com/numba/numba/pull/2627#discussion_r159856197",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/2627#discussion_r159856197"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes, I\u2019m looking at it right now",
  "id": "5a4fb244b48e8c3566a43c1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T17:13:40.927Z",
  "text": "yes, I\u2019m looking at it right now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "OK, once CI finishes with <span data-link-type=\"issue\" data-issue=\"2627\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2627</span>, I will also merge that",
  "id": "5a4fb90403838b2f2a754bcf",
  "issues": [
   {
    "number": "2627",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-05T17:42:28.138Z",
  "text": "OK, once CI finishes with numba/numba#2627, I will also merge that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Should we try for np 1.14 support in 0.37 or wait until 0.38?",
  "id": "5a5393b4ce68c3bc749227d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-08T15:52:20.485Z",
  "text": "Should we try for np 1.14 support in 0.37 or wait until 0.38?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "We should support numpy 1.14 in the next release, I think.  Most likely it causes no issues for us.",
  "id": "5a5393e6232e79134dde7fde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-08T15:53:10.108Z",
  "text": "We should support numpy 1.14 in the next release, I think.  Most likely it causes no issues for us.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Though I wonder if we should also try the suggestion from Jonathan to move to a NumPy-generic conda package (build with NumPy 1.10, and test on NumPy 1.10-1.14)",
  "id": "5a53946fb48e8c3566b5323d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-08T15:55:27.951Z",
  "text": "Though I wonder if we should also try the suggestion from Jonathan to move to a NumPy-generic conda package (build with NumPy 1.10, and test on NumPy 1.10-1.14)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "post-1.9, I don&#39;t think we depend on any part of the ABI that has changed",
  "id": "5a5394900505ad8b45cc0da8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-08T15:56:00.133Z",
  "text": "post-1.9, I don't think we depend on any part of the ABI that has changed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that&#39;s something we should try, it&#39;d massive reduce the build matrix if it works. I have a vague recollection of C code having numpy version specific things, will need to check.",
  "id": "5a53bb68ba39a53f1aef4d6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-08T18:41:44.684Z",
  "text": "I think that's something we should try, it'd massive reduce the build matrix if it works. I have a vague recollection of C code having numpy version specific things, will need to check.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "s/massive/massively/",
  "id": "5a53bb710505ad8b45cd02e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-08T18:41:53.698Z",
  "text": "s/massive/massively/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "there used to be (maybe still are) checks in the C code to work around issues between NumPy 1.6, 1.7, and 1.8, IIRC",
  "id": "5a53c56ab48e8c3566b67924",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-08T19:24:26.378Z",
  "text": "there used to be (maybe still are) checks in the C code to work around issues between NumPy 1.6, 1.7, and 1.8, IIRC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I think once we hit 1.8 or 1.9, everthing (at least at the C level) becomes stable",
  "id": "5a53c57e232e79134ddfbfff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-08T19:24:46.768Z",
  "text": "I think once we hit 1.8 or 1.9, everthing (at least at the C level) becomes stable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2431\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2431</span> is really complicated",
  "id": "5a54cf96d0514c785b0c349a",
  "issues": [
   {
    "number": "2431",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-09T14:20:06.630Z",
  "text": "https://github.com/numba/numba/issues/2431 is really complicated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "would someone else mind taking a look please to make sure that is not something more simple than what I suspect",
  "id": "5a54cfbbba39a53f1af4f33e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-09T14:20:43.300Z",
  "text": "would someone else mind taking a look please to make sure that is not something more simple than what I suspect",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Re: the mailing list email with libz issues with llvmlite.  Is this a possible problem with the llvmlite wheels?",
  "id": "5a54df845a9ebe4f7566a090",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-09T15:28:04.974Z",
  "text": "@sklam: Re: the mailing list email with libz issues with llvmlite.  Is this a possible problem with the llvmlite wheels?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm there were some funny problems with libz when I was doing the conda packages",
  "id": "5a54dfffba39a53f1af55d21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-09T15:30:07.113Z",
  "text": "hmmm there were some funny problems with libz when I was doing the conda packages",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the llvmdev package has a dep on zlib for the unixes",
  "id": "5a54e07eba39a53f1af55f66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-09T15:32:14.449Z",
  "text": "the llvmdev package has a dep on zlib for the unixes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ah, so perhaps the problem is that we need to static link llvm to libz, and then llvmlite won&#39;t depend on it anymore?",
  "id": "5a54e0b3232e79134de5c249",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-09T15:33:07.907Z",
  "text": "ah, so perhaps the problem is that we need to static link llvm to libz, and then llvmlite won't depend on it anymore?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes",
  "id": "5a54e0bdce68c3bc74992049",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:33:17.767Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "possibly",
  "id": "5a54e0c6b48e8c3566bc47b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:33:26.662Z",
  "text": "possibly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Just trying to find my notes on it",
  "id": "5a54e0e1b48e8c3566bc48a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:33:53.545Z",
  "text": "Just trying to find my notes on it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I wonder if we can reproduce this on an older macOS.  I don&#39;t think we have 10.13 anywhere, unless Siu updated his laptop.",
  "id": "5a54e0efae53c15903c8596e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:34:07.340Z",
  "text": "I wonder if we can reproduce this on an older macOS.  I don't think we have 10.13 anywhere, unless Siu updated his laptop.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I have a 10.12 ",
  "id": "5a54e10583152df26d4d9913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:34:29.183Z",
  "text": "I have a 10.12 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "would that do ?",
  "id": "5a54e111ae53c15903c859f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:34:41.924Z",
  "text": "would that do ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Do you have time today to try to reproduce this?  It looks like it is affecting a number of people.",
  "id": "5a54e124ae53c15903c85a3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:35:00.831Z",
  "text": "Do you have time today to try to reproduce this?  It looks like it is affecting a number of people.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "After that, I think we need to put wheel builds and QA into buildbot.",
  "id": "5a54e187ae53c15903c85cf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:36:39.091Z",
  "text": "After that, I think we need to put wheel builds and QA into buildbot.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, I can give it a go",
  "id": "5a54e18cae53c15903c85d0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:36:44.388Z",
  "text": "yeah, I can give it a go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "zlib is nedded to compile compression.cpp",
  "id": "5a54e19a232e79134de5c7e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:36:58.718Z",
  "text": "zlib is nedded to compile compression.cpp",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "but if not found it won&#39;t compile it",
  "id": "5a54e1aa5a9ebe4f7566adad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:37:14.929Z",
  "text": "but if not found it won't compile it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "do we even need the compression support?",
  "id": "5a54e1b66117191e614518cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:37:26.728Z",
  "text": "do we even need the compression support?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "probably not",
  "id": "5a54e1bdb48e8c3566bc4fd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:37:33.826Z",
  "text": "probably not",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "maybe we just need to build llvmdev with zlib turned off then?",
  "id": "5a54e1c9290a1f45616a36fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:37:45.522Z",
  "text": "maybe we just need to build llvmdev with zlib turned off then?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the reason for adding it was that CMake was managing to find zlib.h from system level stuff",
  "id": "5a54e1d06117191e61451976",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:37:52.976Z",
  "text": "the reason for adding it was that CMake was managing to find zlib.h from system level stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yeah, I think our dev systems have a lot of stuff installed",
  "id": "5a54e1e1ae53c15903c85f15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:38:09.433Z",
  "text": "Yeah, I think our dev systems have a lot of stuff installed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "It would be nice to have docker-equivalent to run a pristine macOS environment for testing",
  "id": "5a54e1fc5a9ebe4f7566af8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:38:36.255Z",
  "text": "It would be nice to have docker-equivalent to run a pristine macOS environment for testing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(without the heft of virtualbox)",
  "id": "5a54e212b48e8c3566bc5254",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:38:58.330Z",
  "text": "(without the heft of virtualbox)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the root cause of all this was that the build system had a CXXFLAGS set, and that clobbers anything supplied, which was a surprise",
  "id": "5a54e221ae53c15903c86031",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:39:13.827Z",
  "text": "I think the root cause of all this was that the build system had a CXXFLAGS set, and that clobbers anything supplied, which was a surprise",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "If you can confirm that a llvmdev/llvmlite rebuild fixes, we can tag a point release of llvmlite to get the fixed wheels on PyPI",
  "id": "5a54e2446117191e61451c44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:39:48.197Z",
  "text": "If you can confirm that a llvmdev/llvmlite rebuild fixes, we can tag a point release of llvmlite to get the fixed wheels on PyPI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, I&#39;m going to go and try and reproduce the failure",
  "id": "5a54e268290a1f45616a3a78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:40:24.929Z",
  "text": "ok, I'm going to go and try and reproduce the failure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, cannot reproduce",
  "id": "5a54e4516117191e6145289f",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:48:33.305Z",
  "text": "@seibert, cannot reproduce",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "What steps did you follow?  I might see if I can find a more pristine Mac around here.",
  "id": "5a54e4736117191e6145298a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:49:07.401Z",
  "text": "What steps did you follow?  I might see if I can find a more pristine Mac around here.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(I have a suspicion that installing compiler tools might bring libz along for the ride.)",
  "id": "5a54e48cae53c15903c87229",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:49:32.026Z",
  "text": "(I have a suspicion that installing compiler tools might bring libz along for the ride.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "created a conda env, pip install llvmlite, then I ran the test suite",
  "id": "5a54e48d5a9ebe4f7566c1d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:49:32.999Z",
  "text": "created a conda env, pip install llvmlite, then I ran the test suite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I wonder if its conda bringing libz along",
  "id": "5a54e49d5a9ebe4f7566c276",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:49:49.459Z",
  "text": "I wonder if its conda bringing libz along",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, does macOS ship with virtualenv installed?",
  "id": "5a54e4a7b48e8c3566bc652d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:49:59.724Z",
  "text": "yeah, does macOS ship with virtualenv installed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(trying to avoid installing llvmlite to the system Python, as the original bug report did)",
  "id": "5a54e4bf5a9ebe4f7566c2ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:50:23.392Z",
  "text": "(trying to avoid installing llvmlite to the system Python, as the original bug report did)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "seemingly not",
  "id": "5a54e4cf6117191e61452c17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:50:39.017Z",
  "text": "seemingly not",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ez install pip, pip install virtualenv, create env, activate, pip install llvmlite",
  "id": "5a54e60b232e79134de5e0ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:55:55.489Z",
  "text": "ez install pip, pip install virtualenv, create env, activate, pip install llvmlite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "cannot reproduce",
  "id": "5a54e612290a1f45616a539c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:56:02.149Z",
  "text": "cannot reproduce",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "looking at the wheel installed dylib, there&#39;s a <code>@rpath/libz.1.dylib</code> in there, looking for 1.0.0+",
  "id": "5a54e6a8b48e8c3566bc7059",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:58:32.835Z",
  "text": "looking at the wheel installed dylib, there's a `@rpath/libz.1.dylib` in there, looking for 1.0.0+",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I already have libz in /usr/lib on my Mac",
  "id": "5a54e6ecce68c3bc74994b81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:59:40.623Z",
  "text": "yeah, I already have libz in /usr/lib on my Mac",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-09T15:59:46.851Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "no idea what put it there",
  "id": "5a54e6f0ce68c3bc74994b83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T15:59:44.231Z",
  "text": "no idea what put it there",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Siu is in the office now, so we&#39;re all trying to figure out how to reproduce this.  :)",
  "id": "5a54e85dd0514c785b0cc6ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:05:49.030Z",
  "text": "Siu is in the office now, so we're all trying to figure out how to reproduce this.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m currently looking at the load order of the dylibs",
  "id": "5a54e8f683152df26d4dcd81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:08:22.200Z",
  "text": "I'm currently looking at the load order of the dylibs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-09T16:11:50.527Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "There\u2019s a test in llvmlite to check what are the allowed dylibs: <a href=\"https://github.com/numba/llvmlite/blob/cff0c715922fe9aaa4e5cc6b20a69e7b87e99022/llvmlite/tests/test_binding.py#L191-L192\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/llvmlite/blob/cff0c715922fe9aaa4e5cc6b20a69e7b87e99022/llvmlite/tests/test_binding.py#L191-L192</a>",
  "id": "5a54e9b4232e79134de5f5d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:11:32.950Z",
  "text": "There\u2019s a test in llvmlite to check what are the allowed dylibs: https://github.com/numba/llvmlite/blob/cff0c715922fe9aaa4e5cc6b20a69e7b87e99022/llvmlite/tests/test_binding.py#L191-L192",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/llvmlite/blob/cff0c715922fe9aaa4e5cc6b20a69e7b87e99022/llvmlite/tests/test_binding.py#L191-L192"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;m trying to find a fresh 10.13 install somewhere that I can inspect to see if libz is present.",
  "id": "5a54e9dad0514c785b0cd04a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:12:10.302Z",
  "text": "I'm trying to find a fresh 10.13 install somewhere that I can inspect to see if libz is present.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I\u2019ll do a build on my mac to see if turning off libz in llvm is fine for us.",
  "id": "5a54eb8f232e79134de601a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:19:27.263Z",
  "text": "I\u2019ll do a build on my mac to see if turning off libz in llvm is fine for us.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Speculative execution hasn&#39;t caused any trouble this week.  :)",
  "id": "5a54eba6290a1f45616a73cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:19:50.196Z",
  "text": "Speculative execution hasn't caused any trouble this week.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok",
  "id": "5a54f39ab48e8c3566bcc74c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:53:46.886Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "here goes",
  "id": "5a54f39dba39a53f1af5d45f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:53:49.555Z",
  "text": "here goes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "system python depends on CoreFoundation which is in /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation",
  "id": "5a54f3d1232e79134de6400a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:54:41.853Z",
  "text": "system python depends on CoreFoundation which is in /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "BTW, I tried to reproduce this on a fresh (as few things as IT installs) macOS 10.13.1 system, and was not able to.  libz is already present there, even before installing XCode.",
  "id": "5a54f3e65a9ebe4f75672970",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:55:02.516Z",
  "text": "BTW, I tried to reproduce this on a fresh (as few things as IT installs) macOS 10.13.1 system, and was not able to.  libz is already present there, even before installing XCode.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I don&#39;t know what this is, but it seems to behave like a library, and reports as a Mach-O universal bin",
  "id": "5a54f407ae53c15903c8da52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:55:35.461Z",
  "text": "I don't know what this is, but it seems to behave like a library, and reports as a Mach-O universal bin",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that &quot;library&quot; links to /usr/lib/libz.1.dylib",
  "id": "5a54f426290a1f45616aa75e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:56:06.979Z",
  "text": "that \"library\" links to /usr/lib/libz.1.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "actual path",
  "id": "5a54f42dae53c15903c8db1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:56:13.722Z",
  "text": "actual path",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so if you flip on all the DY_FOO flags and record what is going on, dyld loads libz.1.dylib as a request from that CoreFoundation thing",
  "id": "5a54f46bb48e8c3566bcccbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:57:15.695Z",
  "text": "so if you flip on all the DY_FOO flags and record what is going on, dyld loads libz.1.dylib as a request from that CoreFoundation thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "later, libllvmlite.dylib gets loaded and it does a lazy bind for functions needed for the compression stuff from libz, eg. <code>_compress2</code>",
  "id": "5a54f4d4ae53c15903c8de25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:59:00.187Z",
  "text": "later, libllvmlite.dylib gets loaded and it does a lazy bind for functions needed for the compression stuff from libz, eg. `_compress2`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I wonder if it is that these users are building their own Python&#39;s that don&#39;t follow this link/load path?",
  "id": "5a54f4f36117191e6145959a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T16:59:31.836Z",
  "text": "I wonder if it is that these users are building their own Python's that don't follow this link/load path?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> does the 10.13.1 system <code>/usr/bin/python</code> have that load path ?",
  "id": "5a54f56a290a1f45616aaef5",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T17:01:30.811Z",
  "text": "@seibert does the 10.13.1 system `/usr/bin/python` have that load path ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "btw, i thk the CoreFoundation in a library of syscall wrapper",
  "id": "5a54f8cf83152df26d4e3d9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-09T17:15:59.863Z",
  "text": "btw, i thk the CoreFoundation in a library of syscall wrapper",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the libllvmlite.dylib in the wheel has:<pre><code>$ otool -L libllvmlite<span class=\"class\">.dylib</span>\nlibllvmlite<span class=\"class\">.dylib</span>:\n    libllvmlite<span class=\"class\">.dylib</span> (compatibility version <span class=\"number\">0.0</span>.<span class=\"number\">0</span>, current version <span class=\"number\">0.0</span>.<span class=\"number\">0</span>)\n    @rpath/libz.<span class=\"number\">1</span><span class=\"class\">.dylib</span> (compatibility version <span class=\"number\">1.0</span>.<span class=\"number\">0</span>, current version <span class=\"number\">1.2</span>.<span class=\"number\">11</span>)\n    /usr/lib/libSystem<span class=\"class\">.B</span><span class=\"class\">.dylib</span> (compatibility version <span class=\"number\">1.0</span>.<span class=\"number\">0</span>, current version <span class=\"number\">1226.10</span>.<span class=\"number\">1</span>)\n    @rpath/libc++.<span class=\"number\">1</span><span class=\"class\">.dylib</span> (compatibility version <span class=\"number\">1.0</span>.<span class=\"number\">0</span>, current version <span class=\"number\">1.0</span>.<span class=\"number\">0</span>)</code></pre>",
  "id": "5a54f9bf5a9ebe4f75674f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-09T17:19:59.265Z",
  "text": "the libllvmlite.dylib in the wheel has:\n\n```\n$ otool -L libllvmlite.dylib\nlibllvmlite.dylib:\n\tlibllvmlite.dylib (compatibility version 0.0.0, current version 0.0.0)\n\t@rpath/libz.1.dylib (compatibility version 1.0.0, current version 1.2.11)\n\t/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1)\n\t@rpath/libc++.1.dylib (compatibility version 1.0.0, current version 1.0.0)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s what I have",
  "id": "5a54fbeb5a9ebe4f75675d48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-09T17:29:15.547Z",
  "text": "that's what I have",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "there&#39;s also a a libz in /opt but its probably from ports",
  "id": "5a54fc5283152df26d4e52f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-09T17:30:58.392Z",
  "text": "there's also a a libz in /opt but its probably from ports",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I spoke with Ray for a bit RE the zlib issue.",
  "id": "5a5609aad0514c785b128e10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T12:40:10.181Z",
  "text": "I spoke with Ray for a bit RE the zlib issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<code>import zlib</code> works but the linkage for libz from libllvmlite.dylib doesn&#39;t, which suggests that it may not actually be that the library cannot be found, it may be that it&#39;s an API/ABI issue.",
  "id": "5a560b05d0514c785b129447",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T12:45:57.788Z",
  "text": "`import zlib` works but the linkage for libz from libllvmlite.dylib doesn't, which suggests that it may not actually be that the library cannot be found, it may be that it's an API/ABI issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The wheels for llvmlite rely on llvmdev from the conda tooling which uses conda&#39;s zlib, this is v. 1.2.11, OSX system zlib could be something different",
  "id": "5a560b665a9ebe4f756cf08d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T12:47:34.781Z",
  "text": "The wheels for llvmlite rely on llvmdev from the conda tooling which uses conda's zlib, this is v. 1.2.11, OSX system zlib could be something different",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://abi-laboratory.pro/tracker/timeline/zlib/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://abi-laboratory.pro/tracker/timeline/zlib/</a>",
  "id": "5a560b88290a1f4561703974",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T12:48:08.420Z",
  "text": "https://abi-laboratory.pro/tracker/timeline/zlib/",
  "unread": false,
  "urls": [
   {
    "url": "https://abi-laboratory.pro/tracker/timeline/zlib/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "It is very confusing not being able to reproduce this anywhere, and I don&#39;t understand why Python 3.6 fixes this.  I just checked the Python.org 3.6 binary, and otool shows it does not set LC_RPATH either.",
  "id": "5a562b59ba39a53f1afc1429",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:03:53.491Z",
  "text": "It is very confusing not being able to reproduce this anywhere, and I don't understand why Python 3.6 fixes this.  I just checked the Python.org 3.6 binary, and otool shows it does not set LC_RPATH either.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah I wish I could get a reproducer, it&#39;s really hard to figure out without it",
  "id": "5a562bacae53c15903cf62e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:05:16.187Z",
  "text": "yeah I wish I could get a reproducer, it's really hard to figure out without it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yeah, for example I would be curious if using ctypes to force /usr/lib/libz.1.dylib to load before llvmlite is imported would fix the problem.",
  "id": "5a562da46117191e614c1897",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:13:40.158Z",
  "text": "Yeah, for example I would be curious if using ctypes to force /usr/lib/libz.1.dylib to load before llvmlite is imported would fix the problem.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "not that such a thing is a real solution, but it would help us understand if this really is a library search path issue",
  "id": "5a562dbd6117191e614c192a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:14:05.977Z",
  "text": "not that such a thing is a real solution, but it would help us understand if this really is a library search path issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Siu&#39;s experiment with building llvmdev without libz and then using it to build llvmlite technically resulted in a library that passed unit tests, but with some weird side effects",
  "id": "5a562e476117191e614c1e7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:16:23.889Z",
  "text": "Siu's experiment with building llvmdev without libz and then using it to build llvmlite technically resulted in a library that passed unit tests, but with some weird side effects",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "specifically, some LLVM config string (I didn&#39;t get the details) was being returned with embedded nulls?",
  "id": "5a562e755a9ebe4f756dc436",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:17:09.294Z",
  "text": "specifically, some LLVM config string (I didn't get the details) was being returned with embedded nulls?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "The other question is whether we can get LLVM to statically link to libz, but it is hard to justify linker acrobatics when we don&#39;t have a way to verify the solution.",
  "id": "5a562fe4ae53c15903cf7ceb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:23:16.074Z",
  "text": "The other question is whether we can get LLVM to statically link to libz, but it is hard to justify linker acrobatics when we don't have a way to verify the solution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, the llvm-config library query tooling was returning bizarre things",
  "id": "5a5630b66117191e614c2dcc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:26:46.891Z",
  "text": "yeah, the llvm-config library query tooling was returning bizarre things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I wonder also if <code>import zlib</code> before import of llvmlite will sort it",
  "id": "5a5630cdd0514c785b137157",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:27:09.354Z",
  "text": "I wonder also if `import zlib` before import of llvmlite will sort it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think its quite rare for a python to be built without a zlib",
  "id": "5a5630dcba39a53f1afc3607",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:27:24.354Z",
  "text": "I think its quite rare for a python to be built without a zlib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so have to wonder if it is just a weird rpath problem, or indeed a &quot;library is found but not as expected&quot; problem",
  "id": "5a5630ffb48e8c3566c36437",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:27:59.128Z",
  "text": "so have to wonder if it is just a weird rpath problem, or indeed a \"library is found but not as expected\" problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Can Python statically link to zlib, though?  That might be the reason it is immune to all of this.",
  "id": "5a5631d35a9ebe4f756dda51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:31:31.735Z",
  "text": "Can Python statically link to zlib, though?  That might be the reason it is immune to all of this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess you could",
  "id": "5a5632e8ce68c3bc749ffbbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:36:08.560Z",
  "text": "I guess you could",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Homebew however seems to hint to <code>./configure</code> with CPPFLAGS <a href=\"https://github.com/Homebrew/homebrew-core/blob/master/Formula/python.rb#L119\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Homebrew/homebrew-core/blob/master/Formula/python.rb#L119</a>",
  "id": "5a563310d0514c785b13808a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:36:48.682Z",
  "text": "Homebew however seems to hint to `./configure` with CPPFLAGS https://github.com/Homebrew/homebrew-core/blob/master/Formula/python.rb#L119",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Homebrew/homebrew-core/blob/master/Formula/python.rb#L119"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "s/bew/brew/",
  "id": "5a563316ba39a53f1afc427e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:36:54.448Z",
  "text": "s/bew/brew/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I can understand needing that to find the header file, which isn&#39;t in the usual Linux-y place",
  "id": "5a563344ae53c15903cf91b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:37:40.609Z",
  "text": "yeah, I can understand needing that to find the header file, which isn't in the usual Linux-y place",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that bit is to help along in Xcode systems but seems to suggest its dynamic linking and that it&#39;s leaving <code>./configure</code> to find it",
  "id": "5a56334783152df26d54dd78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:37:43.836Z",
  "text": "that bit is to help along in Xcode systems but seems to suggest its dynamic linking and that it's leaving `./configure` to find it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I wonder if any other wheels on PyPI have dynamic linkage to libz...",
  "id": "5a563381232e79134decfec9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:38:41.157Z",
  "text": "I wonder if any other wheels on PyPI have dynamic linkage to libz...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "guess something loading pngs",
  "id": "5a5633cfd0514c785b138472",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:39:59.137Z",
  "text": "guess something loading pngs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "pillow ?",
  "id": "5a5633d4290a1f4561712168",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:40:04.481Z",
  "text": "pillow ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Is there no PEP with rules for Mac wheels, like there is for manylinux1?",
  "id": "5a5633dbb48e8c3566c374e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:40:11.911Z",
  "text": "Is there no PEP with rules for Mac wheels, like there is for manylinux1?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah... so pillow ships its own libz",
  "id": "5a56341d232e79134ded0376",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:41:17.838Z",
  "text": "ah... so pillow ships its own libz",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "huh...",
  "id": "5a563425d0514c785b13865f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:41:25.396Z",
  "text": "huh...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "OK, so before I return this fresh 10.13 Mac to IT, is there anything else I should try?",
  "id": "5a563473ae53c15903cf98f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:42:43.279Z",
  "text": "OK, so before I return this fresh 10.13 Mac to IT, is there anything else I should try?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "it was unable to reproduce the problem, even when I pip installed llvmlite to the same location as the user report",
  "id": "5a5634a0d0514c785b1388a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:43:28.081Z",
  "text": "it was unable to reproduce the problem, even when I pip installed llvmlite to the same location as the user report",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "pip install pillow... gets you a <code>lib/python2.7/site-packages/PIL/.dylibs/libz.1.2.11.dylib</code>, the .whl blob has them in there",
  "id": "5a5634be5a9ebe4f756df03c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:43:58.919Z",
  "text": "pip install pillow... gets you a `lib/python2.7/site-packages/PIL/.dylibs/libz.1.2.11.dylib`, the .whl blob has them in there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Perhaps try a homebrew install ?",
  "id": "5a5634d4ba39a53f1afc4d69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:44:20.059Z",
  "text": "Perhaps try a homebrew install ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "huh, so how does PIL find those libraries? ",
  "id": "5a5634ea5a9ebe4f756df167",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:44:42.644Z",
  "text": "huh, so how does PIL find those libraries? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "interesting, i&#39;m never sure what can be done with wheels",
  "id": "5a563502290a1f45617128a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:45:06.324Z",
  "text": "interesting, i'm never sure what can be done with wheels",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the dlopen&#39;d DSO in PIL has linkage with <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span>/.dylibs",
  "id": "5a56358dce68c3bc74a00c14",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:47:25.072Z",
  "text": "the dlopen'd DSO in PIL has linkage with @loader_path/.dylibs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Not sure I understand the Homebrew request.  I should install homebrew and then...?",
  "id": "5a5636095a9ebe4f756dfa04",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:49:29.900Z",
  "text": "@stuartarchibald: Not sure I understand the Homebrew request.  I should install homebrew and then...?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "then brew install python2.7 ?",
  "id": "5a563624ae53c15903cfa376",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:49:56.967Z",
  "text": "then brew install python2.7 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "then I guess virtenv",
  "id": "5a56362dae53c15903cfa394",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:50:05.539Z",
  "text": "then I guess virtenv",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and pip",
  "id": "5a5636336117191e614c5044",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:50:11.006Z",
  "text": "and pip",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and then pip install llvmlite",
  "id": "5a56363bb48e8c3566c3849d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:50:19.273Z",
  "text": "and then pip install llvmlite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh, to see if that fails?",
  "id": "5a56363b6117191e614c508a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:50:19.929Z",
  "text": "oh, to see if that fails?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "got it.  I assumed that homebrew already worked, but I guess we haven&#39;t checked",
  "id": "5a56364e83152df26d54eee1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:50:38.663Z",
  "text": "got it.  I assumed that homebrew already worked, but I guess we haven't checked",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Just wondering is there&#39;s something strange about either the brew python or the Formula used for building it",
  "id": "5a56367bce68c3bc74a01078",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:51:23.055Z",
  "text": "Just wondering is there's something strange about either the brew python or the Formula used for building it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "no problems with llvmlite in homebrew virtualenv",
  "id": "5a56384f83152df26d54fbbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:59:11.996Z",
  "text": "no problems with llvmlite in homebrew virtualenv",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, thanks for trying",
  "id": "5a563873ce68c3bc74a01f14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T15:59:47.732Z",
  "text": "hmmm, thanks for trying",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I am running out of ideas without more info being available",
  "id": "5a563882ae53c15903cfb51f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:00:02.903Z",
  "text": "I am running out of ideas without more info being available",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "wait!  I just got it with system python!  Why did this not break before?!?!",
  "id": "5a5638aaba39a53f1afc66f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:00:42.757Z",
  "text": "wait!  I just got it with system python!  Why did this not break before?!?!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Did installing homebrew interfere with system python somehow??",
  "id": "5a563921d0514c785b13a67f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:02:41.748Z",
  "text": "Did installing homebrew interfere with system python somehow??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s be interesting",
  "id": "5a5639275a9ebe4f756e0ca1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:02:47.758Z",
  "text": "that's be interesting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if homebrew mangled LC_RPATH or something?",
  "id": "5a5639366117191e614c6559",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:03:02.087Z",
  "text": "if homebrew mangled LC_RPATH or something?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "installing homebrew also installed the xcode command line tools",
  "id": "5a563aa1232e79134ded2e49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:09:05.492Z",
  "text": "installing homebrew also installed the xcode command line tools",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "alright, now at least we can make some progress",
  "id": "5a563ac56117191e614c7037",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:09:41.928Z",
  "text": "alright, now at least we can make some progress",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "note that once you fix libz, you have the same problem with libc++",
  "id": "5a563caa83152df26d551880",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:17:46.358Z",
  "text": "note that once you fix libz, you have the same problem with libc++",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah so that sounds <span data-link-type=\"mention\" data-screen-name=\"rpath-y\" class=\"mention\">@rpath-y</span> ?",
  "id": "5a563cba6117191e614c7bac",
  "issues": [],
  "mentions": [
   {
    "screenName": "rpath-y",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:18:02.411Z",
  "text": "ah so that sounds @rpath-y ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, the following fixes it after installing the wheel (and cd to wherever the libllvmlite.dylib was installed):<pre><code>sudo install_name_tool -change <span class=\"string\">\"@rpath/libz.1.dylib\"</span> /usr/lib/libz.<span class=\"number\">1</span><span class=\"class\">.dylib</span> libllvmlite<span class=\"class\">.dylib</span>\nsudo install_name_tool -change <span class=\"string\">\"@rpath/libc++.1.dylib\"</span> /usr/lib/libc++.<span class=\"number\">1</span><span class=\"class\">.dylib</span> libllvmlite.dylib</code></pre>",
  "id": "5a563d21ba39a53f1afc8725",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:19:45.213Z",
  "text": "yeah, the following fixes it after installing the wheel (and cd to wherever the libllvmlite.dylib was installed):\n```\nsudo install_name_tool -change \"@rpath/libz.1.dylib\" /usr/lib/libz.1.dylib libllvmlite.dylib\nsudo install_name_tool -change \"@rpath/libc++.1.dylib\" /usr/lib/libc++.1.dylib libllvmlite.dylib\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "LC_RPATH anchored /usr/lib might sort it too then ?",
  "id": "5a563d66b48e8c3566c3b7f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T16:20:54.685Z",
  "text": "LC_RPATH anchored /usr/lib might sort it too then ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "interestingly, the system protection on macOS 10.13 forbids me to make changes to /usr/bin...",
  "id": "5a563dd4ba39a53f1afc8a34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:22:44.396Z",
  "text": "interestingly, the system protection on macOS 10.13 forbids me to make changes to /usr/bin...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "might have to do it in /tmp, no SIP there?",
  "id": "5a563dfe290a1f456171628b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:23:26.013Z",
  "text": "might have to do it in /tmp, no SIP there?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah",
  "id": "5a563e2283152df26d552213",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:24:02.280Z",
  "text": "yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "what was the command to change the rpath?",
  "id": "5a563e2bae53c15903cfdd1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:24:11.849Z",
  "text": "what was the command to change the rpath?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(afk for a bit)",
  "id": "5a563e7eae53c15903cfdf30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:25:34.254Z",
  "text": "(afk for a bit)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "temporarily I guess something LD_LIBRARY_PATH related ?",
  "id": "5a563eb6d0514c785b13ce15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:26:30.251Z",
  "text": "temporarily I guess something LD_LIBRARY_PATH related ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(but the OSX equiv)",
  "id": "5a563ee16117191e614c873d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:27:13.047Z",
  "text": "(but the OSX equiv)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "DYLD_LIBRARY_PATH oddly does not work",
  "id": "5a56438583152df26d5543e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:47:01.806Z",
  "text": "DYLD_LIBRARY_PATH oddly does not work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<code>install_name_tool -add_rpath /usr/lib my_copy_of_python_executable</code> does not work",
  "id": "5a564427232e79134ded6e65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:49:43.139Z",
  "text": "`install_name_tool -add_rpath /usr/lib my_copy_of_python_executable` does not work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "this is baffling",
  "id": "5a56442fae53c15903d00672",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:49:51.600Z",
  "text": "this is baffling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "the other thing to keep in mind is that libllvmlite.dylib is loaded with <code>ctypes.CDLL</code>, which may also have different behavior somehow?",
  "id": "5a5644e1290a1f4561718d56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:52:49.852Z",
  "text": "the other thing to keep in mind is that libllvmlite.dylib is loaded with `ctypes.CDLL`, which may also have different behavior somehow?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "this is rapidly becoming an Antoine question...  Did ctypes interaction with rpath change between 2.7 and 3.x?",
  "id": "5a5645605a9ebe4f756e594f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2018-01-10T16:54:56.520Z",
  "text": "this is rapidly becoming an Antoine question...  Did ctypes interaction with rpath change between 2.7 and 3.x?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;m starting to wonder if the SIP protection goes beyond the kernel, and Apple built the system python is a peculiar way.",
  "id": "5a564850d0514c785b140660",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:07:28.973Z",
  "text": "I'm starting to wonder if the SIP protection goes beyond the kernel, and Apple built the system python is a peculiar way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "omg, yes, they did",
  "id": "5a5648aaba39a53f1afcc921",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:08:58.116Z",
  "text": "omg, yes, they did",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "amazing",
  "id": "5a56490cce68c3bc74a08b04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:10:36.446Z",
  "text": "amazing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "just confirmed experimentally that the python that Apple ships apparently removes DYLD_LIBRARY_PATH from the environment",
  "id": "5a564926ae53c15903d0277b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:11:02.110Z",
  "text": "just confirmed experimentally that the python that Apple ships apparently removes DYLD_LIBRARY_PATH from the environment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "no one else&#39;s python seems to do this",
  "id": "5a56493ab48e8c3566c40109",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:11:22.287Z",
  "text": "no one else's python seems to do this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm I wonder if Ray knows about that, I&#39;ll go ask.",
  "id": "5a56494ab48e8c3566c40166",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:11:38.933Z",
  "text": "hmmm I wonder if Ray knows about that, I'll go ask.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "what is kind of amazing is that whatever is happening here is in the python binary itself",
  "id": "5a564976ba39a53f1afccd93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:12:22.141Z",
  "text": "what is kind of amazing is that whatever is happening here is in the python binary itself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "if I copy the binary to another location and run it from there, the same stripping happens",
  "id": "5a56498cb48e8c3566c4037d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 3,
  "sent": "2018-01-10T17:12:44.580Z",
  "text": "if I copy the binary to another location and run it from there, the same stripping happens",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "even /tmp",
  "id": "5a564994b48e8c3566c4039f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-10T17:12:52.489Z",
  "text": "even /tmp",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "or /var/tmp ",
  "id": "5a564997290a1f456171ac9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-10T17:12:55.105Z",
  "text": "or /var/tmp ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I copied to my home directory",
  "id": "5a56499bb48e8c3566c403c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-10T17:12:59.536Z",
  "text": "I copied to my home directory",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "assuming that would be good enough",
  "id": "5a56499fb48e8c3566c403d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-10T17:13:03.579Z",
  "text": "assuming that would be good enough",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "\\/tmp is the magic place",
  "id": "5a5649afce68c3bc74a08ee9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-10T17:13:19.294Z",
  "text": "\\/tmp is the magic place",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that allows DYLD_* to work apparently",
  "id": "5a5649cdce68c3bc74a08f9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-10T17:13:49.546Z",
  "text": "that allows DYLD_* to work apparently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I still see it filtered out of os.environ when I run the binary from there...",
  "id": "5a5649feba39a53f1afcd0b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-01-10T17:14:38.718Z",
  "text": "I still see it filtered out of os.environ when I run the binary from there...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm",
  "id": "5a564a0d83152df26d556dc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:14:53.426Z",
  "text": "hmmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Anyway, this explains one issue",
  "id": "5a564a20ce68c3bc74a09204",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:15:12.114Z",
  "text": "Anyway, this explains one issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I suppose trying with SIP disabled might yield something new?",
  "id": "5a564a20d0514c785b140f4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:15:12.217Z",
  "text": "I suppose trying with SIP disabled might yield something new?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(reboot required)",
  "id": "5a564a275a9ebe4f756e78f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:15:19.868Z",
  "text": "(reboot required)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I don&#39;t know why adding an rpath to the binary I copied also doesn&#39;t seem to have any effect",
  "id": "5a564a41290a1f456171afdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:15:45.995Z",
  "text": "I don't know why adding an rpath to the binary I copied also doesn't seem to have any effect",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "bizarre",
  "id": "5a564a8c290a1f456171b12a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:17:00.420Z",
  "text": "bizarre",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "OK, so stepping back, the goal here is two-fold:<br>1) Is there an easy workaround for someone dealing with this issue who already has llvmlite installed?<br>2) What can we do to our wheel build to ensure this isn&#39;t a problem for anyone else?",
  "id": "5a564a8fce68c3bc74a093eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:17:03.818Z",
  "text": "OK, so stepping back, the goal here is two-fold:\n1) Is there an easy workaround for someone dealing with this issue who already has llvmlite installed?\n2) What can we do to our wheel build to ensure this isn't a problem for anyone else?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "there&#39;s a mammoth selection of debug flags you can enable, <code>man dyld</code> shows them, I ran with them set and it&#39;s quite useful",
  "id": "5a564ab1b48e8c3566c40bc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:17:37.838Z",
  "text": "there's a mammoth selection of debug flags you can enable, `man dyld` shows them, I ran with them set and it's quite useful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so far the &quot;easiest&quot; workaround requires running install_name_tool twice on libllvmlite.dylib",
  "id": "5a564ac9ce68c3bc74a09500",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:18:01.559Z",
  "text": "so far the \"easiest\" workaround requires running install_name_tool twice on libllvmlite.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "copy the system zlib into the llvmlite.dylib dir?",
  "id": "5a564aeaba39a53f1afcd735",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:18:34.247Z",
  "text": "copy the system zlib into the llvmlite.dylib dir?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "would that work",
  "id": "5a564aedba39a53f1afcd797",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:18:37.024Z",
  "text": "would that work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "that&#39;s a good idea",
  "id": "5a564af1290a1f456171b489",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:18:41.204Z",
  "text": "that's a good idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "let&#39;s try",
  "id": "5a564af2290a1f456171b49e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:18:42.950Z",
  "text": "let's try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "nope..",
  "id": "5a564b265a9ebe4f756e7e9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:19:34.796Z",
  "text": "nope..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-10T17:20:06.704Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "It&#39;s like having <code>@rpath</code> in the library name just doesn&#39;t work?!",
  "id": "5a564b3a6117191e614cd1e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:19:54.710Z",
  "text": "It's like having `@rpath` in the library name just doesn't work?!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I wonder if LC_RPATH has <code>.</code> on it",
  "id": "5a564cb46117191e614cdc5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:26:12.996Z",
  "text": "I wonder if LC_RPATH has `.` on it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I think the long term solution is we need our wheel building to run the above install_name_tool commands to change the rpath to an explicit /usr/lib path",
  "id": "5a564d94d0514c785b14270e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-01-10T17:29:56.413Z",
  "text": "I think the long term solution is we need our wheel building to run the above install_name_tool commands to change the rpath to an explicit /usr/lib path",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "the conda build should be left as is, of course",
  "id": "5a564dce6117191e614ce3f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:30:54.680Z",
  "text": "the conda build should be left as is, of course",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "there the <span data-link-type=\"mention\" data-screen-name=\"rpath\" class=\"mention\">@rpath</span> is appropriate",
  "id": "5a564dd483152df26d5588b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "rpath",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:31:00.435Z",
  "text": "there the @rpath is appropriate",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that&#39;s fine so long as the system libz is compatible with the libz llvmdev was linked against",
  "id": "5a564de1d0514c785b1429bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:31:13.896Z",
  "text": "I think that's fine so long as the system libz is compatible with the libz llvmdev was linked against",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I still haven&#39;t figured out how pillow searches the .dylibs directory for libraries",
  "id": "5a564e0f290a1f456171c748",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:31:59.259Z",
  "text": "I still haven't figured out how pillow searches the .dylibs directory for libraries",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "if we wanted to copy their solution to the problem",
  "id": "5a564e1a290a1f456171c764",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:32:10.544Z",
  "text": "if we wanted to copy their solution to the problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "they are using <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span>",
  "id": "5a564e4ece68c3bc74a0acbf",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:33:02.705Z",
  "text": "they are using @loader_path",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "with is &quot;replaced with the path to the directory containing the mach-o binary which contains the load command using <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span>&quot;",
  "id": "5a564e85ae53c15903d04857",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:33:57.157Z",
  "text": "with is \"replaced with the path to the directory containing the mach-o binary which contains the load command using @loader_path\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "s/^with/which/",
  "id": "5a564e90290a1f456171caee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:34:08.432Z",
  "text": "s/^with/which/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the PIL DSO that&#39;s dlopen&#39;d has <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span>/.dylibs/libfoo.dylib",
  "id": "5a564edb232e79134dedaf65",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:35:23.820Z",
  "text": "the PIL DSO that's dlopen'd has @loader_path/.dylibs/libfoo.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so when the resolver goes looking I think it replaces the <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span> with the dir in which the DSO resides, the directory structure is like:",
  "id": "5a564f18ce68c3bc74a0b038",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:36:24.345Z",
  "text": "so when the resolver goes looking I think it replaces the @loader_path with the dir in which the DSO resides, the directory structure is like:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "&lt;path&gt;/some_PIL_DSO.dylib",
  "id": "5a564f2c6117191e614cedce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:36:44.874Z",
  "text": "<path>/some_PIL_DSO.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "&lt;path&gt;/.dylibs/some_required_PIL_DSO.dylib",
  "id": "5a564f3aae53c15903d04d4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:36:58.951Z",
  "text": "<path>/.dylibs/some_required_PIL_DSO.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, I was able to manually make that work",
  "id": "5a564f4cae53c15903d04e0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:37:16.151Z",
  "text": "ok, I was able to manually make that work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so when some_PIL_DSO.dylib is loaded, the <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span> will be replaced with path and it finds stuff",
  "id": "5a564f615a9ebe4f756e9cd6",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:37:37.086Z",
  "text": "so when some_PIL_DSO.dylib is loaded, the @loader_path will be replaced with path and it finds stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah good, I guess our understanding of that is right then",
  "id": "5a564f6aae53c15903d04f7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:37:46.948Z",
  "text": "ah good, I guess our understanding of that is right then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the <span data-link-type=\"mention\" data-screen-name=\"rpath\" class=\"mention\">@rpath</span> is still slightly mysterious in my mind due to corner cases",
  "id": "5a564f8183152df26d5595e2",
  "issues": [],
  "mentions": [
   {
    "screenName": "rpath",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:09.160Z",
  "text": "the @rpath is still slightly mysterious in my mind due to corner cases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "interestingly, it didn&#39;t work if I put the libz.1.dylib next to libllvmlite.dylib",
  "id": "5a564f8ace68c3bc74a0b46e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:18.262Z",
  "text": "interestingly, it didn't work if I put the libz.1.dylib next to libllvmlite.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I needed to use a subdirectory",
  "id": "5a564f92290a1f456171d0b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:26.667Z",
  "text": "I needed to use a subdirectory",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "with the <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span> ?",
  "id": "5a564f9c6117191e614cf0a0",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:36.563Z",
  "text": "with the @loader_path ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah",
  "id": "5a564f9e83152df26d55964b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:38.594Z",
  "text": "yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "was it set to <code>.</code> ?",
  "id": "5a564fa35a9ebe4f756e9daa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:43.813Z",
  "text": "was it set to `.` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span>/libz.1.dylib",
  "id": "5a564fad232e79134dedb5ae",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:53.869Z",
  "text": "@loader_path/libz.1.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "didn&#39;t work",
  "id": "5a564fb0ae53c15903d051a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:38:56.139Z",
  "text": "didn't work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "had to use <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span>/.dylibs/libz.1.dylib",
  "id": "5a564fbcce68c3bc74a0b557",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:39:08.126Z",
  "text": "had to use @loader_path/.dylibs/libz.1.dylib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm",
  "id": "5a564fc1232e79134dedb60f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:39:13.284Z",
  "text": "hmmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if you put in <code>@loader_path/./libz.1.dylib</code> ?",
  "id": "5a564fcd83152df26d559765",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:39:25.521Z",
  "text": "if you put in `@loader_path/./libz.1.dylib` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "there is a fractal distribution of rabbit holes here :)",
  "id": "5a564fd4290a1f456171d21d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:39:32.184Z",
  "text": "there is a fractal distribution of rabbit holes here :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "BSD is at the bottom",
  "id": "5a564ff1b48e8c3566c43019",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:40:01.352Z",
  "text": "BSD is at the bottom",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and yes, you are correct",
  "id": "5a56501f5a9ebe4f756ea1cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:40:47.548Z",
  "text": "and yes, you are correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "about BSD or the extra dot ?",
  "id": "5a565030232e79134dedb939",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:41:04.411Z",
  "text": "about BSD or the extra dot ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "you cannot do <code>@loader_path/libz.1.dylib</code>, you must do <code>@loader_path/./libz.1.dylib</code>",
  "id": "5a5650355a9ebe4f756ea229",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:41:09.061Z",
  "text": "you cannot do `@loader_path/libz.1.dylib`, you must do `@loader_path/./libz.1.dylib`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, so I think that branch of mystery is somewhat closed :)",
  "id": "5a565049b48e8c3566c43254",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:41:29.398Z",
  "text": "ok, so I think that branch of mystery is somewhat closed :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes",
  "id": "5a5650526117191e614cf6d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:41:38.915Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so now the real question: Is it a good idea for our wheels to ship both libz and libc++?",
  "id": "5a56505f5a9ebe4f756ea3da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:41:51.014Z",
  "text": "so now the real question: Is it a good idea for our wheels to ship both libz and libc++?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "the former I&#39;m not worried about, but the latter does worry me a bit",
  "id": "5a56506883152df26d559ad2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:42:00.654Z",
  "text": "the former I'm not worried about, but the latter does worry me a bit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rpath\" class=\"mention\">@rpath</span> is still weird, SIP is still weird, and what the users on the ticket see is still weird",
  "id": "5a56506dd0514c785b1439d8",
  "issues": [],
  "mentions": [
   {
    "screenName": "rpath",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:42:05.311Z",
  "text": "@rpath is still weird, SIP is still weird, and what the users on the ticket see is still weird",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m minor grade concerned about the former and major grade for the latter",
  "id": "5a56507bba39a53f1afcfc96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:42:19.798Z",
  "text": "I'm minor grade concerned about the former and major grade for the latter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "this is where a PEP thing would be useful",
  "id": "5a56508fd0514c785b143ab4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:42:39.569Z",
  "text": "this is where a PEP thing would be useful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, if I have to pick awful things to do, I&#39;d rather force our library to use /usr/lib",
  "id": "5a565102290a1f456171d8f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:44:34.591Z",
  "text": "yeah, if I have to pick awful things to do, I'd rather force our library to use /usr/lib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "How about this... we can look up the libz symbols used by llvm, IIRC there are 4, they are probably going to be around in system libz, so I think we can probably install_name_tool them into existence",
  "id": "5a56511c83152df26d559df8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:45:00.690Z",
  "text": "How about this... we can look up the libz symbols used by llvm, IIRC there are 4, they are probably going to be around in system libz, so I think we can probably install_name_tool them into existence",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I worry more about libstdc++",
  "id": "5a56512ed0514c785b143ef4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:45:18.803Z",
  "text": "I worry more about libstdc++",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, perhaps the most correct thing to do is to build the llvmlite wheel outside of a conda environment",
  "id": "5a56514ed0514c785b143fb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:45:50.437Z",
  "text": "yeah, perhaps the most correct thing to do is to build the llvmlite wheel outside of a conda environment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It&#39;s like the old problem of having to try and compile things with ancient symbols to make compatible",
  "id": "5a565157ce68c3bc74a0bf7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:45:59.145Z",
  "text": "It's like the old problem of having to try and compile things with ancient symbols to make compatible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "using XCode and /usr/lib",
  "id": "5a565162ba39a53f1afd010d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:46:10.042Z",
  "text": "using XCode and /usr/lib",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The conda compilers are going to have the new symbols so unless the system ones are as-new then it&#39;s not going to find them even if we sort the &quot;find a libstdc++&quot; problem",
  "id": "5a565191ce68c3bc74a0c087",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:46:57.947Z",
  "text": "The conda compilers are going to have the new symbols so unless the system ones are as-new then it's not going to find them even if we sort the \"find a libstdc++\" problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "one thing to note is that all of our current wheel users are effectively mixing libc++, since they aren&#39;t getting this error...",
  "id": "5a5651b75a9ebe4f756eac6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:47:35.316Z",
  "text": "one thing to note is that all of our current wheel users are effectively mixing libc++, since they aren't getting this error...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess most wheels build using Xcode / llvm 4 from Apple?",
  "id": "5a5651d26117191e614cffa1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-01-10T17:48:02.364Z",
  "text": "I guess most wheels build using Xcode / llvm 4 from Apple?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I would assume",
  "id": "5a5651d983152df26d55a265",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:48:09.308Z",
  "text": "I would assume",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "where as we do the hoop jump to get the new llvm compiler chain",
  "id": "5a5651e4ba39a53f1afd03cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:48:20.792Z",
  "text": "where as we do the hoop jump to get the new llvm compiler chain",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "One question for Ray would be how compatible libc++ (which is different than the libstdc++ from Linux distributions) is between Anaconda and macOS",
  "id": "5a56520a5a9ebe4f756eae4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:48:58.403Z",
  "text": "One question for Ray would be how compatible libc++ (which is different than the libstdc++ from Linux distributions) is between Anaconda and macOS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I assume that&#39;s the answer, build using system tool chain, I don&#39;t like it much, but it&#39;d most likely work",
  "id": "5a565215290a1f456171df0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:49:09.073Z",
  "text": "I assume that's the answer, build using system tool chain, I don't like it much, but it'd most likely work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "if it is expected that the different libc++ should work together on macOS (maybe they solved this better than Linux??), then we can just make a small change to our wheel build",
  "id": "5a565245d0514c785b144656",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:49:57.655Z",
  "text": "if it is expected that the different libc++ should work together on macOS (maybe they solved this better than Linux??), then we can just make a small change to our wheel build",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "its libc++ a fat bin ?",
  "id": "5a5652a3ae53c15903d063c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:51:31.767Z",
  "text": "its libc++ a fat bin ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "s/ts/s/",
  "id": "5a5652bc6117191e614d05bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:51:56.211Z",
  "text": "s/ts/s/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yes",
  "id": "5a5652be290a1f456171e24e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:51:58.393Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and I think it is intended to be forward/backward compatible",
  "id": "5a5652d5232e79134dedca44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:52:21.332Z",
  "text": "and I think it is intended to be forward/backward compatible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "presumably they would increment it to libc++.2.dylib if they needed to break something",
  "id": "5a5652e15a9ebe4f756eb2c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:52:33.981Z",
  "text": "presumably they would increment it to libc++.2.dylib if they needed to break something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it may be ok then",
  "id": "5a5653046117191e614d0778",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:53:08.121Z",
  "text": "it may be ok then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "might be a try-it-and-see",
  "id": "5a56530d290a1f456171e50c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:53:17.452Z",
  "text": "might be a try-it-and-see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, now to figure out how to insert extra commands when building a wheel :)",
  "id": "5a565321232e79134dedcc9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:53:37.883Z",
  "text": "ok, now to figure out how to insert extra commands when building a wheel :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Any thoughts on how to force <code>install_name_tool</code> to run only when building wheels?",
  "id": "5a56533a83152df26d55a9ca",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:54:02.524Z",
  "text": "@sklam: Any thoughts on how to force `install_name_tool` to run only when building wheels?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<p>(Using gitter to cut and paste some commands here:</p><pre><code>sudo install_name_tool -change <span class=\"string\">\"@rpath/libz.1.dylib\"</span> <span class=\"string\">\"/usr/lib/libz.1.dylib\"</span> <span class=\"regexp\">/Library/</span>Python<span class=\"regexp\">/2.7/</span>site-packages<span class=\"regexp\">/llvmlite/</span>binding/libllvmlite.dylib\nsudo install_name_tool -change <span class=\"string\">\"@rpath/libc++.1.dylib\"</span> <span class=\"string\">\"/usr/lib/libc++.1.dylib\"</span> <span class=\"regexp\">/Library/</span>Python<span class=\"regexp\">/2.7/</span>site-packages<span class=\"regexp\">/llvmlite/</span>binding/libllvmlite.dylib</code></pre><p>)</p>",
  "id": "5a565429232e79134dedd2d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T17:58:01.557Z",
  "text": "(Using gitter to cut and paste some commands here:\n```\nsudo install_name_tool -change \"@rpath/libz.1.dylib\" \"/usr/lib/libz.1.dylib\" /Library/Python/2.7/site-packages/llvmlite/binding/libllvmlite.dylib\nsudo install_name_tool -change \"@rpath/libc++.1.dylib\" \"/usr/lib/libc++.1.dylib\" /Library/Python/2.7/site-packages/llvmlite/binding/libllvmlite.dylib\n```\n)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "we can make a patching script to do that",
  "id": "5a565633232e79134dedde37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T18:06:43.318Z",
  "text": "we can make a patching script to do that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "just like the auditwheel",
  "id": "5a56563cba39a53f1afd1ad0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T18:06:52.815Z",
  "text": "just like the auditwheel",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s really just unzipping the wheel, patch and re-zip",
  "id": "5a56565bb48e8c3566c45891",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T18:07:23.043Z",
  "text": "it\u2019s really just unzipping the wheel, patch and re-zip",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, just updated the issue.  <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: can you tackle the PR to fix this (maybe after the ggufunc write up)?",
  "id": "5a565c41ba39a53f1afd3df4",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T18:32:33.993Z",
  "text": "ok, just updated the issue.  @sklam: can you tackle the PR to fix this (maybe after the ggufunc write up)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "ok",
  "id": "5a565ce9d0514c785b14822f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T18:35:21.468Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;ll hang on to this laptop to check the fix.",
  "id": "5a565cff6117191e614d5179",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T18:35:43.852Z",
  "text": "I'll hang on to this laptop to check the fix.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> can you take another look at my PR when you get a minute - I fixed the merge conflict -",
  "id": "5a5699c1ae53c15903d200c6",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-10T22:54:57.789Z",
  "text": "@sklam can you take another look at my PR when you get a minute - I fixed the merge conflict -",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> , thanks for your PR.  It\u2019s merged.  </p><p>Btw, for future PRs, it would be easier for us to review if the branch is not rebased/force-pushed.  The github review system works better that way and makes it easier to see what is already reviewed.</p>",
  "id": "5a56aa01ae53c15903d25b0d",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T00:04:17.625Z",
  "text": "@njwhite , thanks for your PR.  It\u2019s merged.  \n\nBtw, for future PRs, it would be easier for us to review if the branch is not rebased/force-pushed.  The github review system works better that way and makes it easier to see what is already reviewed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> thanks, will do",
  "id": "5a570610290a1f4561752854",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T06:37:04.069Z",
  "text": "@sklam thanks, will do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "after speaking a bit with Ray",
  "id": "5a5761b0ce68c3bc74a5dcdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T13:08:00.739Z",
  "text": "after speaking a bit with Ray",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "seems like OSX is ok with loading N libraries of the same soname in the same process",
  "id": "5a5761ceb48e8c3566c98b78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T13:08:30.034Z",
  "text": "seems like OSX is ok with loading N libraries of the same soname in the same process",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and doing whls with the zlib and libc++ libs included and a <span data-link-type=\"mention\" data-screen-name=\"loader_path\" class=\"mention\">@loader_path</span> on the llvmlite/numba DSOs would likely be the way round this",
  "id": "5a57622eb48e8c3566c98ddd",
  "issues": [],
  "mentions": [
   {
    "screenName": "loader_path",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T13:10:06.326Z",
  "text": "and doing whls with the zlib and libc++ libs included and a @loader_path on the llvmlite/numba DSOs would likely be the way round this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "llvm could also be built with static libc++ but if effort is needed to ship zlib in the whl then it&#39;s probably not much more effort to also ship libc++",
  "id": "5a576268b48e8c3566c98ee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T13:11:04.630Z",
  "text": "llvm could also be built with static libc++ but if effort is needed to ship zlib in the whl then it's probably not much more effort to also ship libc++",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that way the numba library chain in a whl is actually the AD one, which we know and test",
  "id": "5a57628f290a1f4561771490",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T13:11:43.540Z",
  "text": "that way the numba library chain in a whl is actually the AD one, which we know and test",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ugh, fun fact: Github Wiki pages do not support all the same markdown extensions that work in the issue tracker.  Autolinking to issues based on PR number doesn&#39;t work.  :(",
  "id": "5a579de0ae53c15903d71d98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T17:24:48.152Z",
  "text": "ugh, fun fact: Github Wiki pages do not support all the same markdown extensions that work in the issue tracker.  Autolinking to issues based on PR number doesn't work.  :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-11T18:04:45.004Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "/all First meeting minutes posted here: <a href=\"https://github.com/numba/numba/wiki/Minutes_2018_01_11\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/wiki/Minutes_2018_01_11</a>",
  "id": "5a57a73683152df26d5c8fed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-11T18:04:38.302Z",
  "text": "/all First meeting minutes posted here: https://github.com/numba/numba/wiki/Minutes_2018_01_11",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/wiki/Minutes_2018_01_11"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> so <span data-link-type=\"issue\" data-issue=\"2661\" class=\"issue\">#2661</span> actually passes travis now, forgot the simulator has very different code paths ",
  "id": "5a5bc6fb1dcb91f1774da23a",
  "issues": [
   {
    "number": "2661"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-14T21:09:15.315Z",
  "text": "@sklam so #2661 actually passes travis now, forgot the simulator has very different code paths ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ugh, just an an FYI in case no one noticed this: Travis CI only has build environments up to Ubuntu 14.04, but the CUDA toolkit 9.0 and later have Ubuntu 16.04 as a minimum.  This means that if you need to nvcc inside a Travis-CI job, you are going to soon be forced to run a docker inside your Travis-CI build environment to load the required version of Ubuntu.",
  "id": "5a5d20b7290a1f4561914b77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-15T21:44:23.378Z",
  "text": "ugh, just an an FYI in case no one noticed this: Travis CI only has build environments up to Ubuntu 14.04, but the CUDA toolkit 9.0 and later have Ubuntu 16.04 as a minimum.  This means that if you need to nvcc inside a Travis-CI job, you are going to soon be forced to run a docker inside your Travis-CI build environment to load the required version of Ubuntu.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Doesn&#39;t affect Numba, but is super annoying for libgdf",
  "id": "5a5d20c6ae53c15903efdc34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-15T21:44:38.208Z",
  "text": "Doesn't affect Numba, but is super annoying for libgdf",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"here\" class=\"mention\">@here</span> could I get a review for <span data-link-type=\"issue\" data-issue=\"2687\" class=\"issue\">#2687</span> please?",
  "id": "5a5fd3b35ade18be398c0dab",
  "issues": [
   {
    "number": "2687"
   }
  ],
  "mentions": [
   {
    "screenName": "here",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-17T22:52:35.242Z",
  "text": "@here could I get a review for #2687 please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"here\" class=\"mention\">@here</span> also, could someone review <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> &#39;s <span data-link-type=\"issue\" data-issue=\"2690\" class=\"issue\">#2690</span>?",
  "id": "5a6232e46117191e6188bd6d",
  "issues": [
   {
    "number": "2690"
   }
  ],
  "mentions": [
   {
    "screenName": "here",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-01-19T18:03:16.046Z",
  "text": "@here also, could someone review @sklam 's #2690?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "BTW: The matrix multiply test failure we were seeing with Python 3.6 / NumPy 1.14 / Win32&amp;Win64 seems to have gone away with build 1 of the NumPy 1.14.0 conda package.  Trying to get some ideas from the Anaconda team about what might have happened there.",
  "id": "5a69edb5c95f22546de3a464",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-01-25T14:46:13.246Z",
  "text": "BTW: The matrix multiply test failure we were seeing with Python 3.6 / NumPy 1.14 / Win32&Win64 seems to have gone away with build 1 of the NumPy 1.14.0 conda package.  Trying to get some ideas from the Anaconda team about what might have happened there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ah, ok.  response from Anaconda team is that there were some issues with the MKL build on Windows that were resolved.",
  "id": "5a69ffec4a6b0dd32b479de5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-01-25T16:03:56.014Z",
  "text": "ah, ok.  response from Anaconda team is that there were some issues with the MKL build on Windows that were resolved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "So I think that explains it.",
  "id": "5a69fff1d9f895c3605db4d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-01-25T16:04:01.149Z",
  "text": "So I think that explains it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ooh, looks like TravisCI has increased the number of macOS build workers: <a href=\"https://www.traviscistatus.com/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.traviscistatus.com/</a>",
  "id": "5a6a0be20ad3e04b1b69f255",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-01-25T16:54:58.357Z",
  "text": "ooh, looks like TravisCI has increased the number of macOS build workers: https://www.traviscistatus.com/",
  "unread": false,
  "urls": [
   {
    "url": "https://www.traviscistatus.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yeah!",
  "id": "5a6a0becc95f22546de4695a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-25T16:55:08.789Z",
  "text": "yeah!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "the backlog is starting to come down now (slowly)",
  "id": "5a6a0becc95f22546de4695c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-25T16:55:08.889Z",
  "text": "the backlog is starting to come down now (slowly)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "there are probably still 600 builds in front of us",
  "id": "5a6a0ce1d9f895c3605e096f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-25T16:59:13.050Z",
  "text": "there are probably still 600 builds in front of us",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Could I get a review for <span data-link-type=\"issue\" data-issue=\"2702\" class=\"issue\">#2702</span> please? Thanks-",
  "id": "5a6b4a040ad3e04b1b70644d",
  "issues": [
   {
    "number": "2702"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-26T15:32:19.999Z",
  "text": "Could I get a review for #2702 please? Thanks-",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> , it\u2019s on my todos.  I\u2019ll look at it early next week.  ",
  "id": "5a6b79b9ce68c3bc740a113b",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-26T18:55:53.946Z",
  "text": "@njwhite , it\u2019s on my todos.  I\u2019ll look at it early next week.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": " Thanks <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> , I&#39;m hoping both my remaining PRs get into the February release :)",
  "id": "5a6caa6a4a6b0dd32b54f1eb",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-27T16:35:54.154Z",
  "text": " Thanks @sklam , I'm hoping both my remaining PRs get into the February release :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Looks like this PR is breaking Travis CI: <span data-link-type=\"issue\" data-issue=\"2707\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2707</span>",
  "id": "5a707f33494bd0f530442686",
  "issues": [
   {
    "number": "2707",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-30T14:20:35.927Z",
  "text": "@sklam: Looks like this PR is breaking Travis CI: https://github.com/numba/numba/pull/2707",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Also posted a comment on this PR, which I can merge once addressed: <span data-link-type=\"issue\" data-issue=\"2706\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2706</span>",
  "id": "5a707f5198927d574555e727",
  "issues": [
   {
    "number": "2706",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-30T14:21:05.111Z",
  "text": "@sklam: Also posted a comment on this PR, which I can merge once addressed: https://github.com/numba/numba/pull/2706",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p>Here\u2019s the gufunc rewrite plan writeup: <a href=\"https://gist.github.com/sklam/9fe5431672441e6a689e3ec2a121d104\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/sklam/9fe5431672441e6a689e3ec2a121d104</a></p><p>Please feel free to comment in the gist.</p>",
  "id": "5a72086b47505419174b963a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-01-31T18:18:19.848Z",
  "text": "Here\u2019s the gufunc rewrite plan writeup: https://gist.github.com/sklam/9fe5431672441e6a689e3ec2a121d104\n\nPlease feel free to comment in the gist.\n",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/sklam/9fe5431672441e6a689e3ec2a121d104"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I fixed the reshaping PR. When&#39;s the deadline for the next release? Thanks -",
  "id": "5a733c2ae217167e2c2cd176",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-02-01T16:11:22.074Z",
  "text": "@sklam I fixed the reshaping PR. When's the deadline for the next release? Thanks -",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "We are looking at Feb 7 for the RC release",
  "id": "5a7341d84a6b0dd32b77f2d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-02-01T16:35:36.066Z",
  "text": "We are looking at Feb 7 for the RC release",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Ok, looking forward to it :)",
  "id": "5a734a5136de78850cdb2b22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-02-01T17:11:45.559Z",
  "text": "Ok, looking forward to it :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Last two weeks of meeting minutes have been posted to the wiki: <a href=\"https://github.com/numba/numba/wiki/Meeting-Minutes\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/wiki/Meeting-Minutes</a>",
  "id": "5a735c6d6117191e61e12bfe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-02-01T18:29:01.882Z",
  "text": "Last two weeks of meeting minutes have been posted to the wiki: https://github.com/numba/numba/wiki/Meeting-Minutes",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/wiki/Meeting-Minutes"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/teoliphant",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/254880?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/254880?v=4&s=60",
   "displayName": "Travis E. Oliphant",
   "gv": "4",
   "id": "54185f0c163965c9bc204e58",
   "url": "/teoliphant",
   "username": "teoliphant",
   "v": 19
  },
  "html": "Thanks for posting the Numba meeting minutes.  Are these meetings public?",
  "id": "5a7405f8b3c4a0d376ce60b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-02-02T06:32:24.428Z",
  "text": "Thanks for posting the Numba meeting minutes.  Are these meetings public?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "The meetings are not currently public (to keep the hangout size manageable), but our goal is to get the minutes live by the next day.  We missed last week, which is why two went up at once.",
  "id": "5a747b057dcd63481f0c340c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-02T14:51:49.372Z",
  "text": "The meetings are not currently public (to keep the hangout size manageable), but our goal is to get the minutes live by the next day.  We missed last week, which is why two went up at once.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Well, this is... unexpected: <a href=\"https://github.com/numba/numba/issues/2451#issuecomment-363111992\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/2451#issuecomment-363111992</a>",
  "id": "5a787c7db3c4a0d376e344e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-05T15:47:09.772Z",
  "text": "Well, this is... unexpected: https://github.com/numba/numba/issues/2451#issuecomment-363111992",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/2451#issuecomment-363111992"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I wonder how many people actually have access to the hardware required to solve that problem?",
  "id": "5a787c9836de78850cf3c6f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-05T15:47:36.053Z",
  "text": "I wonder how many people actually have access to the hardware required to solve that problem?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: I noticed this PR fell through the cracks.  Is it still good?  <span data-link-type=\"issue\" data-issue=\"2610\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2610</span>",
  "id": "5a79c1214a6b0dd32b978d76",
  "issues": [
   {
    "number": "2610",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T14:52:17.432Z",
  "text": "@sklam: I noticed this PR fell through the cracks.  Is it still good?  https://github.com/numba/numba/pull/2610",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I think this might be the last PR we need to get in before tagging the RC tomorrow: <span data-link-type=\"issue\" data-issue=\"2716\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2716</span>",
  "id": "5a79c39a4a6b0dd32b97a1b9",
  "issues": [
   {
    "number": "2716",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:02:50.672Z",
  "text": "I think this might be the last PR we need to get in before tagging the RC tomorrow: https://github.com/numba/numba/pull/2716",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I suspect that the parfor vectorization improvements in <span data-link-type=\"issue\" data-issue=\"2709\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2709</span> need a little more time to bake.",
  "id": "5a79c3cde217167e2c4ce26c",
  "issues": [
   {
    "number": "2709",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:03:41.520Z",
  "text": "I suspect that the parfor vectorization improvements in https://github.com/numba/numba/pull/2709 need a little more time to bake.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Want to knock out some &quot;easy&quot; bugs before the dev window closes?  :)",
  "id": "5a79cfa34a6b0dd32b97f669",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:54:11.590Z",
  "text": "@sklam: Want to knock out some \"easy\" bugs before the dev window closes?  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "sure",
  "id": "5a79cfb136de78850cfb4200",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:54:25.426Z",
  "text": "sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Scanning through the open issues for this milestone I found a few:",
  "id": "5a79cfb57dcd63481f25de12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:54:29.954Z",
  "text": "Scanning through the open issues for this milestone I found a few:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "doc bug: <span data-link-type=\"issue\" data-issue=\"2595\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2595</span>",
  "id": "5a79cfbfa3447aac754bfdac",
  "issues": [
   {
    "number": "2595",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:54:39.067Z",
  "text": "doc bug: https://github.com/numba/numba/issues/2595",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "doc bug: <span data-link-type=\"issue\" data-issue=\"2598\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2598</span>",
  "id": "5a79cfd5b3c4a0d376eaf462",
  "issues": [
   {
    "number": "2598",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:55:01.393Z",
  "text": "doc bug: https://github.com/numba/numba/issues/2598",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "This the opposite of easy, but Stuart did get it down to a small reproducer: <a href=\"https://github.com/numba/numba/issues/2481#issuecomment-319626068\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/2481#issuecomment-319626068</a>",
  "id": "5a79d00b93be87284d82802e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:55:55.479Z",
  "text": "This the opposite of easy, but Stuart did get it down to a small reproducer: https://github.com/numba/numba/issues/2481#issuecomment-319626068",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/2481#issuecomment-319626068"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i\u2019ll start with the easy doc fixes first",
  "id": "5a79d02e7084124a3442c18f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:56:30.797Z",
  "text": "i\u2019ll start with the easy doc fixes first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "And I can&#39;t decide if this one is easy, impossible, or &quot;works as intended&quot;: <span data-link-type=\"issue\" data-issue=\"2643\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2643</span>",
  "id": "5a79d04be217167e2c4d37a7",
  "issues": [
   {
    "number": "2643",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:56:59.338Z",
  "text": "And I can't decide if this one is easy, impossible, or \"works as intended\": https://github.com/numba/numba/issues/2643",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and another doc bug: <span data-link-type=\"issue\" data-issue=\"2200\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2200</span>",
  "id": "5a79d0857084124a3442c415",
  "issues": [
   {
    "number": "2200",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:57:57.571Z",
  "text": "and another doc bug: https://github.com/numba/numba/issues/2200",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-06T15:58:04.974Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that one is a work as intended ",
  "id": "5a79d0894a6b0dd32b97fc34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:58:01.898Z",
  "text": "that one is a work as intended ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ah, ok, well if you can explain why in that issue, then you can also close it :)",
  "id": "5a79d0a936de78850cfb476b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T15:58:33.533Z",
  "text": "ah, ok, well if you can explain why in that issue, then you can also close it :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so there you go, 3 doc updates, 1 not bug, and a loop-lifting rabbit hole  :)",
  "id": "5a79d0e2ce68c3bc74517157",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T15:59:30.777Z",
  "text": "so there you go, 3 doc updates, 1 not bug, and a loop-lifting rabbit hole  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-06T16:00:00.843Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "should we call them &quot;snake holes&quot;?",
  "id": "5a79d0f9e217167e2c4d3cca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T15:59:53.922Z",
  "text": "should we call them \"snake holes\"?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I closed <span data-link-type=\"issue\" data-issue=\"2643\" class=\"issue\">#2643</span> but that makes me realize we need <span data-link-type=\"issue\" data-issue=\"2721\" class=\"issue\">#2721</span> ",
  "id": "5a79d4056117191e6100b941",
  "issues": [
   {
    "number": "2643"
   },
   {
    "number": "2721"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:12:53.838Z",
  "text": "I closed #2643 but that makes me realize we need #2721 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Do you think the new locking system killed this intermittent bug?  <span data-link-type=\"issue\" data-issue=\"2437\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2437</span>",
  "id": "5a79d502a3447aac754c2111",
  "issues": [
   {
    "number": "2437",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:17:06.729Z",
  "text": "@sklam: Do you think the new locking system killed this intermittent bug?  https://github.com/numba/numba/issues/2437",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I haven&#39;t seen it pop up in a while",
  "id": "5a79d50bb3c4a0d376eb1ad3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:17:15.039Z",
  "text": "I haven't seen it pop up in a while",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Wondering if we should close it",
  "id": "5a79d51336de78850cfb670d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:17:23.829Z",
  "text": "Wondering if we should close it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I think <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> \u2019s last comment is saying it still pops up after the new locking patch.",
  "id": "5a79d590ce68c3bc7451925a",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:19:28.363Z",
  "text": "I think @stuartarchibald \u2019s last comment is saying it still pops up after the new locking patch.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ah, ok",
  "id": "5a79d59cb3c4a0d376eb1e5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:19:40.694Z",
  "text": "ah, ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "checking to see if 2517 is also still around",
  "id": "5a79d5a46117191e6100c30d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:19:48.623Z",
  "text": "checking to see if 2517 is also still around",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yup, still around.",
  "id": "5a79d6d8ce68c3bc74519a2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T16:24:56.563Z",
  "text": "Yup, still around.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: This looks like it was obsoleted by your mixin test refactor: <span data-link-type=\"issue\" data-issue=\"2535\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2535</span>",
  "id": "5a79e02b36de78850cfbb64e",
  "issues": [
   {
    "number": "2535",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T17:04:43.253Z",
  "text": "@sklam: This looks like it was obsoleted by your mixin test refactor: https://github.com/numba/numba/pull/2535",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "/all Issue proposing a plan for Python 2.7 deprecation here: <span data-link-type=\"issue\" data-issue=\"2723\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2723</span>",
  "id": "5a79f05c4a6b0dd32b98d1c4",
  "issues": [
   {
    "number": "2723",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T18:13:48.659Z",
  "text": "/all Issue proposing a plan for Python 2.7 deprecation here: https://github.com/numba/numba/issues/2723",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Wanted to kick this around here before asking for feedback on numba-users and Twitter.",
  "id": "5a79f080ce68c3bc745241a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T18:14:24.448Z",
  "text": "Wanted to kick this around here before asking for feedback on numba-users and Twitter.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> , the plan looks good.  Btw, is it the first time we mention our plan for 1.0?",
  "id": "5a79f88ff283b8e5462a0068",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T18:48:47.932Z",
  "text": "@seibert , the plan looks good.  Btw, is it the first time we mention our plan for 1.0?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Not sure",
  "id": "5a79f9a46117191e6101b20d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-06T18:53:24.675Z",
  "text": "Not sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Maybe obliquely.  :)",
  "id": "5a79f9ae7dcd63481f26e707",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-06T18:53:34.932Z",
  "text": "Maybe obliquely.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Curious why <span data-link-type=\"issue\" data-issue=\"2731\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2731</span> would pass for Python 3.5 / NumPy 1.11 and fail on the other Travis-CI configurations...",
  "id": "5a7b0514b3c4a0d376f1ae58",
  "issues": [
   {
    "number": "2731",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T13:54:28.854Z",
  "text": "Curious why https://github.com/numba/numba/pull/2731 would pass for Python 3.5 / NumPy 1.11 and fail on the other Travis-CI configurations...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, weird, perhaps I altered something incorrectly, seems like an error message string not matching is the root cause",
  "id": "5a7b07fe93be87284d892ea4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T14:06:54.888Z",
  "text": "hmmm, weird, perhaps I altered something incorrectly, seems like an error message string not matching is the root cause",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "string has a hardcoded value, and 5*7 = 35 not 25",
  "id": "5a7b0f80b3c4a0d376f1ed8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T14:38:56.765Z",
  "text": "string has a hardcoded value, and 5*7 = 35 not 25",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "only failed on CI integrations that had CUDA sim support added as this message is specialised to the cuda simulator",
  "id": "5a7b0f9993be87284d895e30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T14:39:21.943Z",
  "text": "only failed on CI integrations that had CUDA sim support added as this message is specialised to the cuda simulator",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ah, makes sense",
  "id": "5a7b100186ef1bb1417d01ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T14:41:05.272Z",
  "text": "ah, makes sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, once CI finishes with these two PRs, I can merge",
  "id": "5a7b1024e217167e2c5438c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T14:41:40.223Z",
  "text": "ok, once CI finishes with these two PRs, I can merge",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> was looking at <span data-link-type=\"issue\" data-issue=\"2541\" class=\"issue\">#2541</span>, whilst we can catch this easily it gets in a bit of trouble with npyufunc and places where a cpython wrapper isn&#39;t needed",
  "id": "5a7b1dd593be87284d89be1b",
  "issues": [
   {
    "number": "2541"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:40:05.549Z",
  "text": "@sklam was looking at #2541, whilst we can catch this easily it gets in a bit of trouble with npyufunc and places where a cpython wrapper isn't needed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "This morning&#39;s lesson: a watched CI system will queue your job forever",
  "id": "5a7b1f7993be87284d89c818",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:47:05.569Z",
  "text": "This morning's lesson: a watched CI system will queue your job forever",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(and then will finish while you are complaining about it",
  "id": "5a7b1faf86ef1bb1417d68cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:47:59.482Z",
  "text": "(and then will finish while you are complaining about it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> / <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Are <span data-link-type=\"issue\" data-issue=\"2725\" class=\"issue\">#2725</span> and <span data-link-type=\"issue\" data-issue=\"2731\" class=\"issue\">#2731</span> the last two PRs pending for this release (aside from changelog)?",
  "id": "5a7b2059b3c4a0d376f26206",
  "issues": [
   {
    "number": "2725"
   },
   {
    "number": "2731"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   },
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:50:49.934Z",
  "text": "@sklam / @stuartarchibald: Are #2725 and #2731 the last two PRs pending for this release (aside from changelog)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, it&#39;s probably all from me, am just doing a CHANGE_LOG etc.",
  "id": "5a7b20d6b3c4a0d376f264fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:52:54.438Z",
  "text": "@seibert, it's probably all from me, am just doing a CHANGE_LOG etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes.   <span data-link-type=\"issue\" data-issue=\"2725\" class=\"issue\">#2725</span> is ready again just pending CI.  And, <span data-link-type=\"issue\" data-issue=\"2731\" class=\"issue\">#2731</span> looks fine to me and also pending CI.",
  "id": "5a7b20eee217167e2c54a76a",
  "issues": [
   {
    "number": "2725"
   },
   {
    "number": "2731"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:53:18.798Z",
  "text": "yes.   #2725 is ready again just pending CI.  And, #2731 looks fine to me and also pending CI.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "We still need to fix the OS X linking with llvmlite wheels, but that isn&#39;t an RC task",
  "id": "5a7b21027084124a344a1356",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:53:38.192Z",
  "text": "We still need to fix the OS X linking with llvmlite wheels, but that isn't an RC task",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I have completely forgotten about it",
  "id": "5a7b2127f283b8e5463058ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:54:15.008Z",
  "text": "I have completely forgotten about it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "apparently a surprising number of people are installing llvmlite wheels to the system python environment",
  "id": "5a7b212a6117191e61081664",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:54:18.253Z",
  "text": "apparently a surprising number of people are installing llvmlite wheels to the system python environment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "we&#39;ve been getting 1-2 instances per week of &quot;yeah, the workaround fixed it for me&quot; messages appearing on that issue since we figured out the manual solution",
  "id": "5a7b214f7dcd63481f2d2be8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:54:55.452Z",
  "text": "we've been getting 1-2 instances per week of \"yeah, the workaround fixed it for me\" messages appearing on that issue since we figured out the manual solution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I wonder if writing a blog post on &quot;sudo pip install considered harmful&quot; would annoy people  :)",
  "id": "5a7b219dce68c3bc7458b873",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T15:56:13.666Z",
  "text": "I wonder if writing a blog post on \"sudo pip install considered harmful\" would annoy people  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, anything you would specifically like to highlight for this release ?",
  "id": "5a7b249f86ef1bb1417d8a93",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   },
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:09:03.823Z",
  "text": "@sklam @seibert, anything you would specifically like to highlight for this release ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "It&#39;s been mostly small bug fixes, but we should call out the improvement in locking to protect the compiler from race conditions.",
  "id": "5a7b24dcb3c4a0d376f28272",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:10:04.826Z",
  "text": "It's been mostly small bug fixes, but we should call out the improvement in locking to protect the compiler from race conditions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Did the PA refactoring PR have any user-facing effects?",
  "id": "5a7b250793be87284d89edc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:10:47.373Z",
  "text": "Did the PA refactoring PR have any user-facing effects?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "parallel arange and linspace",
  "id": "5a7b2553f283b8e546307867",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:12:03.140Z",
  "text": "parallel arange and linspace",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "pndindex is there but not public",
  "id": "5a7b255b4a6b0dd32b9f69ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:12:11.301Z",
  "text": "pndindex is there but not public",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "might as well mention that PA has had some internal improvements",
  "id": "5a7b256f93be87284d89ef9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:12:31.176Z",
  "text": "might as well mention that PA has had some internal improvements",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh and mean, std, var",
  "id": "5a7b25856117191e61083641",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:12:53.194Z",
  "text": "oh and mean, std, var",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh, and you should highlight that njwhite has made several enhancements to CUDA device arrays",
  "id": "5a7b25afb3c4a0d376f28ad0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:13:35.922Z",
  "text": "oh, and you should highlight that njwhite has made several enhancements to CUDA device arrays",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I think those are the 3 top items",
  "id": "5a7b25b44a6b0dd32b9f6c9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:13:40.649Z",
  "text": "I think those are the 3 top items",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "6 Numba PRs in a single release is a new record for a non-core developer :)",
  "id": "5a7b25e1b3c4a0d376f28be2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:14:25.733Z",
  "text": "6 Numba PRs in a single release is a new record for a non-core developer :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes, I&#39;ve got them clocked, and yes, well done njwhite :) thanks for the effort",
  "id": "5a7b260e7dcd63481f2d4c02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:15:10.103Z",
  "text": "yes, I've got them clocked, and yes, well done njwhite :) thanks for the effort",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://github.com/numba/numba/compare/master...stuartarchibald:wip/change_log_0370?expand=1\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/compare/master...stuartarchibald:wip/change_log_0370?expand=1</a>",
  "id": "5a7b2f356117191e61087815",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:54:13.438Z",
  "text": "https://github.com/numba/numba/compare/master...stuartarchibald:wip/change_log_0370?expand=1",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/compare/master...stuartarchibald:wip/change_log_0370?expand=1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "draft change_log ^",
  "id": "5a7b2f3ab3c4a0d376f2cfa1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:54:18.493Z",
  "text": "draft change_log ^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "looks good, but what is the &quot;...&quot; on line 35 for?  :)",
  "id": "5a7b2fba7084124a344a783e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:56:26.436Z",
  "text": "looks good, but what is the \"...\" on line 35 for?  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh, and can we expand the explanation for 2682 and 2725 in the changelog?  I know the PR title didn&#39;t say what was being fixed",
  "id": "5a7b2ffde217167e2c55191c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:57:33.452Z",
  "text": "oh, and can we expand the explanation for 2682 and 2725 in the changelog?  I know the PR title didn't say what was being fixed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "but those should probably look more like &quot;Fix 2682: [insert short summary here]&quot;",
  "id": "5a7b30174a6b0dd32b9fbe32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T16:57:59.254Z",
  "text": "but those should probably look more like \"Fix 2682: [insert short summary here]\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh, and we&#39;ll need a changelog update for llvmlite as well",
  "id": "5a7b311586ef1bb1417de1cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T17:02:13.588Z",
  "text": "oh, and we'll need a changelog update for llvmlite as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(looks like we&#39;ll beat the LLVM 6 release, but we&#39;ll have that to look forward to for 0.38)",
  "id": "5a7b315986ef1bb1417de367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T17:03:21.785Z",
  "text": "(looks like we'll beat the LLVM 6 release, but we'll have that to look forward to for 0.38)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the <code>...</code> was part of a commit message",
  "id": "5a7b35afce68c3bc74594614",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T17:21:51.255Z",
  "text": "the `...` was part of a commit message",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "removed, it, expanded explanations, I&#39;ll go fix all the  stuff version too",
  "id": "5a7b366f86ef1bb1417e037c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T17:25:03.269Z",
  "text": "removed, it, expanded explanations, I'll go fix all the  stuff version too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Did we drop support for CUDA compute 2.0 ?",
  "id": "5a7b37854a6b0dd32b9fead9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-07T17:29:41.521Z",
  "text": "Did we drop support for CUDA compute 2.0 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "partially",
  "id": "5a7b3792ce68c3bc7459529a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:29:54.360Z",
  "text": "partially",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "And what happened with CUDA 9?",
  "id": "5a7b3792ce68c3bc7459529c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:29:54.626Z",
  "text": "And what happened with CUDA 9?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "if you are using CUDA &gt;= 9, then we have to drop compute 2.0 support",
  "id": "5a7b37afe217167e2c5548e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:30:23.991Z",
  "text": "if you are using CUDA >= 9, then we have to drop compute 2.0 support",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Just updating the installation docs, at present it reads <code>NVIDIA GPUs of compute capability 2.0 and later</code>",
  "id": "5a7b37b5e217167e2c5548ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:30:29.498Z",
  "text": "Just updating the installation docs, at present it reads ` NVIDIA GPUs of compute capability 2.0 and later`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "if you use CUDA 8 or before, compute 2.0 will still work",
  "id": "5a7b37c77084124a344aab8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:30:47.812Z",
  "text": "if you use CUDA 8 or before, compute 2.0 will still work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "No official CUDA 9 support yet though so I guess we can leave it to 0.38 ?",
  "id": "5a7b37ce86ef1bb1417e0d54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:30:54.163Z",
  "text": "No official CUDA 9 support yet though so I guess we can leave it to 0.38 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I don&#39;t think we need to change the description for now",
  "id": "5a7b37e16117191e6108b1d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:31:13.484Z",
  "text": "yeah, I don't think we need to change the description for now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok",
  "id": "5a7b383193be87284d8a6f06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:32:33.776Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Dropped py3.4 support too for 0.35.0, don&#39;t think that made it into the docs so will at it now.",
  "id": "5a7b383de217167e2c554c48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T17:32:45.170Z",
  "text": "Dropped py3.4 support too for 0.35.0, don't think that made it into the docs so will at it now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: I think we can tag and build 0.37.0rc1 now.  Do you want to do that?",
  "id": "5a7b5ec893be87284d8b6c6d",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T20:17:12.481Z",
  "text": "@sklam: I think we can tag and build 0.37.0rc1 now.  Do you want to do that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Sure, I\u2019ll do tag it",
  "id": "5a7b672ff283b8e54632311e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-07T20:53:03.099Z",
  "text": "Sure, I\u2019ll do tag it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Where do the RC artifacts (wheels ideally) get published to? Are you releasing llvmlite too (as 0.22.dev0 is from 6 Jan)? Am looking for a window build in particular :)",
  "id": "5a7b934c4a6b0dd32ba22367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T00:01:16.738Z",
  "text": "Where do the RC artifacts (wheels ideally) get published to? Are you releasing llvmlite too (as 0.22.dev0 is from 6 Jan)? Am looking for a window build in particular :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I just moved all the 0.37 tickets that didn&#39;t get done to 0.38, I hope github does this quietly and doesn&#39;t spam everyone with the milestone change.",
  "id": "5a7c303d7084124a344fc394",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T11:10:53.861Z",
  "text": "I just moved all the 0.37 tickets that didn't get done to 0.38, I hope github does this quietly and doesn't spam everyone with the milestone change.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span>: We have not built wheels for RC releases in the past.  (We weren&#39;t sure where to put them, to be honest, since we didn&#39;t want them on PyPI where unsuspecting users might get them.)  Once tagged, the conda packages will show up in the numba channel on anaconda.org, and that&#39;s usually how we get them to people.",
  "id": "5a7c558cce68c3bc745f4eb5",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T13:50:04.231Z",
  "text": "@njwhite: We have not built wheels for RC releases in the past.  (We weren't sure where to put them, to be honest, since we didn't want them on PyPI where unsuspecting users might get them.)  Once tagged, the conda packages will show up in the numba channel on anaconda.org, and that's usually how we get them to people.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "And, yes, we always post a new llvmlite release concurrent with a new Numba release.",
  "id": "5a7c55c4b3c4a0d376f932d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T13:51:00.849Z",
  "text": "And, yes, we always post a new llvmlite release concurrent with a new Numba release.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Any thoughts on where we could put experimental wheels if we were to build them?",
  "id": "5a7c55df86ef1bb141843031",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T13:51:27.619Z",
  "text": "Any thoughts on where we could put experimental wheels if we were to build them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-08T14:56:20.386Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> , w can put experimental wheels on numba&#39;s anaconda channel",
  "id": "5a7c6511e217167e2c5bcbd3",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T14:56:17.544Z",
  "text": "@seibert , w can put experimental wheels on numba's anaconda channel",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "how does it work to install those with pip?",
  "id": "5a7c6522f283b8e546375cf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T14:56:34.691Z",
  "text": "how does it work to install those with pip?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(no idea how to tell it to look at other locations)",
  "id": "5a7c652ce217167e2c5bcc38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T14:56:44.031Z",
  "text": "(no idea how to tell it to look at other locations)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "will it resolve the llvmlite dependency as well?",
  "id": "5a7c6535e217167e2c5bcc63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T14:56:53.986Z",
  "text": "will it resolve the llvmlite dependency as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "like this <code>pip install --extra-index-url https://pypi.anaconda.org/numba/simple llvmlite==0.21.0</code>",
  "id": "5a7c6545e217167e2c5bccbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T14:57:09.313Z",
  "text": "like this `pip install --extra-index-url https://pypi.anaconda.org/numba/simple llvmlite==0.21.0`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh, nice",
  "id": "5a7c654ece68c3bc745fb9c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-08T14:57:18.355Z",
  "text": "oh, nice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "btw, I am testing/writing the script to patch the whl ",
  "id": "5a7c656ace68c3bc745fbb17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T14:57:46.925Z",
  "text": "btw, I am testing/writing the script to patch the whl ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "for the rpath thing",
  "id": "5a7c65717084124a345112b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T14:57:53.597Z",
  "text": "for the rpath thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "in that case, we should probably build some RC wheels",
  "id": "5a7c6573b3c4a0d376f99958",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T14:57:55.303Z",
  "text": "in that case, we should probably build some RC wheels",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh, good!",
  "id": "5a7c6576b3c4a0d376f9996a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T14:57:58.286Z",
  "text": "oh, good!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "also, I still have that test laptop where we can reproduce the linker error to verify your wheels",
  "id": "5a7c69d893be87284d90e665",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T15:16:40.800Z",
  "text": "also, I still have that test laptop where we can reproduce the linker error to verify your wheels",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "looks like I will need to patch the <code>setup.py</code> a bit for the RC wheel.",
  "id": "5a7c901d93be87284d91ea77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T17:59:57.860Z",
  "text": "looks like I will need to patch the `setup.py` a bit for the RC wheel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the problem right now is that it doesn\u2019t recognize the pre-release tag as satisfying 0.22.0",
  "id": "5a7c904ace68c3bc7460da67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T18:00:42.013Z",
  "text": "the problem right now is that it doesn\u2019t recognize the pre-release tag as satisfying 0.22.0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Does this mean we need to bump the tag?",
  "id": "5a7cb5f993be87284d92ccb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T20:41:29.189Z",
  "text": "Does this mean we need to bump the tag?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I don\u2019t think it is necessary",
  "id": "5a7cb6306117191e611119e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T20:42:24.547Z",
  "text": "I don\u2019t think it is necessary",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I guess the RC builds can be a little skewed",
  "id": "5a7cb643b3c4a0d376fbb007",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T20:42:43.538Z",
  "text": "I guess the RC builds can be a little skewed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Did all the rc1 conda packages get uploaded to Anaconda.org?  Are wheels the last step?",
  "id": "5a7cc22d7dcd63481f368c28",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T21:33:33.482Z",
  "text": "@sklam: Did all the rc1 conda packages get uploaded to Anaconda.org?  Are wheels the last step?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "buildbot is acting up. most rc1 packages have failed",
  "id": "5a7cc2a486ef1bb14186ebad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T21:35:32.842Z",
  "text": "buildbot is acting up. most rc1 packages have failed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i\u2019m building the wheels.  They may be ready sooner than the conda packages.",
  "id": "5a7cc3487dcd63481f3692ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-08T21:38:16.476Z",
  "text": "i\u2019m building the wheels.  They may be ready sooner than the conda packages.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> numba and llvmlite wheels are up on anaconda.org/numba. ",
  "id": "5a7dcf52d74ee9f50da3f9c5",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-09T16:41:54.775Z",
  "text": "@seibert numba and llvmlite wheels are up on anaconda.org/numba. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "they can be installed with <code>pip install --extra-index-url https://pypi.anaconda.org/numba/simple numba==0.37.0rc1</code>",
  "id": "5a7dcf5db3c4a0d37601378a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-09T16:42:05.132Z",
  "text": "they can be installed with `pip install --extra-index-url https://pypi.anaconda.org/numba/simple numba==0.37.0rc1`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "awesome!  I&#39;ll include that in the email",
  "id": "5a7dd1a5f283b8e5463f146f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-09T16:51:49.221Z",
  "text": "awesome!  I'll include that in the email",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "conda packages also ready?",
  "id": "5a7dd1ac4a6b0dd32bae06bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-09T16:51:56.899Z",
  "text": "conda packages also ready?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes, conda packages are ready",
  "id": "5a7dd1ec93be87284d9854d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-09T16:53:00.936Z",
  "text": "yes, conda packages are ready",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":) well done <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>",
  "id": "5a7dd335f283b8e5463f1f24",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-09T16:58:29.792Z",
  "text": ":) well done @sklam",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "great, I&#39;ll start writing the email",
  "id": "5a7dd349ce68c3bc74673476",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-09T16:58:49.791Z",
  "text": "great, I'll start writing the email",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Latest meeting minutes: <a href=\"https://github.com/numba/numba/wiki/Minutes_2018_02_08\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/wiki/Minutes_2018_02_08</a>",
  "id": "5a7e204fe217167e2c65381f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-09T22:27:27.170Z",
  "text": "Latest meeting minutes: https://github.com/numba/numba/wiki/Minutes_2018_02_08",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/wiki/Minutes_2018_02_08"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> RE: <a href=\"https://github.com/numba/numba/pull/2741/files#r167592398\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/2741/files#r167592398</a> how does <code>block.find_variable_assignment(name)</code> sound ? ",
  "id": "5a81c44e4a6b0dd32bbfa627",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-12T16:43:58.759Z",
  "text": "@sklam RE: https://github.com/numba/numba/pull/2741/files#r167592398 how does `block.find_variable_assignment(name)` sound ? ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/2741/files#r167592398"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "+1",
  "id": "5a81c4adb3c4a0d37612ec09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-12T16:45:33.384Z",
  "text": "+1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks, done",
  "id": "5a81c6164a6b0dd32bbfb06f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-12T16:51:34.788Z",
  "text": "thanks, done",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, <span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>, any thoughts on adding the compile result from the parfors internal gufuncs to the returned user facing dispatching object? This is with view of being able to easily inspect the IR and asm in the function(s) that the scheduler will dispatch.",
  "id": "5a821b2a8c71e5e01d88f15e",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   },
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-12T22:54:34.188Z",
  "text": "@sklam, @ehsantn, any thoughts on adding the compile result from the parfors internal gufuncs to the returned user facing dispatching object? This is with view of being able to easily inspect the IR and asm in the function(s) that the scheduler will dispatch.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve been looking at <span data-link-type=\"issue\" data-issue=\"2727\" class=\"issue\">#2727</span> and needed the debugger to check on the instructions generated, which is fine, but not so easy for unittests.",
  "id": "5a821b7fe217167e2c771ecd",
  "issues": [
   {
    "number": "2727"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-12T22:55:59.869Z",
  "text": "I've been looking at #2727 and needed the debugger to check on the instructions generated, which is fine, but not so easy for unittests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-12T22:58:47.025Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>, I think that makes sense if it helps inspection",
  "id": "5a821c2293be87284dabf2fc",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-12T22:58:42.239Z",
  "text": "@stuartarchibald, I think that makes sense if it helps inspection",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, at the minute when you inspect the dispatcher asm you see the scheduling setup code and calls to the scheduler but not the scheduled functions, and they&#39;re quite hard to get hold of.",
  "id": "5a821cdbb3c4a0d3761533b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-12T23:01:47.954Z",
  "text": "yeah, at the minute when you inspect the dispatcher asm you see the scheduling setup code and calls to the scheduler but not the scheduled functions, and they're quite hard to get hold of.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p>Hey all, I saw this mentioned in LLVM forum: RV <a href=\"https://github.com/cdl-saarland/rv\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/cdl-saarland/rv</a></p><blockquote>\n<p>The Region Vectorizer (RV) is a general-purpose vectorization framework for LLVM. RV provides a unified interface to vectorize code regions, such as inner and outer loops, up to whole functions.</p></blockquote>\n<p>Looks like something we can try</p>",
  "id": "5a830773e217167e2c7c1074",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-13T15:42:43.611Z",
  "text": "Hey all, I saw this mentioned in LLVM forum: RV https://github.com/cdl-saarland/rv\n\n> The Region Vectorizer (RV) is a general-purpose vectorization framework for LLVM. RV provides a unified interface to vectorize code regions, such as inner and outer loops, up to whole functions.\n\nLooks like something we can try",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/cdl-saarland/rv"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The Whole-Function Vectorization part is very cool.  Read more at <a href=\"http://compilers.cs.uni-saarland.de/projects/wfv/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://compilers.cs.uni-saarland.de/projects/wfv/</a>",
  "id": "5a8307e7d74ee9f50dbc7d65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-13T15:44:39.850Z",
  "text": "The Whole-Function Vectorization part is very cool.  Read more at http://compilers.cs.uni-saarland.de/projects/wfv/",
  "unread": false,
  "urls": [
   {
    "url": "http://compilers.cs.uni-saarland.de/projects/wfv/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Hey all.  How can I see the patch that introduced the following?",
  "id": "5a8312d0f283b8e546582e23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T16:31:12.523Z",
  "text": "Hey all.  How can I see the patch that introduced the following?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<ul>\n<li>PR <span data-link-type=\"issue\" data-issue=\"1190\" class=\"issue\">#1190</span>: Support more array methods: .transpose(), .T, .copy(), .reshape(), .view()</li>\n</ul>\n",
  "id": "5a8312d1f283b8e546582e25",
  "issues": [
   {
    "number": "1190"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T16:31:13.405Z",
  "text": "* PR #1190: Support more array methods: .transpose(), .T, .copy(), .reshape(), .view()\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "This is from CHANGE_LOG ",
  "id": "5a8312e17084124a34713d90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T16:31:29.366Z",
  "text": "This is from CHANGE_LOG ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Oh, never mind :-)",
  "id": "5a8313018c71e5e01d8e3979",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T16:32:01.709Z",
  "text": "Oh, never mind :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Is there a way to force recompilation of jitted function on every call for debugging?",
  "id": "5a831bf5d74ee9f50dbd1053",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T17:10:13.323Z",
  "text": "Is there a way to force recompilation of jitted function on every call for debugging?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-13T17:33:29.537Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span> , there\u2019s a <code>jitfunc.recompile()</code>.  Btw, please use the <a href=\"https://gitter.im/numba/numba\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/numba/numba</a> room for user question.  This room is reserved for development discussion.",
  "id": "5a832156e217167e2c7ccf11",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T17:33:10.725Z",
  "text": "@agayev , there\u2019s a `jitfunc.recompile()`.  Btw, please use the https://gitter.im/numba/numba room for user question.  This room is reserved for development discussion.",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/numba/numba"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "sklam: Thanks.  I realize this is a dev channel and I thought that question was dev-related.  I&#39;m working with <span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>  on an extension to numba.",
  "id": "5a832dae93be87284db1adc2",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T18:25:50.303Z",
  "text": "sklam: Thanks.  I realize this is a dev channel and I thought that question was dev-related.  I'm working with @ehsantn  on an extension to numba.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Oh, your handle doesn\u2019t look familiar so I assumed.  Feel free to ask questions here during your development. ;-)",
  "id": "5a832ebe8c71e5e01d8f0321",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T18:30:22.672Z",
  "text": "Oh, your handle doesn\u2019t look familiar so I assumed.  Feel free to ask questions here during your development. ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Thanks.  I just started.",
  "id": "5a8331c18c71e5e01d8f1605",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-13T18:43:13.984Z",
  "text": "Thanks.  I just started.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> the gufunc functions for parfors is generated here: <a href=\"https://github.com/numba/numba/blob/master/numba/npyufunc/parfor.py#L67\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/npyufunc/parfor.py#L67</a>",
  "id": "5a843648ce68c3bc7485f6b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-14T13:14:48.135Z",
  "text": "@stuartarchibald the gufunc functions for parfors is generated here: https://github.com/numba/numba/blob/master/numba/npyufunc/parfor.py#L67",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/npyufunc/parfor.py#L67"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "adding it to the dispatch object seems like a good idea",
  "id": "5a8436687084124a34774d4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-14T13:15:20.422Z",
  "text": "adding it to the dispatch object seems like a good idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>: yes, thanks. I got hold of it, it&#39;s just unfortunate there&#39;s nothing convenient around to attach it to. The lowering extensions have no return value, so it&#39;ll either be an extra arg as a container for it or something to attach to the lowerer, and then eventually get that to go up the stack to the dispatcher?",
  "id": "5a8437abce68c3bc74860068",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-14T13:20:43.324Z",
  "text": "@ehsantn: yes, thanks. I got hold of it, it's just unfortunate there's nothing convenient around to attach it to. The lowering extensions have no return value, so it'll either be an extra arg as a container for it or something to attach to the lowerer, and then eventually get that to go up the stack to the dispatcher?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> maybe lowerer or lowerer.context could support this functionality?",
  "id": "5a8456cf4a6b0dd32bce7441",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-14T15:33:35.531Z",
  "text": "@stuartarchibald maybe lowerer or lowerer.context could support this functionality?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "alright, buildbot is now building all the 0.37.0 packages",
  "id": "5a8614454804c9335ca03230",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-15T23:14:13.890Z",
  "text": "alright, buildbot is now building all the 0.37.0 packages",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "to my amazement, I think buildbot &quot;just worked&quot;",
  "id": "5a86f024da468f7539f497c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T14:52:20.590Z",
  "text": "to my amazement, I think buildbot \"just worked\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "novel :)",
  "id": "5a86f051e49d0524779225d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T14:53:05.117Z",
  "text": "novel :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "special thanks to <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> and <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, whose relentless buildbot flogging made this achievement possible.  :)",
  "id": "5a86f07110f501211af20897",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T14:53:37.634Z",
  "text": "special thanks to @stuartarchibald and @sklam, whose relentless buildbot flogging made this achievement possible.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":)",
  "id": "5a86f09fd786ce546e6ff6b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T14:54:23.312Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if only there were infinite disk space and nothing ever segfaulted/hung",
  "id": "5a86f0dbe49d052477922a3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T14:55:23.287Z",
  "text": "if only there were infinite disk space and nothing ever segfaulted/hung",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "sounds like a Turing machine ",
  "id": "5a86f1016017bf221a732035",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T14:56:01.088Z",
  "text": "sounds like a Turing machine ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "going to delay announcing the release until Monday.  Wheel building is still manual, and Siu&#39;s day is going to be occupied with another task",
  "id": "5a87058fd786ce546e70ac67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T16:23:43.804Z",
  "text": "going to delay announcing the release until Monday.  Wheel building is still manual, and Siu's day is going to be occupied with another task",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/master/numba/targets/arrayobj.py#L1474\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/arrayobj.py#L1474</a>",
  "id": "5a87135217b16a237756d056",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T17:22:26.875Z",
  "text": "https://github.com/numba/numba/blob/master/numba/targets/arrayobj.py#L1474",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/arrayobj.py#L1474"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "actual values of parameters in args",
  "id": "5a87136617b16a237756d0c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T17:22:46.303Z",
  "text": "actual values of parameters in args",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "it appears that the code that accesses it are actually being compiled; e.g. normalize_reshape_value",
  "id": "5a87139976ced47639ef66b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-16T17:23:37.812Z",
  "text": "it appears that the code that accesses it are actually being compiled; e.g. normalize_reshape_value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "but I wonder if there i s just a shortcut for that, like some method on IRBuilder",
  "id": "5a8713fe6017bf221a745657",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-16T17:25:18.668Z",
  "text": "but I wonder if there i s just a shortcut for that, like some method on IRBuilder",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span> maybe I&#39;m missing the point, but <code>args</code>is the list of actual parameters",
  "id": "5a8788190202dc012e44e02b",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T01:40:41.742Z",
  "text": "@agayev maybe I'm missing the point, but `args`is the list of actual parameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "normalize_reshape_value is manipulating them for that specific case",
  "id": "5a87882ea2194eb80d72aa90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T01:41:02.899Z",
  "text": "normalize_reshape_value is manipulating them for that specific case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "okay, here it is more concretely",
  "id": "5a8858e5a2194eb80d76c93d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T16:31:33.146Z",
  "text": "okay, here it is more concretely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "if I print(args[1]) I get",
  "id": "5a8858f9e4ff28713a8c9bcc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T16:31:53.586Z",
  "text": "if I print(args[1]) I get",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "%&quot;.31&quot; = load i64, i64* %&quot;$const0.3&quot;",
  "id": "5a88590235dd17022eb7ff8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T16:32:02.020Z",
  "text": "%\".31\" = load i64, i64* %\"$const0.3\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "but what I want is the actual value that this instruction results in",
  "id": "5a88592ba2194eb80d76cb2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T16:32:43.466Z",
  "text": "but what I want is the actual value that this instruction results in",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "then you need to insert a print function in the llvm ir",
  "id": "5a8872baa2194eb80d7771f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:21:46.296Z",
  "text": "then you need to insert a print function in the llvm ir",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "cgutils.printf(builder, &quot;%d\\n&quot;,  args[1])",
  "id": "5a8872cb0202dc012e49972f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:22:03.047Z",
  "text": "cgutils.printf(builder, \"%d\\n\",  args[1])",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "for example",
  "id": "5a8872cd0202dc012e4997b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:22:05.492Z",
  "text": "for example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I don&#39;t want to just print it -- I want to make use of the value to make decision in the code.  Is there a way to obtain the value?",
  "id": "5a88731fa2194eb80d7780e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:23:27.758Z",
  "text": "I don't want to just print it -- I want to make use of the value to make decision in the code.  Is there a way to obtain the value?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "for example, I would like to write a statement like this: if args[1] &gt; 3: foo()",
  "id": "5a88734ae4ff28713a8d5e96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:24:10.026Z",
  "text": "for example, I would like to write a statement like this: if args[1] > 3: foo()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "the value is in args[1] as LLVM IR",
  "id": "5a8873748f1c77ef3a1c1e62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:24:52.183Z",
  "text": "the value is in args[1] as LLVM IR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "you can use it in other LLVM IR generation routines",
  "id": "5a88737d0202dc012e49be35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:25:01.151Z",
  "text": "you can use it in other LLVM IR generation routines",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "for if generation",
  "id": "5a8873988f1c77ef3a1c2644",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:25:28.916Z",
  "text": "for if generation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "you can for example do:",
  "id": "5a8874338f1c77ef3a1c4085",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:28:03.160Z",
  "text": "you can for example do:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "const = context.get_constant(lir.IntType(64), 3)<br>matches = builder.icmp_unsigned(&#39;&lt;&#39;, args[3], const)<br>with cgutils.if_unlikely(builder, matches):<br>    builder.call(foo, [])",
  "id": "5a8874350202dc012e49de26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-02-17T18:28:05.149Z",
  "text": "const = context.get_constant(lir.IntType(64), 3)\nmatches = builder.icmp_unsigned('<', args[3], const)\nwith cgutils.if_unlikely(builder, matches):\n    builder.call(foo, [])",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I just found a way through to get the asm for the parfors gufuncs",
  "id": "5a8af5938f1c77ef3a29b2f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T16:04:35.399Z",
  "text": "I just found a way through to get the asm for the parfors gufuncs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "get the target machine from a parfors cres.library._codegen",
  "id": "5a8af5c0a2194eb80d855e8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T16:05:20.098Z",
  "text": "get the target machine from a parfors cres.library._codegen",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "get the functions from a parfors cres.library._codegen._engine._ee._modules",
  "id": "5a8af5f653c1dbb7434c1860",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T16:06:14.930Z",
  "text": "get the functions from a parfors cres.library._codegen._engine._ee._modules",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "combine",
  "id": "5a8af5fa53c1dbb7434c1874",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T16:06:18.121Z",
  "text": "combine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "actually, might not need the TM :)",
  "id": "5a8af89da2194eb80d8571ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T16:17:33.054Z",
  "text": "actually, might not need the TM :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "FYI: <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> is building wheels right now",
  "id": "5a8b01fa888332ee3aa4806d",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T16:57:30.193Z",
  "text": "FYI: @sklam is building wheels right now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;m writing the release email, and hopefully we can announce this afternoon",
  "id": "5a8b020a0202dc012e57ef2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T16:57:46.291Z",
  "text": "I'm writing the release email, and hopefully we can announce this afternoon",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Numba 0.37.0 is out the door",
  "id": "5a8b3f52e4ff28713a9d1564",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T21:19:14.558Z",
  "text": "Numba 0.37.0 is out the door",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Let the Numba 0.38 PR flood begin :)",
  "id": "5a8b3f60888332ee3aa60c50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T21:19:28.802Z",
  "text": "Let the Numba 0.38 PR flood begin :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, tagged 0.38.0dev0 (Siu&#39;s suggestion to ensure things are sorted properly on Anaconda.org)",
  "id": "5a8b41646f8b4b994696536b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T21:28:04.136Z",
  "text": "ok, tagged 0.38.0dev0 (Siu's suggestion to ensure things are sorted properly on Anaconda.org)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and merged all the PRs that were ready to go",
  "id": "5a8b41db888332ee3aa618a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-19T21:30:03.622Z",
  "text": "and merged all the PRs that were ready to go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/teoliphant",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/254880?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/254880?v=4&s=60",
   "displayName": "Travis E. Oliphant",
   "gv": "4",
   "id": "54185f0c163965c9bc204e58",
   "url": "/teoliphant",
   "username": "teoliphant",
   "v": 19
  },
  "html": "Thanks for the Numba 0.37 release.   Looks great!",
  "id": "5a8d19e0888332ee3aaffcc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T07:04:00.782Z",
  "text": "Thanks for the Numba 0.37 release.   Looks great!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve written a thing that overrides the CPU features and type (to Intel Skylake) and sets available threads to 2.",
  "id": "5a8d71fce4ff28713aa91de5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:19:56.488Z",
  "text": "I've written a thing that overrides the CPU features and type (to Intel Skylake) and sets available threads to 2.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Inside that context I then generate two &quot;identical&quot; prange functions, one with a loop to <code>n</code> on with a loop <code>-n, 0</code>, and a trivial accumulator in the loop",
  "id": "5a8d723653c1dbb74359fb07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:20:54.176Z",
  "text": "Inside that context I then generate two \"identical\" prange functions, one with a loop to `n` on with a loop `-n, 0`, and a trivial accumulator in the loop",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "def foo()",
  "id": "5a8d724e6fba1a703a801429",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:21:18.779Z",
  "text": "def foo()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code><span class=\"setting\">n = <span class=\"value\"><span class=\"number\">4096</span></span></span></code></pre>",
  "id": "5a8d724e8f1c77ef3a375b8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:21:18.891Z",
  "text": "    n = 4096",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code><span class=\"variable\">A</span> = <span class=\"number\">0</span>.</code></pre>",
  "id": "5a8d724f6f8b4b9946a23b91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:21:19.036Z",
  "text": "    A = 0.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code><span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"function\"><span class=\"title\">range</span><span class=\"params\">(-n, <span class=\"number\">0</span>)</span></span>:</code></pre>",
  "id": "5a8d724f6f8b4b9946a23b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:21:19.171Z",
  "text": "    for i in range(-n, 0):",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>    A += <span class=\"built_in\">i</span></code></pre>",
  "id": "5a8d724f6fba1a703a80142e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:21:19.434Z",
  "text": "        A += i",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code><span class=\"command\">return</span> A</code></pre>",
  "id": "5a8d724fc3c5f8b90de7071b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:21:19.537Z",
  "text": "    return A",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "for example",
  "id": "5a8d7254888332ee3ab21f32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:21:24.443Z",
  "text": "for example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Compiling these with fast math enabled, the only difference in the gufunc kernel asm is whether signed on unsigned integer unpacking functions are used",
  "id": "5a8d728f6f8b4b9946a23e3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:22:23.581Z",
  "text": "Compiling these with fast math enabled, the only difference in the gufunc kernel asm is whether signed on unsigned integer unpacking functions are used",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the vectorizer works as expected, unrolls the loop, vector unpacks <code>i</code>, vector accumulates on <code>A</code>",
  "id": "5a8d72d353c1dbb74359ff5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:23:31.291Z",
  "text": "the vectorizer works as expected, unrolls the loop, vector unpacks `i`, vector accumulates on `A`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If I switch off fastmath then scalar instructions are used and the loop is not unrolled",
  "id": "5a8d738a8f1c77ef3a376570",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:26:34.394Z",
  "text": "If I switch off fastmath then scalar instructions are used and the loop is not unrolled",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "nice!",
  "id": "5a8d762a8f1c77ef3a377870",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:37:46.327Z",
  "text": "nice!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "if you force Skylake, does it use AVX-512?",
  "id": "5a8d76386fba1a703a802ead",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:38:00.239Z",
  "text": "if you force Skylake, does it use AVX-512?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I guess that is only some Skylake chips that have AVX-512.  I wonder if LLVM detects that properly",
  "id": "5a8d766b35dd17022ed4d26a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:38:51.410Z",
  "text": "I guess that is only some Skylake chips that have AVX-512.  I wonder if LLVM detects that properly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes and there&#39;s a FIXME to sort out the proc model in llvm src",
  "id": "5a8d778c888332ee3ab23ea5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:43:40.962Z",
  "text": "yes and there's a FIXME to sort out the proc model in llvm src",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I ended up going through the LLVM source to find feature sets and some suitable combination of stuff",
  "id": "5a8d779fa2194eb80d9399ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:43:59.751Z",
  "text": "I ended up going through the LLVM source to find feature sets and some suitable combination of stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "It would be nice to have a Skylake-X server in the build farm.  Very curious to see how AVX-512 performs there.",
  "id": "5a8d77e4a2194eb80d939b6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:45:08.861Z",
  "text": "It would be nice to have a Skylake-X server in the build farm.  Very curious to see how AVX-512 performs there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I also note that if you have a function with array access induced by a prange induction var, if the induction var is unsigned you get vectorization, but if it is signed you don&#39;t",
  "id": "5a8d781535dd17022ed4dced",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:45:57.200Z",
  "text": "I also note that if you have a function with array access induced by a prange induction var, if the induction var is unsigned you get vectorization, but if it is signed you don't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "right",
  "id": "5a8d78376f8b4b9946a263f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:46:31.768Z",
  "text": "right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the generated range checks on negative indexing stop the loop unroll and therefore prevent vector instruction generation",
  "id": "5a8d783935dd17022ed4de14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:46:33.547Z",
  "text": "the generated range checks on negative indexing stop the loop unroll and therefore prevent vector instruction generation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I really wish LLVM could handle branching + SIMD better...",
  "id": "5a8d784b53c1dbb7435a28de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:46:51.749Z",
  "text": "I really wish LLVM could handle branching + SIMD better...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, some new CPUs would be useful",
  "id": "5a8d784ce4ff28713aa947d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:46:52.329Z",
  "text": "yeah, some new CPUs would be useful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I also noticed that Raptor Engineering is taking preorders for POWER9 systems  :)",
  "id": "5a8d787b8f1c77ef3a3787bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:47:39.853Z",
  "text": "I also noticed that Raptor Engineering is taking preorders for POWER9 systems  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "A mere $4500 for their base quad-core tower.  (Add $1000, and that becomes 18 cores)",
  "id": "5a8d78c8888332ee3ab246f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:48:56.732Z",
  "text": "A mere $4500 for their base quad-core tower.  (Add $1000, and that becomes 18 cores)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I wonder if we can just generate better code",
  "id": "5a8d793e6f8b4b9946a26b21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:50:54.784Z",
  "text": "I wonder if we can just generate better code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, ideally we would find a way to do the check outside the loop",
  "id": "5a8d795ea2194eb80d93a552",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:51:26.671Z",
  "text": "yeah, ideally we would find a way to do the check outside the loop",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and adjust the range, perhaps",
  "id": "5a8d796453c1dbb7435a312b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:51:32.307Z",
  "text": "and adjust the range, perhaps",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "given this is all stride 1, I think there might be some maths we can do to just twiddle loop bounds",
  "id": "5a8d79786f8b4b9946a26c25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:51:52.905Z",
  "text": "given this is all stride 1, I think there might be some maths we can do to just twiddle loop bounds",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess I better go write the tests for this as it stands.",
  "id": "5a8d79ed888332ee3ab24f04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T13:53:49.687Z",
  "text": "I guess I better go write the tests for this as it stands.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I also think the generated code fails in the case of non-contiguous input",
  "id": "5a8d7ec4888332ee3ab271a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-21T14:14:28.134Z",
  "text": "I also think the generated code fails in the case of non-contiguous input",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/teoliphant",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/254880?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/254880?v=4&s=60",
   "displayName": "Travis E. Oliphant",
   "gv": "4",
   "id": "54185f0c163965c9bc204e58",
   "url": "/teoliphant",
   "username": "teoliphant",
   "v": 19
  },
  "html": "Hey folks, can someone comment on this issue: <span data-link-type=\"issue\" data-issue=\"8451\" data-issue-repo=\"scipy/scipy\" class=\"issue\">scipy/scipy#8451</span>",
  "id": "5a8e18986f8b4b9946a63bb6",
  "issues": [
   {
    "number": "8451",
    "repo": "scipy/scipy"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T01:10:48.886Z",
  "text": "Hey folks, can someone comment on this issue: https://github.com/scipy/scipy/pull/8451",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/teoliphant",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/254880?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/254880?v=4&s=60",
   "displayName": "Travis E. Oliphant",
   "gv": "4",
   "id": "54185f0c163965c9bc204e58",
   "url": "/teoliphant",
   "username": "teoliphant",
   "v": 19
  },
  "html": "They are working on hiding symbols in scipy.special C functions.  Will this impact Numba&#39;s ability to call those functions in no-python mode?",
  "id": "5a8e18b4c3c5f8b90deb1b92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T01:11:16.403Z",
  "text": "They are working on hiding symbols in scipy.special C functions.  Will this impact Numba's ability to call those functions in no-python mode?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, I <em>think</em> we only use scipy for the BLAS/LAPACK bindings to allow us to implement <code>np.linalg</code>",
  "id": "5a8e97a20202dc012e6c34ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T10:12:50.427Z",
  "text": "hmmm, I *think* we only use scipy for the BLAS/LAPACK bindings to allow us to implement `np.linalg`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and we grab the function addresses using this <a href=\"https://github.com/numba/numba/blob/master/numba/_helperlib.c#L565\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/_helperlib.c#L565</a>",
  "id": "5a8e98026f8b4b9946a89e73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T10:14:26.948Z",
  "text": "and we grab the function addresses using this https://github.com/numba/numba/blob/master/numba/_helperlib.c#L565",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/_helperlib.c#L565"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and this macro <a href=\"https://github.com/numba/numba/blob/master/numba/_lapack.c#L12\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/_lapack.c#L12</a> and the use of it is how the numba LAPACK C impl gets at the functions, the np.linalg impl is largely written in C to hide the complexity in staging calls/computing workspaces",
  "id": "5a8e98f535dd17022edb3a2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T10:18:29.188Z",
  "text": "and this macro https://github.com/numba/numba/blob/master/numba/_lapack.c#L12 and the use of it is how the numba LAPACK C impl gets at the functions, the np.linalg impl is largely written in C to hide the complexity in staging calls/computing workspaces",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/_lapack.c#L12"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think if we export the <code>import_cython_function</code> function and create a ctypes binding to it, that&#39;ll allow us to get the address from the PyCapsule that cython exports",
  "id": "5a8e9b1c888332ee3ab886a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T10:27:40.654Z",
  "text": "I think if we export the `import_cython_function` function and create a ctypes binding to it, that'll allow us to get the address from the PyCapsule that cython exports",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so in the case of scipy.special ufuncs, we wouldn&#39;t be able to just cdll.LoadLibrary on the DSO and go symbol fishing any more (on *nix), but we&#39;d instead use the cython export to achieve the same",
  "id": "5a8e9bc753c1dbb7436060bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T10:30:31.002Z",
  "text": "so in the case of scipy.special ufuncs, we wouldn't be able to just cdll.LoadLibrary on the DSO and go symbol fishing any more (on *nix), but we'd instead use the cython export to achieve the same",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "does that sound about right?",
  "id": "5a8e9bf66f8b4b9946a8b30d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T10:31:18.414Z",
  "text": "does that sound about right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Just wrote the code for this, seems to work ok. Essentially expose the <code>import_cython_function</code> function into c_helpers, create a PYFUNCTYPE call to it, make a call like <code>pyfn_import_cython_function(&#39;scipy.special.cython_special&#39;, &#39;j0&#39;)</code> to get the address of <code>j0</code> and then just do a CFUNCTYPE wrapper around the returned address",
  "id": "5a8eaa92a2194eb80d9a72dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T11:33:38.134Z",
  "text": "Just wrote the code for this, seems to work ok. Essentially expose the `import_cython_function` function into c_helpers, create a PYFUNCTYPE call to it, make a call like `pyfn_import_cython_function('scipy.special.cython_special', 'j0')` to get the address of `j0` and then just do a CFUNCTYPE wrapper around the returned address",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the CFUNCTYPE compiles down fine under njit and calling the compiled function returns something sensible",
  "id": "5a8eaac435dd17022edba13d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T11:34:28.414Z",
  "text": "the CFUNCTYPE compiles down fine under njit and calling the compiled function returns something sensible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Meeting minutes: <a href=\"https://github.com/numba/numba/wiki/Minutes_2018_02_22\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/wiki/Minutes_2018_02_22</a>",
  "id": "5a8f0c1c0202dc012e6f5b4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T18:29:48.205Z",
  "text": "Meeting minutes: https://github.com/numba/numba/wiki/Minutes_2018_02_22",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/wiki/Minutes_2018_02_22"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "My implementation of transpose prints garbage values in the transposed matrix under Python 2.7 but works fine under Python 3.x.  Does this sound familiar?  That is, is it a known issue and there is a known way to fix it?",
  "id": "5a8f172135dd17022ede90ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-22T19:16:49.128Z",
  "text": "My implementation of transpose prints garbage values in the transposed matrix under Python 2.7 but works fine under Python 3.x.  Does this sound familiar?  That is, is it a known issue and there is a known way to fix it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I found the problem but this is surprising",
  "id": "5a8f27a20202dc012e7007e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T20:27:14.912Z",
  "text": "I found the problem but this is surprising",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Given that len(np_arys) == 3, is there a difference between [np_arys[0]._getvalue(), np_arys[1]._getvalue(), np_arys[2]._getvalue()] and [ary._getvalue() for ary in np_arys]?",
  "id": "5a8f282b6fba1a703a8a6a1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T20:29:31.497Z",
  "text": "Given that len(np_arys) == 3, is there a difference between [np_arys[0]._getvalue(), np_arys[1]._getvalue(), np_arys[2]._getvalue()] and [ary._getvalue() for ary in np_arys]?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "ok, apparently it is scoping problem",
  "id": "5a8f28e26fba1a703a8a6d1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T20:32:34.621Z",
  "text": "ok, apparently it is scoping problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "i had ary in a scope above",
  "id": "5a8f28eac3c5f8b90df15b7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T20:32:42.969Z",
  "text": "i had ary in a scope above",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so scoping rules have changed from 2.7 to 3",
  "id": "5a8f28f9e4ff28713ab38fc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T20:32:57.270Z",
  "text": "so scoping rules have changed from 2.7 to 3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<a href=\"https://docs.python.org/3.0/whatsnew/3.0.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.python.org/3.0/whatsnew/3.0.html</a>",
  "id": "5a8f29756f8b4b9946ac4eb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T20:35:01.337Z",
  "text": "https://docs.python.org/3.0/whatsnew/3.0.html",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.python.org/3.0/whatsnew/3.0.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "List comprehensions no longer support the syntactic form [... for var in item1, item2, ...]. Use [... for var in (item1, item2, ...)] instead. Also note that list comprehensions have different semantics: they are closer to syntactic sugar for a generator expression inside a list() constructor, and in particular the loop control variables are no longer leaked into the surrounding scope.",
  "id": "5a8f297a8f1c77ef3a41843c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T20:35:06.788Z",
  "text": "List comprehensions no longer support the syntactic form [... for var in item1, item2, ...]. Use [... for var in (item1, item2, ...)] instead. Also note that list comprehensions have different semantics: they are closer to syntactic sugar for a generator expression inside a list() constructor, and in particular the loop control variables are no longer leaked into the surrounding scope.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, i didn\u2019t know about the variable scoping.  I have always assumed it will leak.",
  "id": "5a8f364635dd17022edf58f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-22T21:29:42.835Z",
  "text": "oh, i didn\u2019t know about the variable scoping.  I have always assumed it will leak.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Numba&#39;s RNG generates a different random number sequence than numpy&#39;s, when seeded with the same value. I wonder how unit tests for RNG functions work...",
  "id": "5a902a6353c1dbb743692e4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T14:51:15.144Z",
  "text": "Numba's RNG generates a different random number sequence than numpy's, when seeded with the same value. I wonder how unit tests for RNG functions work...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "does it match for the Python random module?",
  "id": "5a902bf36fba1a703a8fa86e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T14:57:55.027Z",
  "text": "does it match for the Python random module?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\nimport random<br>random.seed(0)<br>random.randint(0, 10)<br>6<br>import numpy as np<br>np.random.seed(0)<br>np.random.randint(0, 10)<br>5<br><span data-link-type=\"mention\" data-screen-name=\"numba\" class=\"mention\">@numba</span>.jit<br>... def foo(): np.random.seed(0); print(np.random.randint(0, 10))<br>...<br>import numba<br><span data-link-type=\"mention\" data-screen-name=\"numba\" class=\"mention\">@numba</span>.jit<br>... def foo(): np.random.seed(0); print(np.random.randint(0, 10))<br>...<br>foo()<br>8</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5a902c64888332ee3ac15b9f",
  "issues": [],
  "mentions": [
   {
    "screenName": "numba",
    "userIds": []
   },
   {
    "screenName": "numba",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T14:59:48.982Z",
  "text": ">>> import random\n>>> random.seed(0)\n>>> random.randint(0, 10)\n6\n>>> import numpy as np\n>>> np.random.seed(0)\n>>> np.random.randint(0, 10)\n5\n>>> @numba.jit\n... def foo(): np.random.seed(0); print(np.random.randint(0, 10))\n... \n>>> import numba\n>>> @numba.jit\n... def foo(): np.random.seed(0); print(np.random.randint(0, 10))\n... \n>>> foo()\n8\n>>> ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "they all appear different",
  "id": "5a902c7035dd17022ee44a0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:00:00.509Z",
  "text": "they all appear different",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It seems not all implementation matches.  See tests following this line: <a href=\"https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L962\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L962</a>",
  "id": "5a9032aba2194eb80da345f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:26:35.018Z",
  "text": "It seems not all implementation matches.  See tests following this line: https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L962",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L962"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "For the ones that match, I&#39;m not sure how this ends up working",
  "id": "5a90347fe4ff28713ab90f80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:34:23.907Z",
  "text": "For the ones that match, I'm not sure how this ends up working",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "For example, test_random_randint eventually ends up calling _check_dist",
  "id": "5a9034996fba1a703a8fdd0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:34:49.724Z",
  "text": "For example, test_random_randint eventually ends up calling _check_dist",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L302\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L302</a>",
  "id": "5a90349aa2194eb80da35487",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:34:50.368Z",
  "text": "https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L302",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/tests/test_random.py?utf8=%E2%9C%93#L302"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "which generates a list of random numbers, I believe using numba&#39;s implementation and numpy&#39;s implementation",
  "id": "5a9034bae4ff28713ab910ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:35:22.903Z",
  "text": "which generates a list of random numbers, I believe using numba's implementation and numpy's implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "and when I print those lists they are identical",
  "id": "5a9034c2a2194eb80da35675",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:35:30.577Z",
  "text": "and when I print those lists they are identical",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I think there\u2019s something in how the .seed() is implemented",
  "id": "5a9035a56f8b4b9946b1cbed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:39:17.006Z",
  "text": "I think there\u2019s something in how the .seed() is implemented",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the test copy the random state into numba by:<pre><code class=\"python\">\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_copy_py_state</span><span class=\"params\">(r, ptr)</span>:</span>\n    <span class=\"string\">\"\"\"\n    Copy state of Python random *r* to Numba state *ptr*.\n    \"\"\"</span>\n    mt = r.getstate()[<span class=\"number\">1</span>]\n    ints, index = mt[:-<span class=\"number\">1</span>], mt[-<span class=\"number\">1</span>]\n    _helperlib.rnd_set_state(ptr, (index, list(ints)))\n    <span class=\"keyword\">return</span> ints, index</code></pre>",
  "id": "5a9035bc35dd17022ee487fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:39:40.894Z",
  "text": "the test copy the random state into numba by:\n\n```python\n\ndef _copy_py_state(r, ptr):\n    \"\"\"\n    Copy state of Python random *r* to Numba state *ptr*.\n    \"\"\"\n    mt = r.getstate()[1]\n    ints, index = mt[:-1], mt[-1]\n    _helperlib.rnd_set_state(ptr, (index, list(ints)))\n    return ints, index\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I see.  Thanks, that explains, although it is still odd that just setting the seed to the same value does not result in the same RNG state -- we have to also copy the whole state.",
  "id": "5a90371135dd17022ee48f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-23T15:45:21.148Z",
  "text": "I see.  Thanks, that explains, although it is still odd that just setting the seed to the same value does not result in the same RNG state -- we have to also copy the whole state.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_shuffle</span><span class=\"params\">(self, func, ptr)</span>:</span>\n    <span class=\"string\">\"\"\"\n    Check a shuffle()-like function for 1D arrays.\n    \"\"\"</span>\n    <span class=\"comment\"># Our implementation follows Python 3's.</span>\n    a = np.arange(<span class=\"number\">20</span>)\n    <span class=\"keyword\">if</span> sys.version_info &gt;= (<span class=\"number\">3</span>,):\n        r = self._follow_cpython(ptr)\n        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>):\n            got = a.copy()\n            expected = a.copy()\n            func(got)\n            r.shuffle(expected)\n            self.assertPreciseEqual(got, expected)\n    <span class=\"keyword\">else</span>:\n        <span class=\"comment\"># Sanity check</span>\n        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>):\n            b = a.copy()\n            func(b)\n            self.assertNotEqual(list(a), list(b))\n            self.assertEqual(sorted(a), sorted(b))\n            a = b\n    <span class=\"comment\"># Test with an arbitrary buffer-providing object</span>\n    b = a.copy()\n    func(memoryview(b))\n    self.assertNotEqual(list(a), list(b))\n    self.assertEqual(sorted(a), sorted(b))\n    <span class=\"comment\"># Read-only object</span>\n    <span class=\"keyword\">with</span> self.assertTypingError():\n        func(memoryview(<span class=\"string\">b\"xyz\"</span>))\n\n<span class=\"decorator\">@tag('important')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_random_shuffle</span><span class=\"params\">(self)</span>:</span>\n    self._check_shuffle(jit_unary(<span class=\"string\">\"random.shuffle\"</span>), get_py_state_ptr())\n\n<span class=\"decorator\">@tag('important')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_numpy_shuffle</span><span class=\"params\">(self)</span>:</span>\n    self._check_shuffle(jit_unary(<span class=\"string\">\"np.random.shuffle\"</span>), get_np_state_ptr())</code></pre>",
  "id": "5a9098f68f1c77ef3a494d82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-23T22:43:02.403Z",
  "text": "    def _check_shuffle(self, func, ptr):\n        \"\"\"\n        Check a shuffle()-like function for 1D arrays.\n        \"\"\"\n        # Our implementation follows Python 3's.\n        a = np.arange(20)\n        if sys.version_info >= (3,):\n            r = self._follow_cpython(ptr)\n            for i in range(3):\n                got = a.copy()\n                expected = a.copy()\n                func(got)\n                r.shuffle(expected)\n                self.assertPreciseEqual(got, expected)\n        else:\n            # Sanity check\n            for i in range(3):\n                b = a.copy()\n                func(b)\n                self.assertNotEqual(list(a), list(b))\n                self.assertEqual(sorted(a), sorted(b))\n                a = b\n        # Test with an arbitrary buffer-providing object\n        b = a.copy()\n        func(memoryview(b))\n        self.assertNotEqual(list(a), list(b))\n        self.assertEqual(sorted(a), sorted(b))\n        # Read-only object\n        with self.assertTypingError():\n            func(memoryview(b\"xyz\"))\n\n    @tag('important')\n    def test_random_shuffle(self):\n        self._check_shuffle(jit_unary(\"random.shuffle\"), get_py_state_ptr())\n\n    @tag('important')\n    def test_numpy_shuffle(self):\n        self._check_shuffle(jit_unary(\"np.random.shuffle\"), get_np_state_ptr())\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "My understanding is that Numba&#39;s implementation of random.shuffle and np.random.shuffle both implement Python 3&#39;s random.shuffle and the above test checks that.   Can someone please confirm?",
  "id": "5a909945e4ff28713abb7cbe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-23T22:44:21.405Z",
  "text": "My understanding is that Numba's implementation of random.shuffle and np.random.shuffle both implement Python 3's random.shuffle and the above test checks that.   Can someone please confirm?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "If that is true, then we have a problem -- if I implement np.random.permutation, which internally uses np.random.shuffle, then my implementation of Numba&#39;s np.random.permutation will not be compatible with NumPy&#39;s np.random.permutation; and since Python 3 does not have permutation, there isn&#39;t a baseline against which I should test my implementation.",
  "id": "5a9099eda2194eb80da5c30a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-23T22:47:09.897Z",
  "text": "If that is true, then we have a problem -- if I implement np.random.permutation, which internally uses np.random.shuffle, then my implementation of Numba's np.random.permutation will not be compatible with NumPy's np.random.permutation; and since Python 3 does not have permutation, there isn't a baseline against which I should test my implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Why don&#39;t we default to NumPy&#39;s implementation of shuffle?",
  "id": "5a909ae7e4ff28713abb8724",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-23T22:51:19.218Z",
  "text": "Why don't we default to NumPy's implementation of shuffle?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/teoliphant",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/254880?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/254880?v=4&s=60",
   "displayName": "Travis E. Oliphant",
   "gv": "4",
   "id": "54185f0c163965c9bc204e58",
   "url": "/teoliphant",
   "username": "teoliphant",
   "v": 19
  },
  "html": "Are there any &quot;easy-to-fix&quot; issues for Numba that I can point bright &quot;first-time&quot; students who want to get into contributing to Numba to.    There is a &quot;Good for First Contributors&quot; label that can be applied.",
  "id": "5a91c887888332ee3ac8f9eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-24T20:18:15.504Z",
  "text": "Are there any \"easy-to-fix\" issues for Numba that I can point bright \"first-time\" students who want to get into contributing to Numba to.    There is a \"Good for First Contributors\" label that can be applied.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"teoliphant\" class=\"mention\">@teoliphant</span> I think implementing simple math functions in nopython mode is a good start. For example, <code>erf()</code> and <code>cnd()</code> could simplify the blackscholes example significantly.",
  "id": "5a9236726f8b4b9946bad184",
  "issues": [],
  "mentions": [
   {
    "screenName": "teoliphant",
    "userId": "54185f0c163965c9bc204e58",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-25T04:07:14.823Z",
  "text": "@teoliphant I think implementing simple math functions in nopython mode is a good start. For example, `erf()` and `cnd()` could simplify the blackscholes example significantly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "Maybe we should create a list of math functions in Numpy/Scipy that need nopython implementation.",
  "id": "5a9236c9c3c5f8b90d003551",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-25T04:08:41.924Z",
  "text": "Maybe we should create a list of math functions in Numpy/Scipy that need nopython implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Stuart has dreams of &quot;scumba&quot;, which is a library of nopython mode scipy functions",
  "id": "5a92e7988f1c77ef3a52c94c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-25T16:43:04.004Z",
  "text": "Stuart has dreams of \"scumba\", which is a library of nopython mode scipy functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> by implementing to do mean grabbing the the scipy exported symbol and making sure that it compiles in npm, or actually implementing e.g. <code>erf()</code> using polynomials etc cf. C99?",
  "id": "5a942bb553c1dbb7437bd250",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T15:45:57.355Z",
  "text": "@ehsantn by implementing to do mean grabbing the the scipy exported symbol and making sure that it compiles in npm, or actually implementing e.g. `erf()` using polynomials etc cf. C99?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<code>scipy.special.erf()</code> is a <code>ufunc</code> similar to other Numpy math functions",
  "id": "5a942c4e0202dc012e887c9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T15:48:30.386Z",
  "text": "`scipy.special.erf()` is a `ufunc` similar to other Numpy math functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "it can be handled the same way I assume",
  "id": "5a942c5b53c1dbb7437bd62f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T15:48:43.820Z",
  "text": "it can be handled the same way I assume",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "And yes, I&#39;ve been of the view that Scumba would be a great community project and hugely useful. I&#39;ve hacked up bits of it from time to time for various reasons, just never managed to collect and formalise.",
  "id": "5a942c5d53c1dbb7437bd638",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2018-02-26T15:48:45.138Z",
  "text": "And yes, I've been of the view that Scumba would be a great community project and hugely useful. I've hacked up bits of it from time to time for various reasons, just never managed to collect and formalise.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "is <code>Scumba</code> supposed to be something out of Numba?",
  "id": "5a942c7d8f1c77ef3a5959de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:49:17.065Z",
  "text": "is `Scumba` supposed to be something out of Numba?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "scumba=scipy functions backed by numba",
  "id": "5a942c8ce4ff28713acb9bef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:49:32.601Z",
  "text": "scumba=scipy functions backed by numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "why not having a Numba module for Scipy functions",
  "id": "5a942c92c3c5f8b90d09bf1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:49:38.066Z",
  "text": "why not having a Numba module for Scipy functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "that would be this",
  "id": "5a942c976fba1a703aa26573",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:49:43.483Z",
  "text": "that would be this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "but developed as a separate project",
  "id": "5a942c9e8f1c77ef3a595a5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:49:50.517Z",
  "text": "but developed as a separate project",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so it could iterate at a different rate without bloating up core Numba",
  "id": "5a942caa6fba1a703aa26607",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:50:02.182Z",
  "text": "so it could iterate at a different rate without bloating up core Numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I believe sp.special.* are trivial and its just a question of getting the fn pointer from the PyCapsule, writing a ctype definition and then declaring a ufunc",
  "id": "5a942cf6e4ff28713acb9eb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:51:18.945Z",
  "text": "I believe sp.special.* are trivial and its just a question of getting the fn pointer from the PyCapsule, writing a ctype definition and then declaring a ufunc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "then this is a good starting project for contributors :)",
  "id": "5a942d87e4ff28713acba33e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T15:53:43.015Z",
  "text": "then this is a good starting project for contributors :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<pre><code>def <span class=\"function\"><span class=\"title\">test_numpy_random_permutation</span><span class=\"params\">(self)</span></span>:\n    numpy_prng = self._follow_numpy(<span class=\"function\"><span class=\"title\">get_np_state_ptr</span><span class=\"params\">()</span></span>)\n    func = <span class=\"function\"><span class=\"title\">jit_unary</span><span class=\"params\">(<span class=\"string\">\"np.random.randint\"</span>)</span></span>\n\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"python numpy: \"</span>, numpy_prng.randint(<span class=\"number\">50</span>)</span></span>)\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"numba numpy: \"</span>, jit_unary(<span class=\"string\">\"np.random.randint\"</span>)</span><span class=\"params\">(<span class=\"number\">50</span>)</span></span>)</code></pre>",
  "id": "5a94802135dd17022ef9787d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T21:46:09.525Z",
  "text": "    def test_numpy_random_permutation(self):\n        numpy_prng = self._follow_numpy(get_np_state_ptr())\n        func = jit_unary(\"np.random.randint\")\n\n        print(\"python numpy: \", numpy_prng.randint(50))\n        print(\"numba numpy: \", jit_unary(\"np.random.randint\")(50))\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I would appreciate if someone would answer why the above produces two different numbers.  Is this a bug?",
  "id": "5a94804135dd17022ef978e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T21:46:41.552Z",
  "text": "I would appreciate if someone would answer why the above produces two different numbers.  Is this a bug?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "My understanding is that _follow_numpy() generates a NumPy PRNG state with seed 2, returns it, and also sets it to Numba&#39;s internal NumPy PRNG state",
  "id": "5a9480806f8b4b9946c66d43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T21:47:44.221Z",
  "text": "My understanding is that _follow_numpy() generates a NumPy PRNG state with seed 2, returns it, and also sets it to Numba's internal NumPy PRNG state",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so, the compiled np.random.randint as well as non-compiled should return the same random value with the first call.",
  "id": "5a9480a4458cbde557cfdc2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T21:48:20.170Z",
  "text": "so, the compiled np.random.randint as well as non-compiled should return the same random value with the first call.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Yes? No?  Doesn&#39;t make sense?",
  "id": "5a9480da0202dc012e8aeb48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T21:49:14.089Z",
  "text": "Yes? No?  Doesn't make sense?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "we really need to get <code>np.dot</code> working for non-float dtypes",
  "id": "5a9486076f8b4b9946c6922b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T22:11:19.758Z",
  "text": "we really need to get `np.dot` working for non-float dtypes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>  any comments on my question above?",
  "id": "5a948a87458cbde557d016e5",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T22:30:31.033Z",
  "text": "@stuartarchibald  any comments on my question above?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "just looking",
  "id": "5a948a936fba1a703aa501db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T22:30:43.132Z",
  "text": "just looking",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "okay, thanks.",
  "id": "5a948a9e6fba1a703aa502a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T22:30:54.965Z",
  "text": "okay, thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it looks like the states are the same in memory at the point the calls are made",
  "id": "5a948ecb6fba1a703aa51b28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T22:48:43.659Z",
  "text": "it looks like the states are the same in memory at the point the calls are made",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "but they produce different results...  my question is, is this expected?  because if I change everything to python, they produce the same values",
  "id": "5a949382c3c5f8b90d0c9f02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:08:50.869Z",
  "text": "but they produce different results...  my question is, is this expected?  because if I change everything to python, they produce the same values",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "right",
  "id": "5a949391888332ee3ad6d31a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T23:09:05.875Z",
  "text": "right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<pre><code>def <span class=\"function\"><span class=\"title\">test_numpy_random_permutation</span><span class=\"params\">(self)</span></span>:\n    python_prng = self._follow_cpython(<span class=\"function\"><span class=\"title\">get_py_state_ptr</span><span class=\"params\">()</span></span>)\n    func = <span class=\"function\"><span class=\"title\">jit_unary</span><span class=\"params\">(<span class=\"string\">\"random.randrange\"</span>)</span></span>\n\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"numba python: \"</span>, func(<span class=\"number\">500</span>)</span></span>)\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"python python: \"</span>, python_prng.randrange(<span class=\"number\">500</span>)</span></span>)</code></pre>",
  "id": "5a9493ab53c1dbb7437ebb0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T23:09:31.969Z",
  "text": "    def test_numpy_random_permutation(self):\n        python_prng = self._follow_cpython(get_py_state_ptr())\n        func = jit_unary(\"random.randrange\")\n\n        print(\"numba python: \", func(500))\n        print(\"python python: \", python_prng.randrange(500))\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "seems like RandomState.rand() produces the same sequence if the state is correctly cloned",
  "id": "5a9493ad458cbde557d04e84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T23:09:33.601Z",
  "text": "seems like RandomState.rand() produces the same sequence if the state is correctly cloned",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "the above produces the same values",
  "id": "5a9493bc888332ee3ad6d402",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T23:09:48.670Z",
  "text": "the above produces the same values",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and adjusting the state adjusts the values of <code>randint()</code> reported for both numpy and numba",
  "id": "5a9493d96fba1a703aa53b52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T23:10:17.503Z",
  "text": "and adjusting the state adjusts the values of `randint()` reported for both numpy and numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so this suggests I think that the state setting and retrieving behaviour is working ok, but the implementation detail for <code>randint</code> may contain an error",
  "id": "5a9493ffc3c5f8b90d0ca0d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T23:10:55.275Z",
  "text": "so this suggests I think that the state setting and retrieving behaviour is working ok, but the implementation detail for `randint` may contain an error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "ok",
  "id": "5a949412888332ee3ad6d53c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-26T23:11:14.445Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "its a bit strange its ok for python random though",
  "id": "5a9494cac3c5f8b90d0ca4d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:14:18.786Z",
  "text": "its a bit strange its ok for python random though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "given its the same randrange impl underneath",
  "id": "5a9494d635dd17022ef9f59b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:14:30.462Z",
  "text": "given its the same randrange impl underneath",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span>, seems to me like the state pointer index is at 624, which means a shuffle is triggered on the call to get_next_int32",
  "id": "5a94974c6f8b4b9946c6fc57",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:25:00.201Z",
  "text": "@agayev, seems to me like the state pointer index is at 624, which means a shuffle is triggered on the call to get_next_int32",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> how would you recommend implementing a unit test for np.random.permutation()?  I cannot do r = _follow_cpython(...); and then compare the result of r.permutation because Python does not have permutation.  And if I do r = _follow_numpy(...); and then compare the result of r.permutation(), I get a different sequence...",
  "id": "5a949e03e4ff28713aceb064",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:53:39.541Z",
  "text": "@stuartarchibald how would you recommend implementing a unit test for np.random.permutation()?  I cannot do r = _follow_cpython(...); and then compare the result of r.permutation because Python does not have permutation.  And if I do r = _follow_numpy(...); and then compare the result of r.permutation(), I get a different sequence...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, I&#39;ve found the problem",
  "id": "5a949e50c3c5f8b90d0cd832",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:54:56.081Z",
  "text": "ok, I've found the problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L162-L163\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L162-L163</a>",
  "id": "5a949e926fba1a703aa57295",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:56:02.419Z",
  "text": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L162-L163",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L162-L163"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the <code>get_next_int32</code> call increments the state pointer index, <code>get_shifted_int</code> <a href=\"https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L148\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L148</a> also calls it",
  "id": "5a949ec10202dc012e8b97d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:56:49.476Z",
  "text": "the `get_next_int32` call increments the state pointer index, `get_shifted_int` https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L148 also calls it",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L148"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so you get (index++)++ which moves the state on 2 steps instead of 1",
  "id": "5a949ed735dd17022efa2df7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:57:11.655Z",
  "text": "so you get (index++)++ which moves the state on 2 steps instead of 1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I highly suspect that&#39;s what is causing the problem",
  "id": "5a949ee2c3c5f8b90d0cdb1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:57:22.909Z",
  "text": "I highly suspect that's what is causing the problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so this code path is not executed with Python?",
  "id": "5a949f0a6fba1a703aa574d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:58:01.999Z",
  "text": "so this code path is not executed with Python?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "its the IR builder",
  "id": "5a949f7653c1dbb7437ef707",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:59:50.375Z",
  "text": "its the IR builder",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "its building up llvm IR",
  "id": "5a949f7ec3c5f8b90d0cde05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-26T23:59:58.790Z",
  "text": "its building up llvm IR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I mean is this code path not executed when building IR for Numba&#39;s implementation of random.randint()?",
  "id": "5a949fd3458cbde557d08d68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:01:23.801Z",
  "text": "I mean is this code path not executed when building IR for Numba's implementation of random.randint()?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that is the code path that&#39;s being run",
  "id": "5a949fe76fba1a703aa579cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:01:43.199Z",
  "text": "I think that is the code path that's being run",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "for the numpy version",
  "id": "5a949ffa8f1c77ef3a5c875d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:02:02.276Z",
  "text": "for the numpy version",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which is what i was looking at",
  "id": "5a94a003c3c5f8b90d0ce07d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:02:11.481Z",
  "text": "which is what i was looking at",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "oh, okay",
  "id": "5a94a00e53c1dbb7437ef9b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:02:22.712Z",
  "text": "oh, okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If you make the const <a href=\"https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117</a> into say <code>10</code>, you get index+=20 reported",
  "id": "5a94a01a888332ee3ad710b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:02:34.568Z",
  "text": "If you make the const https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117 into say `10`, you get index+=20 reported",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess its hitting that twice and moving the index along too quickly, so the state vars get bumped",
  "id": "5a94a04935dd17022efa3432",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:03:21.022Z",
  "text": "I guess its hitting that twice and moving the index along too quickly, so the state vars get bumped",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I&#39;ll be happy to test it once you have the fix :-)",
  "id": "5a94a13c0202dc012e8ba354",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:07:24.635Z",
  "text": "I'll be happy to test it once you have the fix :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "would you like to fix it ?",
  "id": "5a94a1538f1c77ef3a5c8f6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:07:47.917Z",
  "text": "would you like to fix it ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the problem is something to do with there being too many calls to something that&#39;s incrementing the index",
  "id": "5a94a17953c1dbb7437f018a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:08:25.979Z",
  "text": "I think the problem is something to do with there being too many calls to something that's incrementing the index",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "as noted above",
  "id": "5a94a17e6f8b4b9946c7324d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:08:30.290Z",
  "text": "as noted above",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it is more sporadic that i thought though, its not always doing +=2, sometimes its +=1, so I expect there&#39;s a branch",
  "id": "5a94a1a8e4ff28713acec350",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:09:12.863Z",
  "text": "it is more sporadic that i thought though, its not always doing +=2, sometimes its +=1, so I expect there's a branch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I can try",
  "id": "5a94a1f5458cbde557d097d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:10:29.227Z",
  "text": "I can try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":) thanks",
  "id": "5a94a242e4ff28713acec614",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:11:46.989Z",
  "text": ":) thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "adding printf() to the <code>_random.c</code> and recompiling the DSOs might help",
  "id": "5a94a27e458cbde557d09ac1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:12:46.155Z",
  "text": "adding printf() to the `_random.c` and recompiling the DSOs might help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "you can then see when a C function is called",
  "id": "5a94a2870202dc012e8baa19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:12:55.540Z",
  "text": "you can then see when a C function is called",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>  can you explain what you mean by this? If you make the const <a href=\"https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117</a> into say <code>10</code>, you get index+=20 reported",
  "id": "5a94a992458cbde557d0befd",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:42:58.728Z",
  "text": "@stuartarchibald  can you explain what you mean by this? If you make the const https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117 into say `10`, you get index+=20 reported",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L117"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>  where does index += 20 gets reported?",
  "id": "5a94a99f8f1c77ef3a5cb977",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T00:43:11.205Z",
  "text": "@stuartarchibald  where does index += 20 gets reported?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If you write in a debug function that fetches the index that will allow you probe the index value before and after calls",
  "id": "5a952dcc53c1dbb74381bd6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T10:07:08.311Z",
  "text": "If you write in a debug function that fetches the index that will allow you probe the index value before and after calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I have:<pre><code>def <span class=\"function\"><span class=\"title\">local_get_np_state</span><span class=\"params\">(r)</span></span>:\n    ints, index = r.<span class=\"function\"><span class=\"title\">get_state</span><span class=\"params\">()</span></span>[<span class=\"number\">1</span>:<span class=\"number\">3</span>]\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"local np state index\"</span>, index)</span></span>\n    return ints, index\n\ndef <span class=\"function\"><span class=\"title\">local_get_numba_state</span><span class=\"params\">(state_ptr)</span></span>:\n    index, ints = _helperlib.<span class=\"function\"><span class=\"title\">rnd_get_state</span><span class=\"params\">(state_ptr)</span></span>\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"local numba state index\"</span>, index)</span></span>\n    return ints, index\n\ndef <span class=\"function\"><span class=\"title\">compare</span><span class=\"params\">(loc, r, state_ptr)</span></span>:\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(loc)</span></span>\n    ints, index = <span class=\"function\"><span class=\"title\">local_get_np_state</span><span class=\"params\">(r)</span></span>\n    nints, nindex = <span class=\"function\"><span class=\"title\">local_get_numba_state</span><span class=\"params\">(state_ptr)</span></span>\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"compare ints\"</span>)</span></span>\n    np<span class=\"class\">.testing</span><span class=\"class\">.assert_allclose</span>(ints, nints)\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"compare index\"</span>)</span></span>\n    try:\n        np<span class=\"class\">.testing</span><span class=\"class\">.assert_allclose</span>(index, nindex)\n    except Exception:\n        <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"Do not match. np: %s, nb: %s\"</span> % (index , nindex)</span></span>)\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"\"</span>)</span></span></code></pre>",
  "id": "5a952e92c3c5f8b90d0fb5e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T10:10:26.039Z",
  "text": "I have:\n```\ndef local_get_np_state(r):\n    ints, index = r.get_state()[1:3]\n    print(\"local np state index\", index)\n    return ints, index\n\ndef local_get_numba_state(state_ptr):\n    index, ints = _helperlib.rnd_get_state(state_ptr)\n    print(\"local numba state index\", index)\n    return ints, index\n\ndef compare(loc, r, state_ptr):\n    print(loc)\n    ints, index = local_get_np_state(r)\n    nints, nindex = local_get_numba_state(state_ptr)\n    print(\"compare ints\")\n    np.testing.assert_allclose(ints, nints)\n    print(\"compare index\")\n    try:\n        np.testing.assert_allclose(index, nindex)\n    except Exception:\n        print(\"Do not match. np: %s, nb: %s\" % (index , nindex))\n    print(\"\")\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it looks like the while loop in the<code>_randrange_impl()</code> is executing twice which is the cause of the 2x calls to <code>get_next_int</code> which indirectly increments the state pointer. The reason for the 2 iterations is that the first int grabbed is too large (<code>&gt;stop-start</code> if I&#39;ve read the IR right), so it reruns. However, even if you stop that by preventing the loop from running more than once (so the index advances only by one) the &quot;next int&quot; is not the same as the one from Numpy.",
  "id": "5a9530610202dc012e8e886a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T10:18:09.598Z",
  "text": "it looks like the while loop in the` _randrange_impl()` is executing twice which is the cause of the 2x calls to `get_next_int` which indirectly increments the state pointer. The reason for the 2 iterations is that the first int grabbed is too large (`>stop-start` if I've read the IR right), so it reruns. However, even if you stop that by preventing the loop from running more than once (so the index advances only by one) the \"next int\" is not the same as the one from Numpy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> perhaps I&#39;m doing something wrong, but I do not see the index being increment twice:",
  "id": "5a956fa9e4d1c636049f6116",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-27T14:48:09.486Z",
  "text": "@stuartarchibald perhaps I'm doing something wrong, but I do not see the index being increment twice:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<pre><code>def <span class=\"function\"><span class=\"title\">test_numpy_random_permutation</span><span class=\"params\">(self)</span></span>:\n    r = self._follow_numpy(<span class=\"function\"><span class=\"title\">get_np_state_ptr</span><span class=\"params\">()</span></span>)\n    <span class=\"function\"><span class=\"title\">compare</span><span class=\"params\">(<span class=\"number\">1</span>, r, get_np_state_ptr()</span></span>)\n    func = <span class=\"function\"><span class=\"title\">jit_unary</span><span class=\"params\">(<span class=\"string\">\"np.random.randint\"</span>)</span></span>\n\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"rand number numba: \"</span>, func(<span class=\"number\">10</span>)</span></span>)\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(<span class=\"string\">\"rand number numpy: \"</span>, r.randint(<span class=\"number\">10</span>)</span></span>)\n\n    <span class=\"function\"><span class=\"title\">compare</span><span class=\"params\">(<span class=\"number\">2</span>, r, get_np_state_ptr()</span></span>)</code></pre>",
  "id": "5a956fb06fba1a703aa9ed56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-27T14:48:16.014Z",
  "text": "    def test_numpy_random_permutation(self):\n        r = self._follow_numpy(get_np_state_ptr())\n        compare(1, r, get_np_state_ptr())\n        func = jit_unary(\"np.random.randint\")\n\n        print(\"rand number numba: \", func(10))\n        print(\"rand number numpy: \", r.randint(10))\n\n        compare(2, r, get_np_state_ptr())\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "prints the following",
  "id": "5a956fbbe4ff28713ad32af5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:48:27.223Z",
  "text": "prints the following",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<p>1<br>local np state index 624<br>local numba state index 624<br>compare ints<br>compare index</p><p>rand number numba:  6<br>rand number numpy:  8<br>2<br>local np state index 1<br>local numba state index 1<br>compare ints<br>compare index</p>",
  "id": "5a956fc535dd17022efe8d55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:48:37.872Z",
  "text": "1\nlocal np state index 624\nlocal numba state index 624\ncompare ints\ncompare index\n\nrand number numba:  6\nrand number numpy:  8\n2\nlocal np state index 1\nlocal numba state index 1\ncompare ints\ncompare index\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so after the call to randint, in numba and numpy the indices agree",
  "id": "5a956fde888332ee3adb842c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:49:02.704Z",
  "text": "so after the call to randint, in numba and numpy the indices agree",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "perhaps it depends on your start index too, 624 is the upper bound before a shuffle",
  "id": "5a9570166fba1a703aa9eef9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:49:58.456Z",
  "text": "perhaps it depends on your start index too, 624 is the upper bound before a shuffle",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "given that they both start at the same state and produce different random numbers, my guess is numba&#39;s implementation of randint is different than that of numpy&#39;s.  ",
  "id": "5a957077458cbde557d516c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:51:35.719Z",
  "text": "given that they both start at the same state and produce different random numbers, my guess is numba's implementation of randint is different than that of numpy's.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, so tracking it down further, eliminate the shuffle by setting the index to say 10 or something",
  "id": "5a9571020202dc012e901e6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:53:54.832Z",
  "text": "yeah, so tracking it down further, eliminate the shuffle by setting the index to say 10 or something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>  where exactly? ",
  "id": "5a9571a3c3c5f8b90d115a3e",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:56:35.190Z",
  "text": "@stuartarchibald  where exactly? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well you can control the state ptr, so just set the index in that ?",
  "id": "5a9571ba35dd17022efe988a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:56:58.532Z",
  "text": "well you can control the state ptr, so just set the index in that ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "oh, i see what you mean",
  "id": "5a9571dee4ff28713ad3394b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T14:57:34.059Z",
  "text": "oh, i see what you mean",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> <a href=\"https://pastebin.ca/3978321\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.ca/3978321</a>",
  "id": "5a95772d0202dc012e904595",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:20:13.987Z",
  "text": "@stuartarchibald https://pastebin.ca/3978321",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.ca/3978321"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "this is for randint(100)",
  "id": "5a95773e888332ee3adbaf5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:20:30.137Z",
  "text": "this is for randint(100)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "the thing is, even when they have the same index they end up producing different values",
  "id": "5a957761758c233504c819d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:21:05.569Z",
  "text": "the thing is, even when they have the same index they end up producing different values",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yup, that&#39;s the conclusion I came to",
  "id": "5a95778853c1dbb743836aa3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:21:44.894Z",
  "text": "yup, that's the conclusion I came to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "why don&#39;t we just look at numpy&#39;s PRNG implementation and do what it does?",
  "id": "5a9577e0e4ff28713ad359a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:23:12.059Z",
  "text": "why don't we just look at numpy's PRNG implementation and do what it does?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if you <em>need</em> it to match numpy then that&#39;s probably the place to start",
  "id": "5a9577fb0202dc012e904a2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:23:39.570Z",
  "text": "if you *need* it to match numpy then that's probably the place to start",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "numpy is v. similar",
  "id": "5a95780653c1dbb743836d38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:23:50.529Z",
  "text": "numpy is v. similar",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "what is confusing to me is that, wasn&#39;t it the objective in the first place when numba was implementing numpy&#39;s np.random.randint?",
  "id": "5a95784be4d1c636049f9735",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:24:59.438Z",
  "text": "what is confusing to me is that, wasn't it the objective in the first place when numba was implementing numpy's np.random.randint?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "i mean is this a bug that these two do not match?",
  "id": "5a95787535dd17022efec0eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:25:41.349Z",
  "text": "i mean is this a bug that these two do not match?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "depends, Numba doesn&#39;t absolutely replicate Numpy, it just does its best and does pragmatic things on occasion",
  "id": "5a95787d53c1dbb743836f89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:25:49.748Z",
  "text": "depends, Numba doesn't absolutely replicate Numpy, it just does its best and does pragmatic things on occasion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "We would have to dig back and see exactly why.  Sometimes NumPy doesn&#39;t match NumPy between versions.",
  "id": "5a9578a9e4ff28713ad35e94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-27T15:26:33.731Z",
  "text": "We would have to dig back and see exactly why.  Sometimes NumPy doesn't match NumPy between versions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that of course is another possibility",
  "id": "5a9578bc6f8b4b9946cbc5f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:26:52.214Z",
  "text": "that of course is another possibility",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Numba has spanned everything from NumPy 1.6 to 1.14",
  "id": "5a9578c3458cbde557d5478e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:26:59.998Z",
  "text": "Numba has spanned everything from NumPy 1.6 to 1.14",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so how do you end up testing whether your implementation of some np.random.* matches that of numpy&#39;s?",
  "id": "5a9578d5e4d1c636049f99b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:27:17.753Z",
  "text": "so how do you end up testing whether your implementation of some np.random.* matches that of numpy's?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "it appears that you replicate Python&#39;s PRNG and match your Numpy implementation&#39;s against that -- is that so?",
  "id": "5a9578f9e4d1c636049f9ae5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:27:53.925Z",
  "text": "it appears that you replicate Python's PRNG and match your Numpy implementation's against that -- is that so?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "That may have been the decision that was made at the time.",
  "id": "5a957908e4d1c636049f9b11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:28:08.900Z",
  "text": "That may have been the decision that was made at the time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I think Antoine did this work in 2015",
  "id": "5a9579176f8b4b9946cbc8b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:28:23.151Z",
  "text": "I think Antoine did this work in 2015",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "quite possibly, this was a huge feature so it might have just been the easiest thing to do at the time",
  "id": "5a957923888332ee3adbba86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:28:35.744Z",
  "text": "quite possibly, this was a huge feature so it might have just been the easiest thing to do at the time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "We can change our mind now if it makes more sense now.",
  "id": "5a95792e8f1c77ef3a6130ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:28:46.423Z",
  "text": "We can change our mind now if it makes more sense now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think testing the NumPy RandomState object for the Mersenne twister follows the same sequence as the Numba impl might be a good idea to just get a handle on what the problem is",
  "id": "5a957930888332ee3adbbad5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:28:48.721Z",
  "text": "I think testing the NumPy RandomState object for the Mersenne twister follows the same sequence as the Numba impl might be a good idea to just get a handle on what the problem is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Okay, so the reason I&#39;m asking is that when you implement something that Python does not have, like np.random.permutation(), then there isn&#39;t a baseline to test it against...",
  "id": "5a95795553c1dbb74383761c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:29:25.108Z",
  "text": "Okay, so the reason I'm asking is that when you implement something that Python does not have, like np.random.permutation(), then there isn't a baseline to test it against...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "that is true.  We&#39;re either stuck with doing statistical tests or hard coding expected output for given seeds",
  "id": "5a957a3a758c233504c829ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:33:14.335Z",
  "text": "that is true.  We're either stuck with doing statistical tests or hard coding expected output for given seeds",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It&#39;d be good to just get to whatever the difference in implementation is, even if it&#39;s not fixed, simply knowing is a good start.",
  "id": "5a957a6d0202dc012e905b4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:34:05.431Z",
  "text": "It'd be good to just get to whatever the difference in implementation is, even if it's not fixed, simply knowing is a good start.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;d prefer not to have to have two subtlely different PRNGs in order to mimic Python and NumPy separately.",
  "id": "5a957a9e53c1dbb743837dca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:34:54.432Z",
  "text": "I'd prefer not to have to have two subtlely different PRNGs in order to mimic Python and NumPy separately.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(again, since there is no guarantee that those projects even have the same behavior from release to release)",
  "id": "5a957ac835dd17022efecea7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:35:36.449Z",
  "text": "(again, since there is no guarantee that those projects even have the same behavior from release to release)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "testing PRNGs is a rabbit-hole of annoying tradeoffs",
  "id": "5a957adf6fba1a703aaa3025",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:35:59.213Z",
  "text": "testing PRNGs is a rabbit-hole of annoying tradeoffs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the PRNGs themselves could be the same, and the implementation to shovel numbers from them into userland that will differ",
  "id": "5a957b17458cbde557d5544c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:36:55.958Z",
  "text": "I think the PRNGs themselves could be the same, and the implementation to shovel numbers from them into userland that will differ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> is Numba&#39;s PRNG implementation in _random.c?  In other words, if I want to find how Numba implements PRNG, is that where should I look?  Or is it the LLVM IR building code in randomimpl.py?",
  "id": "5a957c6735dd17022efed81f",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:42:31.735Z",
  "text": "@stuartarchibald is Numba's PRNG implementation in _random.c?  In other words, if I want to find how Numba implements PRNG, is that where should I look?  Or is it the LLVM IR building code in randomimpl.py?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well its a combination, the C code holds the state in TLS and has some of the lowest level routines, the rest is in targets/randomimpl.py",
  "id": "5a957d2935dd17022efedc56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:45:45.529Z",
  "text": "well its a combination, the C code holds the state in TLS and has some of the lowest level routines, the rest is in targets/randomimpl.py",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "there&#39;s a trade off between ease of programming in C and writing LLVM IR via the builder which can then be optimised/inlined by the compilation chain",
  "id": "5a957d69758c233504c83e18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T15:46:49.306Z",
  "text": "there's a trade off between ease of programming in C and writing LLVM IR via the builder which can then be optimised/inlined by the compilation chain",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Regarding llvmlite<span data-link-type=\"issue\" data-issue=\"329\" class=\"issue\">#329</span>, would your method for forcing a test to the Skylake architecture also work to force llvmlite to function as a cross-compiler?",
  "id": "5a95c894e4d1c63604a18778",
  "issues": [
   {
    "number": "329"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T21:07:32.533Z",
  "text": "@stuartarchibald: Regarding llvmlite#329, would your method for forcing a test to the Skylake architecture also work to force llvmlite to function as a cross-compiler?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> I think the skylake hack is basically just setting up a target machine that is specialised via environment overrides (as that&#39;s easy to do in testing). I imagine it",
  "id": "5a95daa06f8b4b9946cdfdfd",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T22:24:32.415Z",
  "text": "@seibert I think the skylake hack is basically just setting up a target machine that is specialised via environment overrides (as that's easy to do in testing). I imagine it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "is possible create non native target machines so long as LLVM is compiled to support the target",
  "id": "5a95daf7758c233504ca629b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T22:25:59.931Z",
  "text": "is possible create non native target machines so long as LLVM is compiled to support the target",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The AMD ROC / AMDGCN target works like that IIRC.",
  "id": "5a95db348f1c77ef3a636c8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-27T22:27:00.113Z",
  "text": "The AMD ROC / AMDGCN target works like that IIRC.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I think I found the bug with PRNG; how do you do bitwise and with llvmlite?",
  "id": "5a96d65d8f1c77ef3a6816a5",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:18:37.145Z",
  "text": "@stuartarchibald I think I found the bug with PRNG; how do you do bitwise and with llvmlite?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "oh, it&#39;s and_",
  "id": "5a96d677458cbde557dc3d8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:19:03.880Z",
  "text": "oh, it's and_",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> yes found the bug and have a fix",
  "id": "5a96d6c68f1c77ef3a681868",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:20:22.689Z",
  "text": "@stuartarchibald yes found the bug and have a fix",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh well done :)",
  "id": "5a96d6eb6f8b4b9946d2a71c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:20:59.499Z",
  "text": "oh well done :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "what was it ?",
  "id": "5a96d6f035dd17022e05adb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:21:04.486Z",
  "text": "what was it ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L151\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L151</a>",
  "id": "5a96d74453c1dbb7438a4474",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:22:28.478Z",
  "text": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L151",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py#L151"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Here, we are returning builder.lshr of whatever get_next_int32 returns",
  "id": "5a96d75f35dd17022e05b020",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:22:55.356Z",
  "text": "Here, we are returning builder.lshr of whatever get_next_int32 returns",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "However, in numpy code, this is what happens:",
  "id": "5a96d7776fba1a703ab10064",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:23:19.606Z",
  "text": "However, in numpy code, this is what happens:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<a href=\"https://github.com/numpy/numpy/blob/master/numpy/random/mtrand/randomkit.c#L303\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numpy/numpy/blob/master/numpy/random/mtrand/randomkit.c#L303</a>",
  "id": "5a96d78fe4d1c63604a6abe7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T16:23:43.573Z",
  "text": "https://github.com/numpy/numpy/blob/master/numpy/random/mtrand/randomkit.c#L303",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numpy/numpy/blob/master/numpy/random/mtrand/randomkit.c#L303"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "they bitwise-and whatever rk_uint32 returns with the mask",
  "id": "5a96d7bc6fba1a703ab101e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:24:28.542Z",
  "text": "they bitwise-and whatever rk_uint32 returns with the mask",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "with seed of 2 and randint(100); the value of mask is 127 -- i printed it out ",
  "id": "5a96d8086fba1a703ab103fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:25:44.498Z",
  "text": "with seed of 2 and randint(100); the value of mask is 127 -- i printed it out ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "after replacing the last line of get_shifted_int with the following",
  "id": "5a96d8358f1c77ef3a682142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:26:29.325Z",
  "text": "after replacing the last line of get_shifted_int with the following",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<pre><code>    foo = ir.<span class=\"function\"><span class=\"title\">Constant</span><span class=\"params\">(nbits.type, <span class=\"number\">127</span>)</span></span>\n    return builder.<span class=\"function\"><span class=\"title\">and_</span><span class=\"params\">(y, foo)</span></span></code></pre>",
  "id": "5a96d836e4ff28713ada401e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:26:30.295Z",
  "text": "        foo = ir.Constant(nbits.type, 127)\n        return builder.and_(y, foo)\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "numba produces the same sequence as numpy",
  "id": "5a96d863888332ee3ae284ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:27:15.411Z",
  "text": "numba produces the same sequence as numpy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":) excellent, well done.",
  "id": "5a96d86e8f1c77ef3a6822c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:27:26.842Z",
  "text": ":) excellent, well done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess this means nbits is computed incorrectly ?",
  "id": "5a96d88935dd17022e05b624",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:27:53.769Z",
  "text": "I guess this means nbits is computed incorrectly ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I don&#39;t know -- is that left shift supposed to be equivalent to the masking that numpy does?",
  "id": "5a96d8da6fba1a703ab1089f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:29:14.426Z",
  "text": "I don't know -- is that left shift supposed to be equivalent to the masking that numpy does?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "when we call np.random.randint(N); numpy sets mask to N-1 and then does the following sequence:",
  "id": "5a96d9058f1c77ef3a6826d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:29:57.968Z",
  "text": "when we call np.random.randint(N); numpy sets mask to N-1 and then does the following sequence:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<pre><code>/* Smallest bit mask &gt;= max */\n<span class=\"constant\">mask</span> |= mask &gt;&gt; 1;\n<span class=\"constant\">mask</span> |= mask &gt;&gt; 2;\n<span class=\"constant\">mask</span> |= mask &gt;&gt; 4;\n<span class=\"constant\">mask</span> |= mask &gt;&gt; 8;\n<span class=\"constant\">mask</span> |= mask &gt;&gt; 16;\n<span class=\"constant\">mask</span> |= mask &gt;&gt; 32;</code></pre>",
  "id": "5a96d90d35dd17022e05b8fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:30:05.247Z",
  "text": "    /* Smallest bit mask >= max */\n    mask |= mask >> 1;\n    mask |= mask >> 2;\n    mask |= mask >> 4;\n    mask |= mask >> 8;\n    mask |= mask >> 16;\n    mask |= mask >> 32;\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "but that&#39;s for the uint64_t case",
  "id": "5a96d92753c1dbb7438a4f25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:30:31.574Z",
  "text": "but that's for the uint64_t case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "and then does bitwise-and of mask with whatever get_next_int32",
  "id": "5a96d932458cbde557dc4d20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:30:42.137Z",
  "text": "and then does bitwise-and of mask with whatever get_next_int32",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "yea, so for uint32_t case it does not do the last one: mask |= mask &gt;&gt; 32",
  "id": "5a96d951458cbde557dc4de0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:31:13.623Z",
  "text": "yea, so for uint32_t case it does not do the last one: mask |= mask >> 32",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "and so on for all the remaining ones",
  "id": "5a96d96f8f1c77ef3a682922",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:31:43.142Z",
  "text": "and so on for all the remaining ones",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I do not see how all those masks computation and bitwise-and corresponds to the single left shift that numba is doing",
  "id": "5a96d9bd8f1c77ef3a682b11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:33:01.996Z",
  "text": "I do not see how all those masks computation and bitwise-and corresponds to the single left shift that numba is doing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so its doing <code>return y &lt;&lt; zext(0x20 - nbits, int32)</code> ?",
  "id": "5a96db2c8f1c77ef3a683503",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T16:39:08.176Z",
  "text": "so its doing `return y << zext(0x20 - nbits, int32)` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "numpy? or numba?",
  "id": "5a96db52e4d1c63604a6c489",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T16:39:46.691Z",
  "text": "numpy? or numba?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "numba",
  "id": "5a96db570202dc012e975856",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T16:39:51.783Z",
  "text": "numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> yes, that&#39;s what it does",
  "id": "5a96ddb98f1c77ef3a6840ac",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T16:50:01.668Z",
  "text": "@stuartarchibald yes, that's what it does",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> what should be the value of nbits when calling np.random.seed(2); np.random.randint(100)?",
  "id": "5a96de1c53c1dbb7438a6bd9",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T16:51:40.558Z",
  "text": "@stuartarchibald what should be the value of nbits when calling np.random.seed(2); np.random.randint(100)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think it should just be the 0x0...0Y11...1, where Y is the MSB of (in the case of randint) the value",
  "id": "5a96def1458cbde557dc6f30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T16:55:13.187Z",
  "text": "I think it should just be the 0x0...0Y11...1, where Y is the MSB of (in the case of randint) the value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "looks like the code goes a ctlz on n and subtracts that from the width of type n",
  "id": "5a96dfd2758c233504cf5084",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T16:58:58.794Z",
  "text": "looks like the code goes a ctlz on n and subtracts that from the width of type n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> so with a seed of 2, get_next_int32 produces 1872583848",
  "id": "5a96e3e10202dc012e978b93",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T17:16:17.075Z",
  "text": "@stuartarchibald so with a seed of 2, get_next_int32 produces 1872583848",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> while numpy takes the last seven bits, producing 40, numba takes the first seven bits, producing 55",
  "id": "5a96e3f5888332ee3ae2c283",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T17:16:37.493Z",
  "text": "@stuartarchibald while numpy takes the last seven bits, producing 40, numba takes the first seven bits, producing 55",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> so what we need to do is generate the number 2^n-1, which would have all the 1 bits set in the n LSB position, and do bitwise and",
  "id": "5a96e5afe4d1c63604a70284",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T17:23:59.122Z",
  "text": "@stuartarchibald so what we need to do is generate the number 2^n-1, which would have all the 1 bits set in the n LSB position, and do bitwise and",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> if you show me the code for that using llvmlite, I will submit the patch :-)  ",
  "id": "5a96e5d70202dc012e979894",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T17:24:39.049Z",
  "text": "@stuartarchibald if you show me the code for that using llvmlite, I will submit the patch :-)  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "or shl, lshr ",
  "id": "5a96e5e3758c233504cf733a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T17:24:51.915Z",
  "text": "or shl, lshr ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I assume this should be really trivial :-)  looking forward to the code, so that I can submit my np.random.permutation() patch",
  "id": "5a96e72b6f8b4b9946d3083a",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:30:19.775Z",
  "text": "@stuartarchibald I assume this should be really trivial :-)  looking forward to the code, so that I can submit my np.random.permutation() patch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "would you like to write it ?",
  "id": "5a96e73ae4ff28713adaa395",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:30:34.508Z",
  "text": "would you like to write it ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "given you seem to have done all the work",
  "id": "5a96e7428f1c77ef3a68746e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:30:42.414Z",
  "text": "given you seem to have done all the work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "sure -- can you tell me how to generate a string of n 1 bits using llvmlite?",
  "id": "5a96e76b888332ee3ae2d900",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:31:23.803Z",
  "text": "sure -- can you tell me how to generate a string of n 1 bits using llvmlite?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "same way would would in C",
  "id": "5a96e77f8f1c77ef3a687575",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:31:43.961Z",
  "text": "same way would would in C",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "oh okay, I thought there would be a shorter way, a ready instruction or something",
  "id": "5a96e79a6fba1a703ab15ef3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:32:10.129Z",
  "text": "oh okay, I thought there would be a shorter way, a ready instruction or something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "perhaps have a think about the operations you&#39;d do get that if you were writing C code",
  "id": "5a96e79b0202dc012e97a0af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:32:11.945Z",
  "text": "perhaps have a think about the operations you'd do get that if you were writing C code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span>, I&#39;m managed to fix it locally, but we&#39;re going to need to heavily test this to make sure it is right under all circumstances",
  "id": "5a96eadce4ff28713adab8c5",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:46:04.483Z",
  "text": "@agayev, I'm managed to fix it locally, but we're going to need to heavily test this to make sure it is right under all circumstances",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> Great!  Can you share the code please?  I&#39;m okay with you submitting this even though I found the bug -- no worries about that",
  "id": "5a96eb4ae4ff28713adabb6c",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:47:54.823Z",
  "text": "@stuartarchibald Great!  Can you share the code please?  I'm okay with you submitting this even though I found the bug -- no worries about that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "as a quick hack:",
  "id": "5a96eb628f1c77ef3a6887f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:48:18.405Z",
  "text": "as a quick hack:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "```         mask = builder.not_(ir.Constant(y.type, 0))",
  "id": "5a96eb6a6fba1a703ab172c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:48:26.783Z",
  "text": "```         mask = builder.not_(ir.Constant(y.type, 0))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>    <span class=\"attribute\">mask</span> = builder.<span class=\"function\"><span class=\"title\">lshr</span><span class=\"params\">(mask, builder.zext(shift, y.type)</span></span>)</code></pre>",
  "id": "5a96eb6a53c1dbb7438ab70f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:48:26.925Z",
  "text": "        mask = builder.lshr(mask, builder.zext(shift, y.type))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>    return builder.<span class=\"function\"><span class=\"title\">and_</span><span class=\"params\">(y, builder.zext(mask, y.type)</span></span>)</code></pre>",
  "id": "5a96eb6b6f8b4b9946d32171",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:48:27.029Z",
  "text": "        return builder.and_(y, builder.zext(mask, y.type))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": " ```",
  "id": "5a96eb6b6f8b4b9946d32173",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:48:27.128Z",
  "text": " ```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh probably don&#39;t need the zext in the line with the and",
  "id": "5a96eb8d6f8b4b9946d32239",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:49:01.133Z",
  "text": "oh probably don't need the zext in the line with the and",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that should make it ok for the <code>ifsmall</code> branch",
  "id": "5a96ebe9e4d1c63604a7281f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:50:33.599Z",
  "text": "that should make it ok for the `ifsmall` branch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "slightly suspicious the iflarge branch is wrong too",
  "id": "5a96ebf96fba1a703ab176ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:50:49.293Z",
  "text": "slightly suspicious the iflarge branch is wrong too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Yep, this works.",
  "id": "5a96ec386f8b4b9946d32636",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:51:52.539Z",
  "text": "Yep, this works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Without the patch:",
  "id": "5a96ec3b458cbde557dcbc59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:51:55.226Z",
  "text": "Without the patch:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\nimport numpy as np<br>import numba<br>np.random.seed(2); np.random.randint(100); np.random.randint(100)<br>40<br>15<br><span data-link-type=\"mention\" data-screen-name=\"numba\" class=\"mention\">@numba</span>.jit<br>... def foo(): np.random.seed(2); print(np.random.randint(100)); print(np.random.randint(100));<br>...<br>foo()<br>55<br>23</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5a96ec428f1c77ef3a688c8c",
  "issues": [],
  "mentions": [
   {
    "screenName": "numba",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:52:02.902Z",
  "text": ">>> import numpy as np\n>>> import numba\n>>> np.random.seed(2); np.random.randint(100); np.random.randint(100)\n40\n15\n>>> @numba.jit\n... def foo(): np.random.seed(2); print(np.random.randint(100)); print(np.random.randint(100));\n... \n>>> foo()\n55\n23",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "With the patch:",
  "id": "5a96ec47458cbde557dcbce1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:52:07.183Z",
  "text": "With the patch:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\nimport numpy as np<br>import numba<br>np.random.seed(2); np.random.randint(100); np.random.randint(100)<br>40<br>15<br><span data-link-type=\"mention\" data-screen-name=\"numba\" class=\"mention\">@numba</span>.jit<br>... def foo(): np.random.seed(2); print(np.random.randint(100)); print(np.random.randint(100));<br>...<br>foo()<br>40<br>15</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5a96ec4f458cbde557dcbcec",
  "issues": [],
  "mentions": [
   {
    "screenName": "numba",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:52:15.725Z",
  "text": ">>> import numpy as np\n>>> import numba\n>>> np.random.seed(2); np.random.randint(100); np.random.randint(100)\n40\n15\n>>> @numba.jit\n... def foo(): np.random.seed(2); print(np.random.randint(100)); print(np.random.randint(100));\n... \n>>> foo()\n40\n15",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "now ask for a randint in range (1&lt;&lt;33)",
  "id": "5a96ec68e4ff28713adac16b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:52:40.559Z",
  "text": "now ask for a randint in range (1<<33)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "works there too",
  "id": "5a96ecd835dd17022e062878",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:54:32.774Z",
  "text": "works there too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "without the patch:",
  "id": "5a96ecdb6fba1a703ab17a9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:54:35.475Z",
  "text": "without the patch:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\nimport numpy as np<br>import numba<br>1&lt;&lt;33<br>8589934592<br>np.random.seed(2); np.random.randint(1&lt;&lt;33); np.random.randint(1&lt;&lt;33)<br>794921487<br>8295904840<br><span data-link-type=\"mention\" data-screen-name=\"numba\" class=\"mention\">@numba</span>.jit<br>... def foo(): np.random.seed(2); print(np.random.randint(1&lt;&lt;33)); print(np.random.randint(1&lt;&lt;33));<br>...<br>foo()<br>1872583848<br>6164662738</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5a96ece8c3c5f8b90d19051c",
  "issues": [],
  "mentions": [
   {
    "screenName": "numba",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:54:48.897Z",
  "text": ">>> import numpy as np\n>>> import numba\n>>> 1<<33\n8589934592\n>>> np.random.seed(2); np.random.randint(1<<33); np.random.randint(1<<33)\n794921487\n8295904840\n>>> @numba.jit\n... def foo(): np.random.seed(2); print(np.random.randint(1<<33)); print(np.random.randint(1<<33));\n... \n>>> foo()\n1872583848\n6164662738",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "with the patch",
  "id": "5a96ecec35dd17022e06290d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:54:52.412Z",
  "text": "with the patch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\nimport numpy as np<br>import numba<br>np.random.seed(2); np.random.randint(1&lt;&lt;33); np.random.randint(1&lt;&lt;33)<br>794921487<br>8295904840<br><span data-link-type=\"mention\" data-screen-name=\"numba\" class=\"mention\">@numba</span>.jit<br>... def foo(): np.random.seed(2); print(np.random.randint(1&lt;&lt;33)); print(np.random.randint(1&lt;&lt;33));<br>...<br>foo()<br>794921487<br>8295904840</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5a96ecf2458cbde557dcc03c",
  "issues": [],
  "mentions": [
   {
    "screenName": "numba",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:54:58.121Z",
  "text": ">>> import numpy as np\n>>> import numba\n>>> np.random.seed(2); np.random.randint(1<<33); np.random.randint(1<<33)\n794921487\n8295904840\n>>> @numba.jit\n... def foo(): np.random.seed(2); print(np.random.randint(1<<33)); print(np.random.randint(1<<33));\n... \n>>> foo()\n794921487\n8295904840",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "My hunch is, this is going to break Python -- given that the tests were working correctly for Numba&#39;s Python PRNG implementation, i guess Python uses the topmost bits...",
  "id": "5a96ed236f8b4b9946d32b57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-02-28T17:55:47.146Z",
  "text": "My hunch is, this is going to break Python -- given that the tests were working correctly for Numba's Python PRNG implementation, i guess Python uses the topmost bits...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Testing that now...",
  "id": "5a96ed286f8b4b9946d32b7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T17:55:52.806Z",
  "text": "Testing that now...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well, if it does, having a branch based on <code>&quot;py&quot;, &quot;np&quot;</code> isn&#39;t too onerous",
  "id": "5a96ed676fba1a703ab17d8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T17:56:55.525Z",
  "text": "well, if it does, having a branch based on `\"py\", \"np\"` isn't too onerous",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I can&#39;t seem to get them to match up for large values",
  "id": "5a96ee856f8b4b9946d33117",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T18:01:41.238Z",
  "text": "I can't seem to get them to match up for large values",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I can :-)",
  "id": "5a96eeb36fba1a703ab1842e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T18:02:27.358Z",
  "text": "I can :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Can you paste the code that produces different values?",
  "id": "5a96eebb758c233504cfa66f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-02-28T18:02:35.206Z",
  "text": "Can you paste the code that produces different values?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Also, it appears not to break Python",
  "id": "5a96eed1c3c5f8b90d190ea8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:02:57.914Z",
  "text": "Also, it appears not to break Python",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Are you going to create the issue so that we can have travis to run the tests on it?  Or should I do it?",
  "id": "5a96eefd888332ee3ae303a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:03:41.860Z",
  "text": "Are you going to create the issue so that we can have travis to run the tests on it?  Or should I do it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well I think first we need to write some better unit tests",
  "id": "5a96ef130202dc012e97ccbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:04:03.358Z",
  "text": "well I think first we need to write some better unit tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Okay, let me first run the random test suite locally and see if this breaks anything",
  "id": "5a96ef380202dc012e97cd52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:04:40.826Z",
  "text": "Okay, let me first run the random test suite locally and see if this breaks anything",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ones that assert the sequences produced by numpy and numba are identical across a range of dtypes and to include checking that the numba PRNG state and the numpy state are identical throughout",
  "id": "5a96ef62888332ee3ae307b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:05:22.366Z",
  "text": "ones that assert the sequences produced by numpy and numba are identical across a range of dtypes and to include checking that the numba PRNG state and the numpy state are identical throughout",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "we need to check that shuffles are triggered correctly too at the end of the sequence and that once shuffled it produces the same sequence in both impls",
  "id": "5a96ef90e4d1c63604a73c43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:06:08.733Z",
  "text": "we need to check that shuffles are triggered correctly too at the end of the sequence and that once shuffled it produces the same sequence in both impls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "at which point, I&#39;ll feel more convinced",
  "id": "5a96ef9f0202dc012e97cf57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:06:23.128Z",
  "text": "at which point, I'll feel more convinced",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "this patch breaks some existing tests",
  "id": "5a96efc20202dc012e97cfff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:06:58.358Z",
  "text": "this patch breaks some existing tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if the existing tests were checking np behaved like cpython random then that&#39;s expected I think",
  "id": "5a96efe86f8b4b9946d33922",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:07:36.075Z",
  "text": "if the existing tests were checking np behaved like cpython random then that's expected I think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Okay, two things: (1) you are right that it does not work for range 1&lt;&lt;33, and (2) it does break Python -- I was right, Python takes the leftmost n bits whereas numpy takes the  rightmost n bits.",
  "id": "5a96f38853c1dbb7438ae769",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:23:04.364Z",
  "text": "Okay, two things: (1) you are right that it does not work for range 1<<33, and (2) it does break Python -- I was right, Python takes the leftmost n bits whereas numpy takes the  rightmost n bits.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Now that we know the issue, cleaning up the mess in the tests and properly fixing it is straightforward but a lot of work.  Unfortunately I do not have time in the foreseeable future for doing this.  I think this is a good smart student&#39;s starter work that <span data-link-type=\"mention\" data-screen-name=\"teoliphant\" class=\"mention\">@teoliphant</span> was asking about.  Perhaps we can create an issue and mark it as such.",
  "id": "5a96f4926f8b4b9946d35238",
  "issues": [],
  "mentions": [
   {
    "screenName": "teoliphant",
    "userId": "54185f0c163965c9bc204e58",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:27:30.611Z",
  "text": "Now that we know the issue, cleaning up the mess in the tests and properly fixing it is straightforward but a lot of work.  Unfortunately I do not have time in the foreseeable future for doing this.  I think this is a good smart student's starter work that @teoliphant was asking about.  Perhaps we can create an issue and mark it as such.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span>. ok, thanks for your efforts. If you don&#39;t have time to sort it, instead, please could you possibly open a PR with what you have so far + any testing harnesses and a description of what the problem is and it&#39;s reach? This would allow someone else to carry on",
  "id": "5a96f630c3c5f8b90d193804",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T18:34:24.191Z",
  "text": "@agayev. ok, thanks for your efforts. If you don't have time to sort it, instead, please could you possibly open a PR with what you have so far + any testing harnesses and a description of what the problem is and it's reach? This would allow someone else to carry on",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> sure, I will do that.",
  "id": "5a970f446f8b4b9946d3e342",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T20:21:24.456Z",
  "text": "@stuartarchibald sure, I will do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> also, can you please take a look at <span data-link-type=\"issue\" data-issue=\"2745\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2745</span> ?  I submitted the tests you requested a week ago.  Thanks!",
  "id": "5a9710236f8b4b9946d3e960",
  "issues": [
   {
    "number": "2745",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T20:25:07.630Z",
  "text": "@stuartarchibald also, can you please take a look at https://github.com/numba/numba/issues/2745 ?  I submitted the tests you requested a week ago.  Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span> yes, will do, sorry for the delay! It is both on my radar and now in the near field too :)",
  "id": "5a972a1753c1dbb7438c0e41",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T22:15:51.868Z",
  "text": "@agayev yes, will do, sorry for the delay! It is both on my radar and now in the near field too :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(and thanks for sorting a PR/ticket for the PRNG bug)",
  "id": "5a972acd53c1dbb7438c1106",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-02-28T22:18:53.764Z",
  "text": "(and thanks for sorting a PR/ticket for the PRNG bug)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-06T15:10:20.626Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yay, looks like LLVM 6 has some header changes: <span data-link-type=\"issue\" data-issue=\"333\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#333</span>",
  "id": "5a9eaf540a1614b712eb1489",
  "issues": [
   {
    "number": "333",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-06T15:10:12.323Z",
  "text": "yay, looks like LLVM 6 has some header changes: https://github.com/numba/llvmlite/issues/333",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "be a shame if it didn&#39;t :)",
  "id": "5a9eb02f53c1dbb743ae337d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-06T15:13:51.619Z",
  "text": "be a shame if it didn't :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "the real fun is when there are IR changes",
  "id": "5a9eb04b53c1dbb743ae33cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-06T15:14:19.958Z",
  "text": "the real fun is when there are IR changes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "at least the C++ compiler tells you where you screwed up",
  "id": "5a9eb0576f8b4b9946f64ac3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-06T15:14:31.327Z",
  "text": "at least the C++ compiler tells you where you screwed up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve got this function that clearly has a type unification issue:<pre><code><span class=\"keyword\">from</span> numba <span class=\"keyword\">import</span> njit\n\n<span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(x)</span>:</span>\n    <span class=\"keyword\">if</span> x &gt; <span class=\"number\">5</span>:\n        <span class=\"keyword\">return</span> [<span class=\"number\">1</span>]\n    <span class=\"keyword\">else</span>:\n        <span class=\"keyword\">return</span> <span class=\"number\">7</span>\n\nfoo(<span class=\"number\">5</span>)</code></pre>",
  "id": "5aa01b82e4d1c63604d28bb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-07T17:04:02.091Z",
  "text": "I've got this function that clearly has a type unification issue:\n```\nfrom numba import njit\n\n@njit\ndef foo(x):\n    if x > 5:\n        return [1]\n    else:\n        return 7\n\nfoo(5)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-07T17:04:45.148Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and have made it so that this appears:<pre><code class=\"text\">numba.errors.TypingError: Failed at nopython (nopython frontend)&#10;Can&#39;t unify return type from the following types: int64, list(int64)&#10;  Return of: IR name &#39;$14.2&#39;, type &#39;int64&#39;, location: demo3.py (8)&#10;  Return of: IR name &#39;$8.3&#39;, type &#39;list(int64)&#39;, location: demo3.py (6)</code></pre>",
  "id": "5aa01b90c3c5f8b90d44d3f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-07T17:04:16.845Z",
  "text": "and have made it so that this appears:\n```text\nnumba.errors.TypingError: Failed at nopython (nopython frontend)\nCan't unify return type from the following types: int64, list(int64)\n  Return of: IR name '$14.2', type 'int64', location: demo3.py (8)\n  Return of: IR name '$8.3', type 'list(int64)', location: demo3.py (6)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "suggestions for improvements ... ?",
  "id": "5aa01b9ff3f6d24c684a5d55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-07T17:04:31.540Z",
  "text": "suggestions for improvements ... ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I could possibly drag code on the offending line out, would that be useful (I guess in ipython it would be as there&#39;s no numbering)?",
  "id": "5aa01bfa8f1c77ef3a93a8c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-07T17:06:02.434Z",
  "text": "I could possibly drag code on the offending line out, would that be useful (I guess in ipython it would be as there's no numbering)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code class=\"text\">numba.errors.TypingError: Failed at nopython (nopython frontend)&#10;Can&#39;t unify return type from the following types: int64, list(int64)&#10;  Return of: IR name &#39;$14.2&#39;, type &#39;int64&#39;, location: File &quot;demo3.py&quot;, line 8:&#10;return 7&#10;  Return of: IR name &#39;$8.3&#39;, type &#39;list(int64)&#39;, location: File &quot;demo3.py&quot;, line 6:&#10;return [1]</code></pre>",
  "id": "5aa01ea5e4d1c63604d2a166",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-07T17:17:25.474Z",
  "text": "```text\nnumba.errors.TypingError: Failed at nopython (nopython frontend)\nCan't unify return type from the following types: int64, list(int64)\n  Return of: IR name '$14.2', type 'int64', location: File \"demo3.py\", line 8:\nreturn 7\n  Return of: IR name '$8.3', type 'list(int64)', location: File \"demo3.py\", line 6:\nreturn [1]\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh nice",
  "id": "5aa01f138f1c77ef3a93bd29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-07T17:19:15.716Z",
  "text": "oh nice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, this looks pretty good",
  "id": "5aa033f88f1c77ef3a943f27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-07T18:48:24.255Z",
  "text": "yeah, this looks pretty good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": ":fire: :fire: :fire: LLVM 6.0 released for real",
  "id": "5aa160a3888332ee3a145908",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:11:15.800Z",
  "text": ":fire: :fire: :fire: LLVM 6.0 released for real",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-08T16:12:47.207Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<p>IR change:</p><blockquote>\n<p>The fast-math-flags (FMF) have been updated. Previously, the \u2018fast\u2019 flag indicated that floating-point reassociation was allowed and all other flags were set too. The \u2018fast\u2019 flag still exists, but there is a new flag called \u2018reassoc\u2019 to indicate specifically that reassociation is allowed. A new bit called \u2018afn\u2019 was also added to selectively allow approximations for common mathlib functions like square-root. The new flags provide more flexibility to enable/disable specific floating-point optimizations. Making the optimizer respond appropriately to these flags is an ongoing effort.</p></blockquote>\n",
  "id": "5aa160ea0a1614b712f8abf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:12:26.130Z",
  "text": "IR change:\n\n> The fast-math-flags (FMF) have been updated. Previously, the \u2018fast\u2019 flag indicated that floating-point reassociation was allowed and all other flags were set too. The \u2018fast\u2019 flag still exists, but there is a new flag called \u2018reassoc\u2019 to indicate specifically that reassociation is allowed. A new bit called \u2018afn\u2019 was also added to selectively allow approximations for common mathlib functions like square-root. The new flags provide more flexibility to enable/disable specific floating-point optimizations. Making the optimizer respond appropriately to these flags is an ongoing effort.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: is this a bug?",
  "id": "5aa163b0888332ee3a146a07",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:24:16.500Z",
  "text": "@stuartarchibald: is this a bug?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "def foo(a): return a.T",
  "id": "5aa163b28f1c77ef3a9a06d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:24:18.041Z",
  "text": "def foo(a): return a.T",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "expected = foo(np.ones(1))",
  "id": "5aa163b86f8b4b994603bffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:24:24.282Z",
  "text": "expected = foo(np.ones(1))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "got = numba.njit(foo)(np.ones(1))",
  "id": "5aa163bdf3f6d24c6850af07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:24:29.101Z",
  "text": "got = numba.njit(foo)(np.ones(1))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "expected.flags.owndata == got.flags.owndata",
  "id": "5aa163c4e4ff28713a0c03df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:24:36.796Z",
  "text": "expected.flags.owndata == got.flags.owndata",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "False",
  "id": "5aa163c9c3c5f8b90d4b5ea7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:24:41.763Z",
  "text": "False",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "what are the actual values on each side of that ==?",
  "id": "5aa163dc458cbde5570f19ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:25:00.565Z",
  "text": "what are the actual values on each side of that ==?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "expected.flags.owndata is False",
  "id": "5aa163ea6fba1a703ae306a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:25:14.643Z",
  "text": "expected.flags.owndata is False",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, that was what I expected (no pun intended).  That seems like it should be a bug then.",
  "id": "5aa16443888332ee3a146e2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:26:43.299Z",
  "text": "ok, that was what I expected (no pun intended).  That seems like it should be a bug then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "because it either means we are duplicating the data to transpose it, or we have two arrays that think they own the same buffer",
  "id": "5aa1645e6f8b4b994603c2ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:27:10.373Z",
  "text": "because it either means we are duplicating the data to transpose it, or we have two arrays that think they own the same buffer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "I think it is the latter",
  "id": "5aa164a2e4ff28713a0c09f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:28:18.417Z",
  "text": "I think it is the latter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\ny.flags<br>  C_CONTIGUOUS : True<br>  F_CONTIGUOUS : True<br>  OWNDATA : True<br>  WRITEABLE : True<br>  ALIGNED : True<br>  WRITEBACKIFCOPY : False<br>  UPDATEIFCOPY : False<br>x<br>array([1.])<br>y[0] = 8<br>x<br>array([8.])<br>y<br>array([8.])</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5aa164a96fba1a703ae30a88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:28:25.167Z",
  "text": ">>> y.flags\n  C_CONTIGUOUS : True\n  F_CONTIGUOUS : True\n  OWNDATA : True\n  WRITEABLE : True\n  ALIGNED : True\n  WRITEBACKIFCOPY : False\n  UPDATEIFCOPY : False\n>>> x\narray([1.])\n>>> y[0] = 8\n>>> x\narray([8.])\n>>> y\narray([8.])\n>>> ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so before that, I did this",
  "id": "5aa164bc6f8b4b994603c484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-08T16:28:44.551Z",
  "text": "so before that, I did this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\nx = np.ones(1)<br>y = numba.njit(foo)(x)</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5aa164c253c1dbb743bbe9c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-08T16:28:50.855Z",
  "text": ">>> x = np.ones(1)\n>>> y = numba.njit(foo)(x)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> / <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> : Do you remember how we avoided the problem with distutils trying to bytecompile a Python 3-only test file?  <a href=\"http://package21.nyi.freebsd.org/data/111amd64-default-qat/463771/logs/py27-numba-0.37.0.log\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://package21.nyi.freebsd.org/data/111amd64-default-qat/463771/logs/py27-numba-0.37.0.log</a>",
  "id": "5aa1820f35dd17022e3882a5",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-08T18:33:51.728Z",
  "text": "@stuartarchibald / @sklam : Do you remember how we avoided the problem with distutils trying to bytecompile a Python 3-only test file?  http://package21.nyi.freebsd.org/data/111amd64-default-qat/463771/logs/py27-numba-0.37.0.log",
  "unread": false,
  "urls": [
   {
    "url": "http://package21.nyi.freebsd.org/data/111amd64-default-qat/463771/logs/py27-numba-0.37.0.log"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> <a href=\"https://github.com/numba/numba/blob/master/buildscripts/remove_unwanted_files.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/buildscripts/remove_unwanted_files.py</a>",
  "id": "5aa28432c3c5f8b90d50a325",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T12:55:14.443Z",
  "text": "@seibert https://github.com/numba/numba/blob/master/buildscripts/remove_unwanted_files.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/buildscripts/remove_unwanted_files.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "buildscripts contain lines like <a href=\"https://github.com/numba/numba/blob/master/buildscripts/condarecipe.local/build.sh#L3\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/buildscripts/condarecipe.local/build.sh#L3</a>",
  "id": "5aa28459f3f6d24c6855f7f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T12:55:53.654Z",
  "text": "buildscripts contain lines like https://github.com/numba/numba/blob/master/buildscripts/condarecipe.local/build.sh#L3",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/buildscripts/condarecipe.local/build.sh#L3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "We seem to have created a dependency on <code>six</code>",
  "id": "5aa2a676e4ff28713a120c99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:21:26.820Z",
  "text": "We seem to have created a dependency on `six`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "or have always had that and not listed it",
  "id": "5aa2a689e4ff28713a120d6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:21:45.224Z",
  "text": "or have always had that and not listed it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "also, VS2017 needs installing with the windows 8 SDK for the rc.exe binary to be found, else linking fails",
  "id": "5aa2a6abf3f6d24c6856ba1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:22:19.588Z",
  "text": "also, VS2017 needs installing with the windows 8 SDK for the rc.exe binary to be found, else linking fails",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, you\u2019re right about <code>import six</code>",
  "id": "5aa2a6b2c3c5f8b90d517229",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:22:26.147Z",
  "text": "oh, you\u2019re right about `import six`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "think we need a doc update or two",
  "id": "5aa2a6ba6f8b4b994609d3fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:22:34.219Z",
  "text": "think we need a doc update or two",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "without six, test discovery fails",
  "id": "5aa2a6c40a1614b712fee207",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:22:44.380Z",
  "text": "without six, test discovery fails",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "with no useful error message",
  "id": "5aa2a6d7888332ee3a1a6aff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:23:03.879Z",
  "text": "with no useful error message",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess requirements.txt also needs six adding",
  "id": "5aa2a9b4888332ee3a1a784e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:35:16.667Z",
  "text": "I guess requirements.txt also needs six adding",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "if we are taking <code>six</code> as a dependency, we can drop <code>numba.six</code>",
  "id": "5aa2a9cfc3c5f8b90d518483",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-09T15:35:43.403Z",
  "text": "if we are taking `six` as a dependency, we can drop `numba.six`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Where did six suddenly appear from ?",
  "id": "5aa2abbe8f1c77ef3aa01062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T15:43:58.391Z",
  "text": "Where did six suddenly appear from ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "And I also wonder how it works?! Is something else we rely on pulling it in?",
  "id": "5aa2abdce4d1c63604df0d44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T15:44:28.134Z",
  "text": "And I also wonder how it works?! Is something else we rely on pulling it in?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it looks like something I missed when I merged one of the CUDA PR",
  "id": "5aa2b187c3c5f8b90d51b38a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T16:08:39.223Z",
  "text": "it looks like something I missed when I merged one of the CUDA PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Do we really want this dep ? Would <code>numba.six</code>do instead ?",
  "id": "5aa2b261458cbde557159ab1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T16:12:17.600Z",
  "text": "Do we really want this dep ? Would `numba.six`do instead ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>numba.six</code> would do",
  "id": "5aa2b6bae4d1c63604df54c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T16:30:50.905Z",
  "text": "`numba.six` would do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>six</code> dep is post release",
  "id": "5aa2b6c4458cbde55715b7c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T16:31:00.189Z",
  "text": "the `six` dep is post release",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so we can fix it now and not add a <code>six</code> package dep",
  "id": "5aa2b71253c1dbb743c244e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T16:32:18.431Z",
  "text": "so we can fix it now and not add a `six` package dep",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, that sounds good",
  "id": "5aa2b7b435dd17022e3e4249",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-09T16:35:00.136Z",
  "text": "ok, that sounds good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "btw, confirmed that llvmlite + llvm 5 still builds on ARMv7 and passes tests",
  "id": "5aa69a5627c509a77453e180",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T15:18:46.006Z",
  "text": "btw, confirmed that llvmlite + llvm 5 still builds on ARMv7 and passes tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "we&#39;ll need a slightly different conda recipe that doesn&#39;t try to install the Anaconda compilers (since those don&#39;t exist for ARM)",
  "id": "5aa69a6b458cbde557262552",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T15:19:07.668Z",
  "text": "we'll need a slightly different conda recipe that doesn't try to install the Anaconda compilers (since those don't exist for ARM)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "fun fact: LLVM takes 2x longer to compile on RPi2 than I remember 3.5 taking.  Definitely going to make sure I bring the RPi3 home tonight.  :)",
  "id": "5aa69a9a8f1c77ef3ab081a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T15:19:54.209Z",
  "text": "fun fact: LLVM takes 2x longer to compile on RPi2 than I remember 3.5 taking.  Definitely going to make sure I bring the RPi3 home tonight.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":)",
  "id": "5aa69ab80a1614b7120f58e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T15:20:24.992Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Looks like the parfors PR is failing on x86 32-bit (test_signed_vs_unsigned_vec_asm)",
  "id": "5aa6c645458cbde557273f66",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:26:13.769Z",
  "text": "@stuartarchibald: Looks like the parfors PR is failing on x86 32-bit (test_signed_vs_unsigned_vec_asm)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "probably because can&#39;t generate AVX on 32-bit",
  "id": "5aa6c65fe4d1c63604f04b01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:26:39.653Z",
  "text": "probably because can't generate AVX on 32-bit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "seems like on 32bit its generating signed/unsigned code paths that differ on more than a <code>u</code> on an instruction",
  "id": "5aa6c80c6f8b4b99461b9bd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:33:48.410Z",
  "text": "seems like on 32bit its generating signed/unsigned code paths that differ on more than a `u` on an instruction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "probably signed/unsigned mismatch in instruction set, will fix tomorrow",
  "id": "5aa6c84535dd17022e4f644c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:34:45.558Z",
  "text": "probably signed/unsigned mismatch in instruction set, will fix tomorrow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> regarding <span data-link-type=\"commit\" data-commit-sha=\"8d0902d00dd97dac1ebda7984ff24f3df248c729\" data-commit-repo=\"numba/numba\" class=\"commit\">numba/numba@8d0902d</span>",
  "id": "5aa6ca4a0a1614b712107aee",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:43:22.349Z",
  "text": "@stuartarchibald regarding https://github.com/numba/numba/commit/8d0902d00dd97dac1ebda7984ff24f3df248c729",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "and your comment: it is true that copying takes place, hence, the comment that I removed, which claimed &quot;without copying&quot; was wrong in the first place",
  "id": "5aa6ca6c8f1c77ef3ab1aa72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:43:56.372Z",
  "text": "and your comment: it is true that copying takes place, hence, the comment that I removed, which claimed \"without copying\" was wrong in the first place",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "actually, it is correct that no copying happens, however, flags.owndata is set wrong",
  "id": "5aa6caace4ff28713a23df1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:45:00.735Z",
  "text": "actually, it is correct that no copying happens, however, flags.owndata is set wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "sorry if that was confusing :-) but I can explain again if that doesn&#39;t make sense",
  "id": "5aa6cb0cc3c5f8b90d6342a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:46:36.164Z",
  "text": "sorry if that was confusing :-) but I can explain again if that doesn't make sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> how do you want me to change the docs regarding transpose feature?",
  "id": "5aa6cb27c3c5f8b90d63434a",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T18:47:03.091Z",
  "text": "@stuartarchibald how do you want me to change the docs regarding transpose feature?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> (also, transpose never copies; always returns a view)",
  "id": "5aa6cee7458cbde557276cf4",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T19:03:03.561Z",
  "text": "@stuartarchibald (also, transpose never copies; always returns a view)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, is there some uncertainty here? Or is it simply that there is no copy, the flags.owndata is wrong, and the documentation is strange in the first place?",
  "id": "5aa6ee8527c509a77455cab6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:17:57.429Z",
  "text": "ok, is there some uncertainty here? Or is it simply that there is no copy, the flags.owndata is wrong, and the documentation is strange in the first place?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If that&#39;s the case then I think this is good to go.",
  "id": "5aa6ee990a1614b712114993",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:18:17.614Z",
  "text": "If that's the case then I think this is good to go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "yes, that&#39;s exactly the case!",
  "id": "5aa6eea427c509a77455cb1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:18:28.826Z",
  "text": "yes, that's exactly the case!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":) great, thanks.",
  "id": "5aa6eeb66f8b4b99461c7194",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:18:46.618Z",
  "text": ":) great, thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Whilst I&#39;m merging this, any chance you could open a ticket for what is wrong with the <code>flags.owndata</code> please?",
  "id": "5aa6ef1f458cbde557282662",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:20:31.240Z",
  "text": "Whilst I'm merging this, any chance you could open a ticket for what is wrong with the `flags.owndata` please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Did it four days ago  :-)  <span data-link-type=\"issue\" data-issue=\"2799\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2799</span>",
  "id": "5aa6ef4c6f8b4b99461c7476",
  "issues": [
   {
    "number": "2799",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:21:16.935Z",
  "text": "Did it four days ago  :-)  https://github.com/numba/numba/issues/2799",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh neat, thanks, I missed that (clearly)! ",
  "id": "5aa6ef9a458cbde5572828e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:22:34.650Z",
  "text": "oh neat, thanks, I missed that (clearly)! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Seems like the parfors PR also broke part of the CUDA pipeline.",
  "id": "5aa6f3ac27c509a77455e90b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:39:56.483Z",
  "text": "Seems like the parfors PR also broke part of the CUDA pipeline.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-12T21:41:25.706Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Doesn&#39;t seem like it is a really bad break, just an unexpected kwarg <code>noalias</code>",
  "id": "5aa6f3fda60157d62fdcafe9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-12T21:41:17.253Z",
  "text": "Doesn't seem like it is a really bad break, just an unexpected kwarg `noalias`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I just noticed that you can get a YAML remarks file as output from <code>opt</code>",
  "id": "5aa7190ea60157d62fdd5ae9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T00:19:26.948Z",
  "text": "I just noticed that you can get a YAML remarks file as output from `opt`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , does the remarks file contain loop-vectorize info?  Last time I tried, it did not have much.",
  "id": "5aa7d98427c509a7745a0a19",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:00:36.317Z",
  "text": "@stuartarchibald , does the remarks file contain loop-vectorize info?  Last time I tried, it did not have much.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, not sure, I just noticed when looking in llvm src for opt",
  "id": "5aa7db2a6f8b4b994620b4fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:07:38.857Z",
  "text": "@sklam, not sure, I just noticed when looking in llvm src for opt",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "as we are talking about llvm, I believe our llvmdev build is broken in regard to CFG DOT file generation",
  "id": "5aa7dcc5a60157d62fe0ee04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:14:29.931Z",
  "text": "as we are talking about llvm, I believe our llvmdev build is broken in regard to CFG DOT file generation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I\u2019ve opened an issue at <span data-link-type=\"issue\" data-issue=\"336\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#336</span>",
  "id": "5aa7dcd0f3f6d24c686d977e",
  "issues": [
   {
    "number": "336",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:14:40.339Z",
  "text": "I\u2019ve opened an issue at https://github.com/numba/llvmlite/issues/336",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The problem seems to start when we move to new conda-build and new buildscript.",
  "id": "5aa7dcef8f1c77ef3ab6c3e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:15:11.857Z",
  "text": "The problem seems to start when we move to new conda-build and new buildscript.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm",
  "id": "5aa7dd0c8f1c77ef3ab6c4ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:15:40.269Z",
  "text": "hmmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I wonder if there&#39;s actually &gt;1 problem",
  "id": "5aa7dd138f1c77ef3ab6c52c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:15:47.977Z",
  "text": "I wonder if there's actually >1 problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "as the segfaults have not been consistent",
  "id": "5aa7dd4a458cbde5572c9d68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:16:42.224Z",
  "text": "as the segfaults have not been consistent",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "what I am seeing is that LLVM\u2019s WriteCFG reading invalid memory location for <code>!prof</code>",
  "id": "5aa7dd7a6f8b4b994620c243",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:17:30.672Z",
  "text": "what I am seeing is that LLVM\u2019s WriteCFG reading invalid memory location for `!prof`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "sometimes, it stops writing prematurely",
  "id": "5aa7dd8de4d1c63604f56c8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:17:49.498Z",
  "text": "sometimes, it stops writing prematurely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "is that what the backtrace from the visitor pattern that&#39;s doing printing (can&#39;t remember name)",
  "id": "5aa7ddb4e4d1c63604f56d90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:18:28.387Z",
  "text": "is that what the backtrace from the visitor pattern that's doing printing (can't remember name)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "its something like <code>printOneChild()</code>",
  "id": "5aa7ddbbc3c5f8b90d689858",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:18:35.042Z",
  "text": "its something like `printOneChild()`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "is doing?",
  "id": "5aa7ddd753c1dbb743d8b288",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:19:03.742Z",
  "text": "is doing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "That\u2019s a <code>WriteGraph</code>",
  "id": "5aa7ddd8458cbde5572ca11c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:19:04.719Z",
  "text": "That\u2019s a `WriteGraph`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that\u2019s all we are calling",
  "id": "5aa7dde035dd17022e54a2e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:19:12.016Z",
  "text": "that\u2019s all we are calling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s inside <code>LLVMPY_WriteCFG</code>",
  "id": "5aa7ddec27c509a7745a22b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:19:24.259Z",
  "text": "it\u2019s inside `LLVMPY_WriteCFG`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, ok, so I think we&#39;re talking about the same thing",
  "id": "5aa7ddf2f3f6d24c686d9e15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:19:30.322Z",
  "text": "yeah, ok, so I think we're talking about the same thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Ok, i have a reproducer that just use <code>opt</code>",
  "id": "5aa7de066f8b4b994620c5c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:19:50.844Z",
  "text": "Ok, i have a reproducer that just use `opt`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "IIRC when I moved everything to CB3 the problems with that function got worse",
  "id": "5aa7de0f27c509a7745a235c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:19:59.001Z",
  "text": "IIRC when I moved everything to CB3 the problems with that function got worse",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "but I don&#39;t think it was brilliantly behaved before hand",
  "id": "5aa7de1ea60157d62fe0f7cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:20:14.753Z",
  "text": "but I don't think it was brilliantly behaved before hand",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "as far as the correctness of the emitted DOT file is concerned, the first llvm-5 build is fine",
  "id": "5aa7de380a1614b71215b5b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:20:40.479Z",
  "text": "as far as the correctness of the emitted DOT file is concerned, the first llvm-5 build is fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and after that the dot files are incorrect?",
  "id": "5aa7de79458cbde5572ca4e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:21:45.277Z",
  "text": "and after that the dot files are incorrect?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "right, malformed DOT file",
  "id": "5aa7de9935dd17022e54a6ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:22:17.869Z",
  "text": "right, malformed DOT file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-13T14:22:49.888Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "See <a href=\"https://gist.github.com/sklam/39bcc15007f00c1fd574a6cc1fa0a6e1#gistcomment-2379061\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this gist comments</a>",
  "id": "5aa7de9b35dd17022e54a6fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:22:19.664Z",
  "text": "See [this gist comments](https://gist.github.com/sklam/39bcc15007f00c1fd574a6cc1fa0a6e1#gistcomment-2379061)",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/sklam/39bcc15007f00c1fd574a6cc1fa0a6e1#gistcomment-2379061"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "(the gitter gist inline is so broken in the osx app)",
  "id": "5aa7dee7458cbde5572ca7fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:23:35.242Z",
  "text": "(the gitter gist inline is so broken in the osx app)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":) on IRC I just get a tonne of messages containing [edit] and nothing inlined, so it&#39;s a mixed blessing",
  "id": "5aa7df22e4ff28713a292d7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:24:34.586Z",
  "text": ":) on IRC I just get a tonne of messages containing [edit] and nothing inlined, so it's a mixed blessing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "right, so I wonder what I managed to do in building CB3 LLVM that caused that problem",
  "id": "5aa7df4127c509a7745a2af2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:25:05.012Z",
  "text": "right, so I wonder what I managed to do in building CB3 LLVM that caused that problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I am now playing with the cmake config to see if I can \u201cfix\u201d it",
  "id": "5aa7df806f8b4b994620ce5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:26:08.036Z",
  "text": "I am now playing with the cmake config to see if I can \u201cfix\u201d it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I would also hope that this an LLVM bug, in that config options shouldn&#39;t really wreck functionality",
  "id": "5aa7df8d0a1614b71215bec4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:26:21.738Z",
  "text": "I would also hope that this an LLVM bug, in that config options shouldn't really wreck functionality",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the osx build is an adventure in hoop jumping",
  "id": "5aa7dfa053c1dbb743d8bbff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:26:40.379Z",
  "text": "the osx build is an adventure in hoop jumping",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "does the manylinux1 build have the problem?",
  "id": "5aa7dfe66f8b4b994620d058",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:27:50.747Z",
  "text": "does the manylinux1 build have the problem?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I have not tested other platforms",
  "id": "5aa7dff36f8b4b994620d09b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:28:03.619Z",
  "text": "I have not tested other platforms",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah, was just thinking it might be easier to debug on linux because there&#39;s less toolchain to boot strap, i.e. the compilers don&#39;t conflict and require isolation",
  "id": "5aa7e03553c1dbb743d8bef6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:29:09.506Z",
  "text": "ah, was just thinking it might be easier to debug on linux because there's less toolchain to boot strap, i.e. the compilers don't conflict and require isolation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I was wondering how gitter handled edits on the IRC bridge...",
  "id": "5aa7e384e4d1c63604f5913e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:43:16.472Z",
  "text": "I was wondering how gitter handled edits on the IRC bridge...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "poorly :D",
  "id": "5aa7e41e53c1dbb743d8d493",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:45:50.302Z",
  "text": "poorly :D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and noisily!",
  "id": "5aa7e42ae4d1c63604f5968c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:46:02.057Z",
  "text": "and noisily!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "however, it&#39;s a small price",
  "id": "5aa7e438f3f6d24c686dc360",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:46:16.216Z",
  "text": "however, it's a small price",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "one less javascript interpreter running on your computer :)",
  "id": "5aa7e451f3f6d24c686dc41e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:46:41.075Z",
  "text": "one less javascript interpreter running on your computer :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p>jumping back to opt remarks:  </p><p>Check this out: <a href=\"https://llvm.org/devmtg/2016-11/Slides/Nemet-Compiler-assistedPerformanceAnalysis.pdf\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://llvm.org/devmtg/2016-11/Slides/Nemet-Compiler-assistedPerformanceAnalysis.pdf</a></p>",
  "id": "5aa7e486458cbde5572cccb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:47:34.841Z",
  "text": "jumping back to opt remarks:  \n\nCheck this out: https://llvm.org/devmtg/2016-11/Slides/Nemet-Compiler-assistedPerformanceAnalysis.pdf\n\n",
  "unread": false,
  "urls": [
   {
    "url": "https://llvm.org/devmtg/2016-11/Slides/Nemet-Compiler-assistedPerformanceAnalysis.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "There\u2019s a tool (<code>llvm-opt-report</code>) in llvm to make pretty html pages of optimization like our annotation tools.",
  "id": "5aa7e48827c509a7745a4e27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:47:36.974Z",
  "text": "There\u2019s a tool (`llvm-opt-report`) in llvm to make pretty html pages of optimization like our annotation tools.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s cool :)",
  "id": "5aa7e5366f8b4b994620f1a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:50:30.117Z",
  "text": "that's cool :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I wish there was an easier way to interleave the vec report with the python code it came from, but fear the map is way too convoluted",
  "id": "5aa7e55535dd17022e54ca42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T14:51:01.618Z",
  "text": "I wish there was an easier way to interleave the vec report with the python code it came from, but fear the map is way too convoluted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I have success making llvmlite emit the opt remarks",
  "id": "5aa803b98f1c77ef3ab7c221",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T17:00:41.405Z",
  "text": "I have success making llvmlite emit the opt remarks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<pre><code>$ llvm-opt-report llvmlite_record.yaml\n&lt; chk_remarks.py\n <span class=\"number\">1</span>        | <span class=\"keyword\">from</span> numba <span class=\"keyword\">import</span> njit\n <span class=\"number\">2</span>        | <span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n <span class=\"number\">3</span>        |\n <span class=\"number\">4</span>        |\n <span class=\"number\">5</span>        | <span class=\"decorator\">@njit(debug=True, fastmath=True)</span>\n <span class=\"number\">6</span>        | <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(arr)</span>:</span>\n <span class=\"number\">7</span>        |     c = <span class=\"number\">0.</span>\n <span class=\"number\">8</span> U4V4,<span class=\"number\">4</span> |     <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(arr.size):\n <span class=\"number\">9</span>        |         c += arr[i]\n<span class=\"number\">10</span>        |     <span class=\"keyword\">return</span> c\n<span class=\"number\">11</span>        |\n<span class=\"number\">12</span>        |\n<span class=\"number\">13</span>        | foo(np.random.random(<span class=\"number\">100</span>))</code></pre>",
  "id": "5aa804e353c1dbb743d9a728",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T17:05:39.747Z",
  "text": "```\n$ llvm-opt-report llvmlite_record.yaml\n< chk_remarks.py\n 1        | from numba import njit\n 2        | import numpy as np\n 3        |\n 4        |\n 5        | @njit(debug=True, fastmath=True)\n 6        | def foo(arr):\n 7        |     c = 0.\n 8 U4V4,4 |     for i in range(arr.size):\n 9        |         c += arr[i]\n10        |     return c\n11        |\n12        |\n13        | foo(np.random.random(100))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I thk <code>U4V4</code> means unroll 4 vectorize-width 4",
  "id": "5aa805118f1c77ef3ab7c9b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T17:06:25.022Z",
  "text": "I thk `U4V4` means unroll 4 vectorize-width 4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "whoa, that looks great!",
  "id": "5aa807f335dd17022e55b285",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T17:18:43.576Z",
  "text": "whoa, that looks great!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and way more convenient than grepping around for VADDPD in the generated code",
  "id": "5aa8083c458cbde5572db8de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T17:19:56.008Z",
  "text": "and way more convenient than grepping around for VADDPD in the generated code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "heh, neat",
  "id": "5aa80baf35dd17022e55c8ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T17:34:39.133Z",
  "text": "heh, neat",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;d be interested to see how well the vector reports line up with decent instruction sequences being generated",
  "id": "5aa80c9c53c1dbb743d9d4bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T17:38:36.887Z",
  "text": "I'd be interested to see how well the vector reports line up with decent instruction sequences being generated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<a href=\"https://files.gitter.im/numba/numba-dev/eRk6/Screen-Shot-2018-03-13-at-1.14.43-PM.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/numba/numba-dev/eRk6/thumb/Screen-Shot-2018-03-13-at-1.14.43-PM.png\" alt=\"Screen Shot 2018-03-13 at 1.14.43 PM.png\" rel=\"nofollow\"></a>",
  "id": "5aa81533a60157d62fe24fb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T18:15:15.737Z",
  "text": "[![Screen Shot 2018-03-13 at 1.14.43 PM.png](https://files.gitter.im/numba/numba-dev/eRk6/thumb/Screen-Shot-2018-03-13-at-1.14.43-PM.png)](https://files.gitter.im/numba/numba-dev/eRk6/Screen-Shot-2018-03-13-at-1.14.43-PM.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/numba/numba-dev/eRk6/thumb/Screen-Shot-2018-03-13-at-1.14.43-PM.png"
   },
   {
    "url": "https://files.gitter.im/numba/numba-dev/eRk6/Screen-Shot-2018-03-13-at-1.14.43-PM.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The output of the opt-viewer inside llvm",
  "id": "5aa81561e4d1c63604f6d227",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T18:16:01.616Z",
  "text": "The output of the opt-viewer inside llvm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It\u2019s a html file like our annotation tool",
  "id": "5aa8156f35dd17022e560ace",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T18:16:15.438Z",
  "text": "It\u2019s a html file like our annotation tool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The opt-viewer package is installed by llvmdev as <code>$CONDA_PREFIX/share/opt-viewer/opt-viewer.py</code>",
  "id": "5aa815c4c3c5f8b90d69fa47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T18:17:40.934Z",
  "text": "The opt-viewer package is installed by llvmdev as `$CONDA_PREFIX/share/opt-viewer/opt-viewer.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "if we can repackage it and adapt it for py3, we can use it in the annotation tool",
  "id": "5aa815df53c1dbb743da0e18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T18:18:07.501Z",
  "text": "if we can repackage it and adapt it for py3, we can use it in the annotation tool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s really good",
  "id": "5aa81abe8f1c77ef3ab84cf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-13T18:38:54.289Z",
  "text": "that's really good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Could I get a review for llvmlite <span data-link-type=\"issue\" data-issue=\"338\" class=\"issue\">#338</span> please?",
  "id": "5aa971cb6f8b4b994628f3ec",
  "issues": [
   {
    "number": "338"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-14T19:02:35.296Z",
  "text": "Could I get a review for llvmlite #338 please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> <span data-link-type=\"issue\" data-issue=\"2822\" class=\"issue\">#2822</span> is failing, think you need to push up the mergesort.py",
  "id": "5aaa95a4bb1018b37ae9c51a",
  "issues": [
   {
    "number": "2822"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T15:47:48.101Z",
  "text": "@sklam #2822 is failing, think you need to push up the mergesort.py",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "heh, oops.  hence it is still WIP",
  "id": "5aaa96046f8b4b99462e3b0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T15:49:24.948Z",
  "text": "heh, oops.  hence it is still WIP",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":)",
  "id": "5aaa9613f3f6d24c687af040",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T15:49:39.791Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I haven\u2019t written the tests yet",
  "id": "5aaa961435dd17022e6236de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T15:49:40.059Z",
  "text": "I haven\u2019t written the tests yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "In between other things I&#39;ve been adding bits to my snazzyerrors.py,  I just flipped the <code>unittest.assertRaises()</code> ctx manager to do nothing so I can see what impact it has on the deliberate errors generated in the test suite, here&#39;s an example:<pre><code>numba.errors.TypingError: Failed at nopython (nopython frontend)\nInvalid usage of Function(&lt;<span class=\"keyword\">function</span> farray at <span class=\"number\">0</span>x7fd1f3c6e0d0&gt;) with parameters (<span class=\"built_in\">float</span>64*, (int64 x <span class=\"number\">2</span>), dtype=class(<span class=\"built_in\">float</span>32))\n * parameterized\nIn definition <span class=\"number\">0</span>:\n    TypeError: farray(): mismatching dtype <span class=\"string\">'float32'</span> <span class=\"keyword\">for</span> pointer <span class=\"built_in\">type</span> <span class=\"string\">'float64*'</span>\n    raised from &lt;path&gt;/numba/typing/npydecl.py:<span class=\"number\">1249</span>\nFor more information about typing errors and how to debug them visit:\nhttp://someaddress\n\n[<span class=\"number\">1</span>] During: resolving callee <span class=\"built_in\">type</span>: Function(&lt;<span class=\"keyword\">function</span> farray at <span class=\"number\">0</span>x7fd1f3c6e0d0&gt;)\n[<span class=\"number\">2</span>] During: typing of call at &lt;path&gt;/numba/tests/<span class=\"built_in\">test</span>_cfunc.py (<span class=\"number\">73</span>)\nFile <span class=\"string\">\"numba/tests/test_cfunc.py\"</span>, line <span class=\"number\">73</span>:\n    def cfarray_usecase(<span class=\"keyword\">in</span>_ptr, out_ptr, m, n):\n        &lt;<span class=\"built_in\">source</span> elided&gt;\n        <span class=\"comment\"># Tuple shape</span>\n        <span class=\"keyword\">in</span>_ = func(<span class=\"keyword\">in</span>_ptr, (m, n), dtype=np.float32)\n        ^</code></pre>",
  "id": "5aaaacb1bb1018b37aea4efd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T17:26:09.829Z",
  "text": "In between other things I've been adding bits to my snazzyerrors.py,  I just flipped the `unittest.assertRaises()` ctx manager to do nothing so I can see what impact it has on the deliberate errors generated in the test suite, here's an example:\n```\nnumba.errors.TypingError: Failed at nopython (nopython frontend)\nInvalid usage of Function(<function farray at 0x7fd1f3c6e0d0>) with parameters (float64*, (int64 x 2), dtype=class(float32))\n * parameterized\nIn definition 0:\n    TypeError: farray(): mismatching dtype 'float32' for pointer type 'float64*'\n    raised from <path>/numba/typing/npydecl.py:1249\nFor more information about typing errors and how to debug them visit:\nhttp://someaddress\n\n[1] During: resolving callee type: Function(<function farray at 0x7fd1f3c6e0d0>)\n[2] During: typing of call at <path>/numba/tests/test_cfunc.py (73)\nFile \"numba/tests/test_cfunc.py\", line 73:\n    def cfarray_usecase(in_ptr, out_ptr, m, n):\n        <source elided>\n        # Tuple shape\n        in_ = func(in_ptr, (m, n), dtype=np.float32)\n        ^\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh nice",
  "id": "5aaac8a835dd17022e635e09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T19:25:28.463Z",
  "text": "oh nice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<pre><code><span class=\"constant\">Ranges</span> are only <span class=\"keyword\">for</span> loads!\n  %.<span class=\"number\">29</span>.i = tail call i64 <span class=\"variable\">@llvm</span>.ctpop.i64(i64 %.<span class=\"number\">8</span>) <span class=\"comment\">#2, !range !8</span>\n<span class=\"constant\">Broken</span> <span class=\"class\"><span class=\"keyword\">module</span> <span class=\"title\">found</span>, <span class=\"title\">compilation</span> <span class=\"title\">terminated!</span></span></code></pre>Any idea why I&#39;m getting that? <a href=\"https://llvm.org/docs/LangRef.html#range-metadata\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://llvm.org/docs/LangRef.html#range-metadata</a> suggests it&#39;s valid on a call too",
  "id": "5aaadb326f8b4b99462fcb4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T20:44:34.516Z",
  "text": "```\nRanges are only for loads!\n  %.29.i = tail call i64 @llvm.ctpop.i64(i64 %.8) #2, !range !8\nBroken module found, compilation terminated!\n```\nAny idea why I'm getting that? https://llvm.org/docs/LangRef.html#range-metadata suggests it's valid on a call too\n",
  "unread": false,
  "urls": [
   {
    "url": "https://llvm.org/docs/LangRef.html#range-metadata"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "cuda toolkit 8",
  "id": "5aaae23abb1018b37aeb7cc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T21:14:34.604Z",
  "text": "cuda toolkit 8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "...also fails with toolkit 9.1",
  "id": "5aaae442458cbde5573c1bf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T21:23:14.186Z",
  "text": "...also fails with toolkit 9.1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "how do i work out what LLVM version it&#39;s using?",
  "id": "5aaae4fa35dd17022e63eb73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-15T21:26:18.213Z",
  "text": "how do i work out what LLVM version it's using?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> we&#39;re talking nvvm here? <a href=\"http://docs.nvidia.com/cuda/nvvm-ir-spec/index.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.nvidia.com/cuda/nvvm-ir-spec/index.html</a>",
  "id": "5aaae64b27c509a7746934ea",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:31:55.919Z",
  "text": "@njwhite we're talking nvvm here? http://docs.nvidia.com/cuda/nvvm-ir-spec/index.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.nvidia.com/cuda/nvvm-ir-spec/index.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"http://releases.llvm.org/3.4/docs/LangRef.html#range-metadata\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://releases.llvm.org/3.4/docs/LangRef.html#range-metadata</a>",
  "id": "5aaae68f458cbde5573c2772",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:33:03.643Z",
  "text": "http://releases.llvm.org/3.4/docs/LangRef.html#range-metadata",
  "unread": false,
  "urls": [
   {
    "url": "http://releases.llvm.org/3.4/docs/LangRef.html#range-metadata"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "loads only",
  "id": "5aaae692a60157d62ff055af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:33:06.101Z",
  "text": "loads only",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "does that help?",
  "id": "5aaae6a8c3c5f8b90d78265b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:33:28.033Z",
  "text": "does that help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "there&#39;s a function in the impl that patches up the generated LLVM IR to nvvm numba/cuda/cudadrv/nvvm.py::llvm39_to_34_ir",
  "id": "5aaae709bb1018b37aeb944d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:35:05.593Z",
  "text": "there's a function in the impl that patches up the generated LLVM IR to nvvm numba/cuda/cudadrv/nvvm.py::llvm39_to_34_ir",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> ",
  "id": "5aaae8ca8f1c77ef3ac5f931",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:42:34.314Z",
  "text": "@stuartarchibald ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Ah thanks, that was what i was looking for. I\u2019m surprised there\u2019s not a magic flag to LLVM that makes it output an older version of the bitcode",
  "id": "5aaae8ffc3c5f8b90d783018",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:43:27.932Z",
  "text": "Ah thanks, that was what i was looking for. I\u2019m surprised there\u2019s not a magic flag to LLVM that makes it output an older version of the bitcode",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "I\u2019ll have to add more regex ...glue",
  "id": "5aaae91527c509a7746941d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:43:49.309Z",
  "text": "I\u2019ll have to add more regex ...glue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "no such luck I&#39;m afraid... regex++",
  "id": "5aaae9e5bb1018b37aeba067",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-15T21:47:17.927Z",
  "text": "no such luck I'm afraid... regex++",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> <span data-link-type=\"issue\" data-issue=\"2824\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2824</span> :)",
  "id": "5aab0c32a60157d62ff0fdeb",
  "issues": [
   {
    "number": "2824",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-16T00:13:38.279Z",
  "text": "@stuartarchibald https://github.com/numba/numba/pull/2824 :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "the Numba unit test suite seems to be very effective at overheating the Raspberry Pi 3 to its thermal limit",
  "id": "5aab333ce4ff28713a39f2bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-16T03:00:12.292Z",
  "text": "the Numba unit test suite seems to be very effective at overheating the Raspberry Pi 3 to its thermal limit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(fortunately, it just throttles down the CPU freq rather than crash or do something worse)",
  "id": "5aab33596f8b4b9946312d29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-16T03:00:41.755Z",
  "text": "(fortunately, it just throttles down the CPU freq rather than crash or do something worse)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Is that on a RPi3 B+ ?",
  "id": "5aab89b3f3f6d24c687f3355",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-16T09:09:07.299Z",
  "text": "Is that on a RPi3 B+ ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Looks like llvm 6 has fixed the ELF relocation issue <a href=\"https://github.com/llvm-mirror/llvm/blob/release_60/lib/MC/MCObjectFileInfo.cpp#L292-L294\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/llvm-mirror/llvm/blob/release_60/lib/MC/MCObjectFileInfo.cpp#L292-L294</a>  so we can drop <a href=\"https://github.com/numba/llvmlite/blob/master/conda-recipes/llvm-elf-relocation.patch\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/llvmlite/blob/master/conda-recipes/llvm-elf-relocation.patch</a>",
  "id": "5aab9b5b8f1c77ef3ac8dc40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-16T10:24:27.478Z",
  "text": "Looks like llvm 6 has fixed the ELF relocation issue https://github.com/llvm-mirror/llvm/blob/release_60/lib/MC/MCObjectFileInfo.cpp#L292-L294  so we can drop https://github.com/numba/llvmlite/blob/master/conda-recipes/llvm-elf-relocation.patch",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/llvm-mirror/llvm/blob/release_60/lib/MC/MCObjectFileInfo.cpp#L292-L294"
   },
   {
    "url": "https://github.com/numba/llvmlite/blob/master/conda-recipes/llvm-elf-relocation.patch"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, got a llvm 6.0 conda recipe, builds fine. llvmlite has issues of the C++ kind, as predicted.",
  "id": "5aabab52e4d1c6360407dd03",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2018-03-16T11:32:34.744Z",
  "text": "@sklam, got a llvm 6.0 conda recipe, builds fine. llvmlite has issues of the C++ kind, as predicted.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "This <a href=\"https://reviews.llvm.org/D44140\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reviews.llvm.org/D44140</a> post 6.0 release is needed",
  "id": "5aabc03927c509a7746ce50a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-16T13:01:45.623Z",
  "text": "This https://reviews.llvm.org/D44140 post 6.0 release is needed",
  "unread": false,
  "urls": [
   {
    "url": "https://reviews.llvm.org/D44140"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Just the 3B.  I don&#39;t think anyone has the 3B+ yet",
  "id": "5aabc7e1e4ff28713a3caff2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-16T13:34:25.263Z",
  "text": "Just the 3B.  I don't think anyone has the 3B+ yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "TBH, I just want the RPi4 to have 4GB of memory",
  "id": "5aabc80535dd17022e67d820",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-03-16T13:35:01.734Z",
  "text": "TBH, I just want the RPi4 to have 4GB of memory",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "18 failing tests + 2 errors on ARM: <a href=\"https://gist.github.com/seibert/92c8001bc506928f47f0866d95e2a64c\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/seibert/92c8001bc506928f47f0866d95e2a64c</a>",
  "id": "5aabce306f8b4b99463403d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:01:20.439Z",
  "text": "18 failing tests + 2 errors on ARM: https://gist.github.com/seibert/92c8001bc506928f47f0866d95e2a64c",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/seibert/92c8001bc506928f47f0866d95e2a64c"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah, so a load of those will be MKL vs OpenBLAS",
  "id": "5aabce5f0a1614b71228ee6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:02:07.219Z",
  "text": "ah, so a load of those will be MKL vs OpenBLAS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the eig fail looks like its just conj() which is likely fine",
  "id": "5aabce80e4ff28713a3cd4ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:02:40.104Z",
  "text": "the eig fail looks like its just conj() which is likely fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "cond() is of concern",
  "id": "5aabce880a1614b71228f062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:02:48.323Z",
  "text": "cond() is of concern",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "matrix power looks like F/C problem ",
  "id": "5aabce91a60157d62ff46488",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:02:57.960Z",
  "text": "matrix power looks like F/C problem ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I&#39;m puzzled by a few of these",
  "id": "5aabce95458cbde5574031cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:03:01.638Z",
  "text": "yeah, I'm puzzled by a few of these",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "rank is likely FP issue",
  "id": "5aabce9b27c509a7746d3982",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:03:07.141Z",
  "text": "rank is likely FP issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "actually, rank, pinv and svd all fail",
  "id": "5aabcec88f1c77ef3ac9f46d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:03:52.511Z",
  "text": "actually, rank, pinv and svd all fail",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "the last two are just cases where we need to skip vectorization tests that assume x86",
  "id": "5aabcece0a1614b71228f195",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:03:58.006Z",
  "text": "the last two are just cases where we need to skip vectorization tests that assume x86",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which suggests svd has something wrong with it",
  "id": "5aabced1bb1018b37aefa632",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:04:01.581Z",
  "text": "which suggests svd has something wrong with it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes, agree",
  "id": "5aabcee4e4d1c6360408a5c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:04:20.041Z",
  "text": "yes, agree",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "what does this mean?  <code>ValueError: output array is not acceptable (must have the right datatype, number of dimensions, and be a C-Array)</code>",
  "id": "5aabcf01458cbde557403411",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:04:49.827Z",
  "text": "what does this mean?  `ValueError: output array is not acceptable (must have the right datatype, number of dimensions, and be a C-Array)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "actually, I guess I know what means :)",
  "id": "5aabcf4b35dd17022e68033d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:06:03.103Z",
  "text": "actually, I guess I know what means :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "but am puzzled",
  "id": "5aabcf4f458cbde557403655",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:06:07.578Z",
  "text": "but am puzzled",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "is that even coming from numba ?",
  "id": "5aabcf7cbb1018b37aefaadf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:06:52.797Z",
  "text": "is that even coming from numba ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Seems like its a NumPy message",
  "id": "5aabcf848f1c77ef3ac9f802",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:07:00.229Z",
  "text": "Seems like its a NumPy message",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh wait, you are right",
  "id": "5aabcf8e6f8b4b9946340d98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:07:10.117Z",
  "text": "oh wait, you are right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "didn&#39;t look back far enough",
  "id": "5aabcf9435dd17022e680460",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:07:16.519Z",
  "text": "didn't look back far enough",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Do the NumPy tests all pass ?",
  "id": "5aabcfb1f3f6d24c68809b94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:07:45.837Z",
  "text": "Do the NumPy tests all pass ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "no idea.  I am using Jonathan&#39;s numpy 1.14 build from Berryconda.  Not sure if he runs the tests during package build.",
  "id": "5aabcfcdc3c5f8b90d7c2fec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:08:13.519Z",
  "text": "no idea.  I am using Jonathan's numpy 1.14 build from Berryconda.  Not sure if he runs the tests during package build.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I should try",
  "id": "5aabcfd1c3c5f8b90d7c2ff5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:08:17.324Z",
  "text": "I should try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if they also fail then that may suggest we have a problem to fix before fixing Numba",
  "id": "5aabcfe30a1614b71228fa6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:08:35.029Z",
  "text": "if they also fail then that may suggest we have a problem to fix before fixing Numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Is BLAS/LAPACK tested too",
  "id": "5aabcfef0a1614b71228faa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:08:47.863Z",
  "text": "Is BLAS/LAPACK tested too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "numpy passes its full test suite",
  "id": "5aabd616bb1018b37aefd7c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:35:02.619Z",
  "text": "numpy passes its full test suite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-16T14:40:58.405Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> </p><blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, got a llvm 6.0 conda recipe, builds fine. llvmlite has issues of the C++ kind, as predicted.</p></blockquote>\n<p>can you push it?  i want to test the malform DOT with a full recipe</p>",
  "id": "5aabd7636f8b4b99463438d8",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:40:35.765Z",
  "text": "@stuartarchibald \n> @sklam, got a llvm 6.0 conda recipe, builds fine. llvmlite has issues of the C++ kind, as predicted.\n\ncan you push it?  i want to test the malform DOT with a full recipe",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, seems like you can get a RPi3B+ in the UK from element14/farnell who suggest US customers use newark.com, which doesn&#39;t seem to work very well",
  "id": "5aabd78435dd17022e682d95",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:41:08.093Z",
  "text": "@seibert, seems like you can get a RPi3B+ in the UK from element14/farnell who suggest US customers use newark.com, which doesn't seem to work very well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, yeah",
  "id": "5aabd79b8f1c77ef3aca273d",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:41:31.490Z",
  "text": "@sklam, yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "its all hacks at present",
  "id": "5aabd7b135dd17022e682e85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:41:53.492Z",
  "text": "its all hacks at present",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "just trying to get <em>anything</em> to work :)",
  "id": "5aabd7bfc3c5f8b90d7c62b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:42:07.401Z",
  "text": "just trying to get *anything* to work :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that&#39;s pretty much <em>the process</em>",
  "id": "5aabd7d46f8b4b9946343ab5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:42:28.311Z",
  "text": "that's pretty much *the process*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, 4-&gt;5 wasn&#39;t so bad if I recall",
  "id": "5aabd7e58f1c77ef3aca28ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:42:45.356Z",
  "text": "yeah, 4->5 wasn't so bad if I recall",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it was unexpectedly &quot;stable&quot;",
  "id": "5aabd7f78f1c77ef3aca29ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:43:03.185Z",
  "text": "it was unexpectedly \"stable\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> <a href=\"https://github.com/stuartarchibald/llvmlite/tree/wip/llvm6\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/stuartarchibald/llvmlite/tree/wip/llvm6</a>",
  "id": "5aabd86fc3c5f8b90d7c6754",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:45:03.636Z",
  "text": "@sklam https://github.com/stuartarchibald/llvmlite/tree/wip/llvm6",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/stuartarchibald/llvmlite/tree/wip/llvm6"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ol>\n<li>LLVM 6 source updated in conda build only, I&#39;ve verified the signature chain</li>\n</ol>\n",
  "id": "5aabd8ac6f8b4b9946344069",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:46:04.775Z",
  "text": "1. LLVM 6 source updated in conda build only, I've verified the signature chain",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ol>\n<li>ELF relocation issue for which we had a patch seems to be fixed, so that patch is skipped</li>\n</ol>\n",
  "id": "5aabd8d28f1c77ef3aca3072",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:46:42.887Z",
  "text": "2. ELF relocation issue for which we had a patch seems to be fixed, so that patch is skipped",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ol>\n<li>Unsure if we need the diagnostic handler switch out any more, it doesn&#39;t compile at present so I just commented it out as it&#39;s presence/lack of presence is largely harmless in terms of execution</li>\n</ol>\n",
  "id": "5aabd92027c509a7746d7411",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:48:00.356Z",
  "text": "3. Unsure if we need the diagnostic handler switch out any more, it doesn't compile at present so I just commented it out as it's presence/lack of presence is largely harmless in terms of execution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ol>\n<li>there&#39;s no default or jitdefault codemodel anymore, so I&#39;ve just set it to &quot;large&quot; if not specified</li>\n</ol>\n",
  "id": "5aabd948f3f6d24c6880d202",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:48:40.923Z",
  "text": "4. there's no default or jitdefault codemodel anymore, so I've just set it to \"large\" if not specified",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Ah, the lack of &quot;jitdefault&quot; and ELF relocation may be related.  And, it&#39;s good that is finally fixed",
  "id": "5aabd9a2e4ff28713a3d16e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:50:10.107Z",
  "text": "Ah, the lack of \"jitdefault\" and ELF relocation may be related.  And, it's good that is finally fixed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "&quot;diagnostic handler switch out&quot; is gone???",
  "id": "5aabd9bf8f1c77ef3aca365a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:50:39.275Z",
  "text": "\"diagnostic handler switch out\" is gone???",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ol>\n<li>I&#39;m currently getting OSError: &lt;path&gt;/llvmlite/llvmlite/binding/libllvmlite.so: undefined symbol: LLVMInitializeInstCombine, which I thought might be due to <a href=\"https://reviews.llvm.org/D44140\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reviews.llvm.org/D44140</a> but even with that applied its still missing</li>\n</ol>\n",
  "id": "5aabd9c1e4ff28713a3d1807",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:50:41.754Z",
  "text": "5. I'm currently getting OSError: <path>/llvmlite/llvmlite/binding/libllvmlite.so: undefined symbol: LLVMInitializeInstCombine, which I thought might be due to https://reviews.llvm.org/D44140 but even with that applied its still missing",
  "unread": false,
  "urls": [
   {
    "url": "https://reviews.llvm.org/D44140"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well, it has gone for now",
  "id": "5aabda0527c509a7746d7858",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:51:49.023Z",
  "text": "well, it has gone for now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I was messing about with it and trying to get it to compile, and looking for an example use of it, went looking for why its there, and i&#39;m not 100% convinced its still a problem ?",
  "id": "5aabda4e8f1c77ef3aca38ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-16T14:53:02.841Z",
  "text": "I was messing about with it and trying to get it to compile, and looking for an example use of it, went looking for why its there, and i'm not 100% convinced its still a problem ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, looks like I need to get a newer RPi and go debug linalg then ?!",
  "id": "5aabdac3a60157d62ff4abba",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T14:54:59.455Z",
  "text": "@seibert, looks like I need to get a newer RPi and go debug linalg then ?!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, &quot;it doesn&#39;t compile&quot;.  Likely due to the new signature with &quot;std::unique_ptr&lt; DiagnosticHandler &gt; &amp;&amp;&quot;.  What does that mean again?  I don&#39;t kn C++ anymore.",
  "id": "5aabdadee4ff28713a3d1f12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T14:55:26.104Z",
  "text": "oh, \"it doesn't compile\".  Likely due to the new signature with \"std::unique_ptr< DiagnosticHandler > &&\".  What does that mean again?  I don't kn C++ anymore.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "rvalue ref to uniq ptr of DiagnosticHandler ?",
  "id": "5aabdb356f8b4b9946344de7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T14:56:53.133Z",
  "text": "rvalue ref to uniq ptr of DiagnosticHandler ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so I think a llvm::make_unique() or similar is needed there",
  "id": "5aabdb6fa60157d62ff4b126",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T14:57:51.767Z",
  "text": "so I think a llvm::make_unique() or similar is needed there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, I cleverly forgot to add the patch that exports the missing symbol to the conda build script for llvmdev so you&#39;ll need to pull to get it",
  "id": "5aabfe308f1c77ef3acb0efa",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T17:26:08.702Z",
  "text": "@sklam, I cleverly forgot to add the patch that exports the missing symbol to the conda build script for llvmdev so you'll need to pull to get it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, 1 test fail, <code>test_link_in_error (llvmlite.tests.test_binding.TestModuleRef) ... error: Linking globals named &#39;sum&#39;: symbol multiply defined!</code>",
  "id": "5aac03b427c509a7746e7c3f",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T17:49:40.865Z",
  "text": "@sklam, 1 test fail, `test_link_in_error (llvmlite.tests.test_binding.TestModuleRef) ... error: Linking globals named 'sum': symbol multiply defined!`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Installing numba on top, <code>./runtests.py -m</code> -v` had a segfault, just rerunning.",
  "id": "5aac061af3f6d24c6881d45b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T17:59:54.486Z",
  "text": "Installing numba on top, `./runtests.py -m` -v` had a segfault, just rerunning.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "1 fail without <code>-m</code>, fastmath perhaps isn&#39;t working quite right/the same",
  "id": "5aac1ba4a60157d62ff6300a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T19:31:48.014Z",
  "text": "1 fail without `-m`, fastmath perhaps isn't working quite right/the same",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "could i get a review for <span data-link-type=\"issue\" data-issue=\"2824\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2824</span> ?",
  "id": "5aac1ec1458cbde5574201e0",
  "issues": [
   {
    "number": "2824",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-16T19:45:05.423Z",
  "text": "could i get a review for https://github.com/numba/numba/pull/2824 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, only test on llvmlite that&#39;s failing now is <code>test_disable_unit_at_a_time</code>",
  "id": "5aafe98bfa066c532549ecfd",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:47:07.459Z",
  "text": "@sklam, only test on llvmlite that's failing now is `test_disable_unit_at_a_time`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which is because the <code>DisableUnitAtATime</code> switch has been removed",
  "id": "5aafe9a0c3c5f8b90d8d40cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:47:28.379Z",
  "text": "which is because the `DisableUnitAtATime` switch has been removed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://llvm.org/doxygen/PassManagerBuilder_8cpp_source.html#l00965\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://llvm.org/doxygen/PassManagerBuilder_8cpp_source.html#l00965</a>",
  "id": "5aafe9af35dd17022e78d39d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:47:43.396Z",
  "text": "https://llvm.org/doxygen/PassManagerBuilder_8cpp_source.html#l00965",
  "unread": false,
  "urls": [
   {
    "url": "https://llvm.org/doxygen/PassManagerBuilder_8cpp_source.html#l00965"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so flipping it has no effect",
  "id": "5aafe9bbe4d1c6360419939e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:47:55.687Z",
  "text": "so flipping it has no effect",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://github.com/llvm-mirror/llvm/commit/6df72b9a11bd6b73192ac716978da8920e80a8c0#diff-20a4acbbac5298b3557115a523e986dc\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/llvm-mirror/llvm/commit/6df72b9a11bd6b73192ac716978da8920e80a8c0#diff-20a4acbbac5298b3557115a523e986dc</a>",
  "id": "5aafea5c5f188ccc15d2c984",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:50:36.125Z",
  "text": "https://github.com/llvm-mirror/llvm/commit/6df72b9a11bd6b73192ac716978da8920e80a8c0#diff-20a4acbbac5298b3557115a523e986dc",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/llvm-mirror/llvm/commit/6df72b9a11bd6b73192ac716978da8920e80a8c0#diff-20a4acbbac5298b3557115a523e986dc"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "was the change",
  "id": "5aafea5e458cbde557514f43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:50:38.842Z",
  "text": "was the change",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "So I&#39;m going to remove it and the tests",
  "id": "5aafea66bb1018b37a00926b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:50:46.682Z",
  "text": "So I'm going to remove it and the tests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "given a) doesn&#39;t exist b) things ignored half the time away",
  "id": "5aafea78f3f6d24c6891545a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:51:04.633Z",
  "text": "given a) doesn't exist b) things ignored half the time away",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "s/away/anyway/",
  "id": "5aafea7ffa066c532549f459",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T16:51:11.545Z",
  "text": "s/away/anyway/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Numba builds fine, only problem is that there&#39;s a segfault if the parallel test runner is in used;",
  "id": "5aafee73f3f6d24c68916bbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-19T17:08:03.526Z",
  "text": "Numba builds fine, only problem is that there's a segfault if the parallel test runner is in used;",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "test_parallel_ufunc_issues.py&quot;, line 109 in test_gil_reacquire_deadlock",
  "id": "5aafee76f3f6d24c68916bc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T17:08:06.348Z",
  "text": "test_parallel_ufunc_issues.py\", line 109 in test_gil_reacquire_deadlock",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the segfault above is really tricky :S",
  "id": "5ab02b3727c509a7747f910f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T21:27:19.920Z",
  "text": "the segfault above is really tricky :S",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "doesn&#39;t happen if parallel testing is off, so quite possibly threadpool safety related",
  "id": "5ab02c14e4d1c636041b05e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T21:31:00.772Z",
  "text": "doesn't happen if parallel testing is off, so quite possibly threadpool safety related",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "parallel testing is multiprocessing though",
  "id": "5ab033c85f188ccc15d46201",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T22:03:52.108Z",
  "text": "parallel testing is multiprocessing though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh yes, that&#39;s true. Bizarrely though <code>_numba_parallel_tests_=True</code> also stops it.",
  "id": "5ab0343ffa066c53254b9588",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-19T22:05:51.570Z",
  "text": "oh yes, that's true. Bizarrely though `_numba_parallel_tests_=True` also stops it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Looks like we need the windows llvmdev 6.0 package.",
  "id": "5ab10bd8a60157d62f0afeb1",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:25:44.579Z",
  "text": "@stuartarchibald: Looks like we need the windows llvmdev 6.0 package.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Excited to see the LLVM 6 patches aren&#39;t too crazy.",
  "id": "5ab10c0a35dd17022e7e42f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:26:34.980Z",
  "text": "Excited to see the LLVM 6 patches aren't too crazy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "IR changes are the worst",
  "id": "5ab10c34fa066c53254f738a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:27:16.902Z",
  "text": "IR changes are the worst",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(Which is why I&#39;m worried that NVIDIA will finally change the NVVM IR in CUDA 10)",
  "id": "5ab10c48c3c5f8b90d92f72f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:27:36.160Z",
  "text": "(Which is why I'm worried that NVIDIA will finally change the NVVM IR in CUDA 10)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think we can run the buildfarm llvmdev builder against the PR to get a package in the numba channel  for testing.",
  "id": "5ab10e66bb1018b37a061d3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:36:38.646Z",
  "text": "I think we can run the buildfarm llvmdev builder against the PR to get a package in the numba channel  for testing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yeah, I think we need it for all the platforms",
  "id": "5ab10e795f188ccc15d83a5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:36:57.389Z",
  "text": "Yeah, I think we need it for all the platforms",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Will go press the button.",
  "id": "5ab10e8de4d1c636041ef776",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:37:17.579Z",
  "text": "Will go press the button.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Should be building now.",
  "id": "5ab10fa96f8b4b99464a9304",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T13:42:01.563Z",
  "text": "Should be building now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://travis-ci.org/numba/llvmlite/jobs/355846609\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://travis-ci.org/numba/llvmlite/jobs/355846609</a>",
  "id": "5ab123eae4ff28713a541d38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:08:26.005Z",
  "text": "https://travis-ci.org/numba/llvmlite/jobs/355846609",
  "unread": false,
  "urls": [
   {
    "url": "https://travis-ci.org/numba/llvmlite/jobs/355846609"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, just saw that",
  "id": "5ab123fdf3f6d24c689775bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:08:45.117Z",
  "text": "yeah, just saw that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "how does that even happen?",
  "id": "5ab124005f188ccc15d8ba48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:08:48.393Z",
  "text": "how does that even happen?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "^ <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> was it you that mentioned something about cxxflags containing a null byte",
  "id": "5ab1240bbb1018b37a06a1df",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:08:59.028Z",
  "text": "^ @sklam was it you that mentioned something about cxxflags containing a null byte",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "as I assume that&#39;s what its complaining about",
  "id": "5ab12413c3c5f8b90d93906c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:09:07.620Z",
  "text": "as I assume that's what its complaining about",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Which means llvm-config is producing that",
  "id": "5ab1244535dd17022e7ed80e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:09:57.951Z",
  "text": "Which means llvm-config is producing that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> switches to osx",
  "id": "5ab12458e4ff28713a541f48",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:10:16.530Z",
  "status": true,
  "text": "@stuartarchibald switches to osx",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-20T15:11:18.205Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , yes, i\u2019ve been seeing llvm-config cxxflags containing null bytes ",
  "id": "5ab12492e4d1c636041f8090",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:11:14.813Z",
  "text": "@stuartarchibald , yes, i\u2019ve been seeing llvm-config cxxflags containing null bytes ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah thanks, I thought we&#39;d seen that. I guess the string needs them stripped then.",
  "id": "5ab124ea27c509a7748439ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:12:42.249Z",
  "text": "ah thanks, I thought we'd seen that. I guess the string needs them stripped then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so far, I have only seem them on my laptop.  I haven\u2019t seen them on our osx builder",
  "id": "5ab125ffbb1018b37a06ae44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:17:19.618Z",
  "text": "so far, I have only seem them on my laptop.  I haven\u2019t seen them on our osx builder",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I am guessing it is related to the corrupted CFG DOT",
  "id": "5ab1260ec3c5f8b90d939a88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:17:34.965Z",
  "text": "I am guessing it is related to the corrupted CFG DOT",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>(Pdb) l\n  1     import subprocess\n  2  \n  3     output = subprocess.check_output(<span class=\"special\">[</span>'llvm-config', '--cxxflags'<span class=\"special\">]</span>)\n  4     import pdb; pdb.set_trace()\n  5  -&gt; pass\n<span class=\"special\">[</span>EOF<span class=\"special\">]</span>\n(Pdb) p output\n'-I&lt;path&gt;/envs/llvmdev6/include -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -I&lt;path&gt;/envs/llvmdev6/include -fdebug-prefix-map=<span class=\"formula\">$<span class=\"special\">{</span>SRC_DIR<span class=\"special\">}</span>=/usr/local/src/conda/$</span><span class=\"special\">{</span>PKG_NAME<span class=\"special\">}</span>-<span class=\"formula\">$<span class=\"special\">{</span>PKG_VERSION<span class=\"special\">}</span> -fdebug-prefix-map=$</span><span class=\"special\">{</span>PREFIX<span class=\"special\">}</span>=/usr/local/src/conda-prefix -mmacosx-version-min=10.9 -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -pedantic -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -Wstring-conversion -O3   -fno-exceptions -fno-rtti -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\x</span>00<span class=\"command\">\\n</span>'</code></pre>",
  "id": "5ab1275dc3c5f8b90d93a287",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:23:08.892Z",
  "text": "```\n(Pdb) l\n  1     import subprocess\n  2  \n  3     output = subprocess.check_output(['llvm-config', '--cxxflags'])\n  4     import pdb; pdb.set_trace()\n  5  -> pass\n[EOF]\n(Pdb) p output\n'-I<path>/envs/llvmdev6/include -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -I<path>/envs/llvmdev6/include -fdebug-prefix-map=${SRC_DIR}=/usr/local/src/conda/${PKG_NAME}-${PKG_VERSION} -fdebug-prefix-map=${PREFIX}=/usr/local/src/conda-prefix -mmacosx-version-min=10.9 -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -pedantic -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -Wstring-conversion -O3   -fno-exceptions -fno-rtti -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\n'\n\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well, there&#39;s certainly null bytes",
  "id": "5ab1278b6f8b4b99464b1c98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:23:55.703Z",
  "text": "well, there's certainly null bytes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<p>It&#39;s definitely <code>llvm-config --cxxflags</code> and not something we are doing:</p><pre><code>llvm-config <span class=\"comment\">--cxxflags|xxd</span></code></pre><p>gives:</p><pre><code>&lt;snip&gt;\n<span class=\"number\">00000250</span>: <span class=\"number\">652</span>d <span class=\"number\">6e6</span>f <span class=\"number\">6e2</span>d <span class=\"number\">7669</span> <span class=\"number\">7274</span> <span class=\"number\">7561</span> <span class=\"number\">6</span>c2d <span class=\"number\">6474</span>  e-non-<span class=\"keyword\">virtual</span>-dt\n<span class=\"number\">00000260</span>: <span class=\"number\">6f</span>72 <span class=\"number\">202</span>d <span class=\"number\">5773</span> <span class=\"number\">7472</span> <span class=\"number\">696</span>e <span class=\"number\">672</span>d <span class=\"number\">636f</span> <span class=\"number\">6e76</span>  or -Wstring-conv\n<span class=\"number\">00000270</span>: <span class=\"number\">6572</span> <span class=\"number\">7369</span> <span class=\"number\">6f</span>6e <span class=\"number\">202</span>d <span class=\"number\">4f</span>33 <span class=\"number\">2020</span> <span class=\"number\">202</span>d <span class=\"number\">666</span>e  ersion -O3   -fn\n<span class=\"number\">00000280</span>: <span class=\"number\">6f</span>2d <span class=\"number\">6578</span> <span class=\"number\">6365</span> <span class=\"number\">7074</span> <span class=\"number\">696f</span> <span class=\"number\">6e73</span> <span class=\"number\">202</span>d <span class=\"number\">666</span>e  o-exceptions -fn\n<span class=\"number\">00000290</span>: <span class=\"number\">6f</span>2d <span class=\"number\">7274</span> <span class=\"number\">7469</span> <span class=\"number\">202</span>d <span class=\"number\">445f</span> <span class=\"number\">4445</span> <span class=\"number\">4255</span> <span class=\"number\">4720</span>  o-rtti -D_DEBUG \n<span class=\"number\">000002</span>a0: <span class=\"number\">2</span>d44 <span class=\"number\">5f</span>5f <span class=\"number\">5354</span> <span class=\"number\">4443</span> <span class=\"number\">5f</span>43 <span class=\"number\">4f</span>4e <span class=\"number\">5354</span> <span class=\"number\">414</span>e  -D__STDC_CONSTAN\n<span class=\"number\">000002</span>b0: <span class=\"number\">545f</span> <span class=\"number\">4</span>d41 <span class=\"number\">4352</span> <span class=\"number\">4f</span>53 <span class=\"number\">202</span>d <span class=\"number\">445f</span> <span class=\"number\">5f</span>53 <span class=\"number\">5444</span>  T_MACROS -D__STD\n<span class=\"number\">000002</span>c0: <span class=\"number\">435f</span> <span class=\"number\">464f</span> <span class=\"number\">524</span>d <span class=\"number\">4154</span> <span class=\"number\">5f</span>4d <span class=\"number\">4143</span> <span class=\"number\">524f</span> <span class=\"number\">5320</span>  C_FORMAT_MACROS \n<span class=\"number\">000002</span>d0: <span class=\"number\">2</span>d44 <span class=\"number\">5f</span>5f <span class=\"number\">5354</span> <span class=\"number\">4443</span> <span class=\"number\">5f</span>4c <span class=\"number\">494</span>d <span class=\"number\">4954</span> <span class=\"number\">5f</span>4d  -D__STDC_LIMIT_M\n<span class=\"number\">000002e0</span>: <span class=\"number\">4143</span> <span class=\"number\">524f</span> <span class=\"number\">5300</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ACROS...........\n<span class=\"number\">000002f</span>0: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000300</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000310</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000320</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000330</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000340</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000350</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000360</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000370</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000380</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">00000390</span>: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">000003</span>a0: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span>  ................\n<span class=\"number\">000003</span>b0: <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">0000</span> <span class=\"number\">000</span>a            ............</code></pre>",
  "id": "5ab128565f188ccc15d8d484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:27:18.646Z",
  "text": "It's definitely `llvm-config --cxxflags` and not something we are doing:\n```\nllvm-config --cxxflags|xxd\n```\ngives:\n```\n<snip>\n00000250: 652d 6e6f 6e2d 7669 7274 7561 6c2d 6474  e-non-virtual-dt\n00000260: 6f72 202d 5773 7472 696e 672d 636f 6e76  or -Wstring-conv\n00000270: 6572 7369 6f6e 202d 4f33 2020 202d 666e  ersion -O3   -fn\n00000280: 6f2d 6578 6365 7074 696f 6e73 202d 666e  o-exceptions -fn\n00000290: 6f2d 7274 7469 202d 445f 4445 4255 4720  o-rtti -D_DEBUG \n000002a0: 2d44 5f5f 5354 4443 5f43 4f4e 5354 414e  -D__STDC_CONSTAN\n000002b0: 545f 4d41 4352 4f53 202d 445f 5f53 5444  T_MACROS -D__STD\n000002c0: 435f 464f 524d 4154 5f4d 4143 524f 5320  C_FORMAT_MACROS \n000002d0: 2d44 5f5f 5354 4443 5f4c 494d 4954 5f4d  -D__STDC_LIMIT_M\n000002e0: 4143 524f 5300 0000 0000 0000 0000 0000  ACROS...........\n000002f0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000300: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000310: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000320: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000330: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000340: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000350: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000360: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000370: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000380: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000390: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000003a0: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000003b0: 0000 0000 0000 0000 0000 000a            ............\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "hah, wow",
  "id": "5ab129b06f8b4b99464b2a7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:33:04.574Z",
  "text": "hah, wow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so I assume it is safe for us to <code>a.replace(&#39;\\0&#39;,&#39;&#39;)</code>?",
  "id": "5ab129eee4d1c636041fa191",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:34:06.241Z",
  "text": "so I assume it is safe for us to `a.replace('\\0','')`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "since they all appear at the end",
  "id": "5ab129f5e4d1c636041fa1ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:34:13.624Z",
  "text": "since they all appear at the end",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, I&#39;m just trying to work out why it&#39;s doing it",
  "id": "5ab12af45f188ccc15d8e38b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:38:28.261Z",
  "text": "yeah, I'm just trying to work out why it's doing it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Doesn&#39;t happen on linux",
  "id": "5ab12afc458cbde55757a47f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:38:36.846Z",
  "text": "Doesn't happen on linux",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-20T15:39:22.125Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "normally it is not easy to print nulls since most of the I/O options will interpret that as the end of a string",
  "id": "5ab12b1afa066c5325503e5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:39:06.897Z",
  "text": "normally it is not easy to print nulls since most of the I/O options will interpret that as the end of a string",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>a.replace(\u2018\\0\u2019, \u2018\u2019)</code> does do the trick\u2026 I did that to get things build locally",
  "id": "5ab12b3a27c509a774846024",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:39:38.052Z",
  "text": "`a.replace(\u2018\\0\u2019, \u2018\u2019)` does do the trick\u2026 I did that to get things build locally\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It is only the <code>--cxxflags</code> option that has those null bytes at the end",
  "id": "5ab12c0f35dd17022e7f0bb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:43:11.488Z",
  "text": "It is only the `--cxxflags` option that has those null bytes at the end",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the rest are all fine",
  "id": "5ab12c13f3f6d24c6897a705",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:43:15.977Z",
  "text": "the rest are all fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and it seems like that is from included <code>#define LLVM_CXXFLAGS &quot;@LLVM_CXXFLAGS@&quot;</code>",
  "id": "5ab12c79f3f6d24c6897a94c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:44:57.841Z",
  "text": "and it seems like that is from included `#define LLVM_CXXFLAGS \"@LLVM_CXXFLAGS@\"`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which is generated by the build system",
  "id": "5ab12c84458cbde55757ad51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:45:08.813Z",
  "text": "which is generated by the build system",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which seems to point at the problem appearing from CMake/the build system",
  "id": "5ab12d1e458cbde55757b0ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T15:47:42.562Z",
  "text": "which seems to point at the problem appearing from CMake/the build system",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Anaconda clang also has the problem",
  "id": "5ab13026e4ff28713a5470d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T16:00:38.521Z",
  "text": "Anaconda clang also has the problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "4.0.1 has the null bytes present",
  "id": "5ab1307527c509a774847f32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T16:01:57.374Z",
  "text": "4.0.1 has the null bytes present",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "for the problem in llvm5 cfg dot file, removing the osx clang bootstrap \u201cfixes\u201d the problem",
  "id": "5ab137e15f188ccc15d93bf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-20T16:33:37.060Z",
  "text": "for the problem in llvm5 cfg dot file, removing the osx clang bootstrap \u201cfixes\u201d the problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "? but then you aren&#39;t building with Anaconda clang ?",
  "id": "5ab1381be4d1c636041ffcba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T16:34:35.526Z",
  "text": "? but then you aren't building with Anaconda clang ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "right, so I thk there\u2019s a problem in anaconda clang",
  "id": "5ab13830a60157d62f0c1231",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T16:34:56.817Z",
  "text": "right, so I thk there\u2019s a problem in anaconda clang",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "think so",
  "id": "5ab1391af3f6d24c6897f7f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T16:38:50.071Z",
  "text": "think so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "This is the problem <span data-link-type=\"issue\" data-issue=\"2524\" data-issue-repo=\"conda/conda-build\" class=\"issue\">conda/conda-build#2524</span>",
  "id": "5ab13db06f8b4b99464baa16",
  "issues": [
   {
    "number": "2524",
    "repo": "conda/conda-build"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T16:58:24.337Z",
  "text": "This is the problem https://github.com/conda/conda-build/issues/2524",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Essentially when Anaconda clang is installed there&#39;s prefix replacement that goes on, but for fancy string types like <code>llvm::SmallString&lt;T&gt;</code> the replacement doesn&#39;t shrink the string size, so when a write occurs it writes to <code>T</code> long, hence null bytes.",
  "id": "5ab13fb5fa066c532550c742",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T17:07:01.698Z",
  "text": "Essentially when Anaconda clang is installed there's prefix replacement that goes on, but for fancy string types like `llvm::SmallString<T>` the replacement doesn't shrink the string size, so when a write occurs it writes to `T` long, hence null bytes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "good to know",
  "id": "5ab1417527c509a77484eae7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T17:14:29.959Z",
  "text": "good to know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m unsure if this is related to the CFG writing problem",
  "id": "5ab141a6e4ff28713a54db22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T17:15:18.564Z",
  "text": "I'm unsure if this is related to the CFG writing problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "If i\u2019m reading this right, it can be turned off with: <code>detect_binary_files_with_prefix</code>",
  "id": "5ab141f135dd17022e7f9354",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T17:16:33.735Z",
  "text": "If i\u2019m reading this right, it can be turned off with: `detect_binary_files_with_prefix`\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I am building it with prefix off",
  "id": "5ab1422bf3f6d24c6898286b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T17:17:31.586Z",
  "text": "I am building it with prefix off\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "nope, that didn\u2019t help",
  "id": "5ab168f0f3f6d24c6898fd3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T20:02:56.160Z",
  "text": "nope, that didn\u2019t help\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Right, thanks for trying, I guess for this single instance we can just patch LLVM src or keep the byte replacement.",
  "id": "5ab1879d6f8b4b99464d3b8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T22:13:49.907Z",
  "text": "Right, thanks for trying, I guess for this single instance we can just patch LLVM src or keep the byte replacement.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess we need a debug llvm to go poke around and see what&#39;s happening with the CFG issue, and whether it&#39;s related or not.",
  "id": "5ab187bdc3c5f8b90d95c418",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T22:14:21.332Z",
  "text": "I guess we need a debug llvm to go poke around and see what's happening with the CFG issue, and whether it's related or not.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I&#39;ve updated my PRs <span data-link-type=\"issue\" data-issue=\"339\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#339</span> and <span data-link-type=\"issue\" data-issue=\"2824\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2824</span>, but the numba one needs the code in the llvmlite one :(",
  "id": "5ab18d575f188ccc15db0622",
  "issues": [
   {
    "number": "339",
    "repo": "numba/llvmlite"
   },
   {
    "number": "2824",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-20T22:38:15.686Z",
  "text": "@stuartarchibald @sklam I've updated my PRs numba/llvmlite#339 and numba/numba#2824, but the numba one needs the code in the llvmlite one :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> thanks. I think <span data-link-type=\"issue\" data-issue=\"2824\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2824</span> is also failing because PEP515 is py36 only?",
  "id": "5ab1a21bc3c5f8b90d963b75",
  "issues": [
   {
    "number": "2824",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T00:06:51.663Z",
  "text": "@njwhite thanks. I think https://github.com/numba/numba/pull/2824 is also failing because PEP515 is py36 only?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: How are thinks looking on <span data-link-type=\"issue\" data-issue=\"2832\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2832</span>?  I assume we are holding <span data-link-type=\"issue\" data-issue=\"340\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#340</span> until the one failing test noted in <span data-link-type=\"issue\" data-issue=\"2832\" class=\"issue\">#2832</span> is resolved?",
  "id": "5ab27debc3c5f8b90d9a52e5",
  "issues": [
   {
    "number": "2832",
    "repo": "numba/numba"
   },
   {
    "number": "340",
    "repo": "numba/llvmlite"
   },
   {
    "number": "2832"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-21T15:44:43.919Z",
  "text": "@stuartarchibald: How are thinks looking on numba/numba#2832?  I assume we are holding numba/llvmlite#340 until the one failing test noted in #2832 is resolved?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> TBH I am unsure what is wrong with it, we probably can&#39;t rely on llvm6 until the cause of the problem is at least known?",
  "id": "5ab27e515f188ccc15df6e88",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-21T15:46:25.529Z",
  "text": "@seibert TBH I am unsure what is wrong with it, we probably can't rely on llvm6 until the cause of the problem is at least known?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: To unblock Anton, I&#39;m thinking it might make sense to merge <span data-link-type=\"issue\" data-issue=\"326\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#326</span> before LLVM6, since we might be fighting with LLVM6 for a bit.",
  "id": "5ab2814a27c509a7748ad92c",
  "issues": [
   {
    "number": "326",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-21T15:59:06.341Z",
  "text": "@sklam: To unblock Anton, I'm thinking it might make sense to merge https://github.com/numba/llvmlite/pull/326 before LLVM6, since we might be fighting with LLVM6 for a bit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "And those changes are opt-in anyway.",
  "id": "5ab28161c3c5f8b90d9a6a10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-21T15:59:29.576Z",
  "text": "And those changes are opt-in anyway.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m going to build the numba stack and see what happens :)",
  "id": "5ab2819135dd17022e859895",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-21T16:00:17.432Z",
  "text": "I'm going to build the numba stack and see what happens :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-21T16:26:55.143Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> make sense, and we just need to see if numba builds+runs fine",
  "id": "5ab287b6c3c5f8b90d9a925b",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-03-21T16:26:30.638Z",
  "text": "@seibert make sense, and we just need to see if numba builds+runs fine",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm... strange, tests/npyufunc/test_parallel_ufunc_issues.py&quot;, line 109 in test_gil_reacquire_deadlock",
  "id": "5ab288edbb1018b37a0d80a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:31:41.098Z",
  "text": "hmmm... strange, tests/npyufunc/test_parallel_ufunc_issues.py\", line 109 in test_gil_reacquire_deadlock",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "also fails with this patch",
  "id": "5ab288ff5f188ccc15dfb011",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:31:59.209Z",
  "text": "also fails with this patch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and also segfaults on llvmlite that&#39;s on the numba channel",
  "id": "5ab289b7e4ff28713a5b14fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:35:03.452Z",
  "text": "and also segfaults on llvmlite that's on the numba channel",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so I guess it just so happens that my test machine happens to have the right magic combination of stuff to trigger this problem",
  "id": "5ab289d55f188ccc15dfb84c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:35:33.162Z",
  "text": "so I guess it just so happens that my test machine happens to have the right magic combination of stuff to trigger this problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and its not llvm 6 related,",
  "id": "5ab289e3bb1018b37a0d86a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:35:47.503Z",
  "text": "and its not llvm 6 related,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-21T16:43:43.992Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "all this test is doing is ensuring that the ufunc kernel released the gil before entry. it\u2019s weird it segfault because of any changes in llvm",
  "id": "5ab28badf3f6d24c689e63b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:43:25.345Z",
  "text": "all this test is doing is ensuring that the ufunc kernel released the gil before entry. it\u2019s weird it segfault because of any changes in llvm",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the problem is due to corruption",
  "id": "5ab28bcfe4ff28713a5b213c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:43:59.257Z",
  "text": "I think the problem is due to corruption",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yucks",
  "id": "5ab28bd7bb1018b37a0d91e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:44:07.088Z",
  "text": "yucks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "try rebuild llvm in debug mode, my llvm5+cfg bug is not showing up in debug mode",
  "id": "5ab28c0e458cbde5575e6a6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:45:02.637Z",
  "text": "try rebuild llvm in debug mode, my llvm5+cfg bug is not showing up in debug mode",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I suspect that the magic combination of stuff won&#39;t exist on the buildfarm so it doesn&#39;t show up, but valgrind was decidedly unhappy",
  "id": "5ab28c2afa066c53255718a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:45:30.527Z",
  "text": "I suspect that the magic combination of stuff won't exist on the buildfarm so it doesn't show up, but valgrind was decidedly unhappy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-21T16:46:38.241Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, so no repro on the buildfarm?",
  "id": "5ab28c6cfa066c53255719cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:46:36.909Z",
  "text": "oh, so no repro on the buildfarm?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah ok, I wonder if it&#39;s an further Anaconda compiler problem",
  "id": "5ab28c71e4ff28713a5b2419",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:46:41.000Z",
  "text": "ah ok, I wonder if it's an further Anaconda compiler problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve not run it on the farm, I can try that now I <em>think</em>, if I build llvmlite from the pr and then numba from the pr and use the local caches",
  "id": "5ab28ca8c3c5f8b90d9aabbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:47:36.625Z",
  "text": "I've not run it on the farm, I can try that now I *think*, if I build llvmlite from the pr and then numba from the pr and use the local caches",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I haven\u2019t looked into my problem deeply enough since I am on mobile hotpot remoting from my dentist office.  I should be able to confirm later today.",
  "id": "5ab28cad35dd17022e85dc4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:47:41.380Z",
  "text": "I haven\u2019t looked into my problem deeply enough since I am on mobile hotpot remoting from my dentist office.  I should be able to confirm later today.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The problem exists in LLVM 5/what is already being shipped.",
  "id": "5ab28dd9458cbde5575e7609",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:52:41.042Z",
  "text": "The problem exists in LLVM 5/what is already being shipped.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>$ conda create -n test_numba_release37 numba scipy cffi gcc_linux-<span class=\"number\">64</span> gxx_linux64 -y  -<span class=\"tag\">q</span>\n$ conda activate test_numba_release37 &lt;snip env changes&gt;\n$ python -c <span class=\"string\">'import numba; numba.runtests.main(\"-m\", \"-b\", \"-v\")'</span>                                                               \ncc1plus: warning: command line option <span class=\"string\">'-Wstrict-prototypes'</span> is valid <span class=\"keyword\">for</span> C/ObjC but not <span class=\"keyword\">for</span> C++\nskipped CUDA tests\nskipped CUDA tests\ntest_direct_dufunc_cache (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_caching</span><span class=\"class\">.TestDUfuncCacheTest</span>) ... ok\ntest_indirect_dufunc_cache (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_caching</span><span class=\"class\">.TestDUfuncCacheTest</span>) ... ok\ntest_direct_gufunc_cache_objmode (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_caching</span><span class=\"class\">.TestGUfuncCacheTest</span>) ... ok\ntest_direct_gufunc_cache (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_caching</span><span class=\"class\">.TestGUfuncCacheTest</span>) ... ok\ntest_filename_prefix (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_caching</span><span class=\"class\">.TestGUfuncCacheTest</span>) ... ok\ntest_direct_gufunc_cache_parallel (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_caching</span><span class=\"class\">.TestGUfuncCacheTest</span>) ... ok\n&lt;---skip things reporting ok ---&gt;\ntest_scalar_output (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_gufunc</span><span class=\"class\">.TestGUVectorizeScalar</span>) ... ok\ntest_gil_reacquire_deadlock (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_parallel_ufunc_issues</span><span class=\"class\">.TestParUfuncIssues</span>) ... ok\ntest_guvectorize_decor (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_gufunc</span><span class=\"class\">.TestGUFuncParallel</span>) ... ok\ntest_scalar_input_core_type (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_gufunc</span><span class=\"class\">.TestGUVectorizeScalarParallel</span>) ... ok\ntest_implicit_broadcasting (numba<span class=\"class\">.tests</span><span class=\"class\">.npyufunc</span><span class=\"class\">.test_ufunc</span><span class=\"class\">.TestUFuncs</span>) ... ok\nFatal Python error: Segmentation fault\n\nThread <span class=\"number\">0</span>x00007f6ce0251740 (most recent call first):\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/tests/npyufunctest_parallel_ufunc_issues.py\"</span>, line <span class=\"number\">109</span> <span class=\"keyword\">in</span> test_gil_reacquire_deadlock\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/unittest/case.py\"</span>, line <span class=\"number\">605</span> <span class=\"keyword\">in</span> run\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/unittest/case.py\"</span>, line <span class=\"number\">653</span> <span class=\"keyword\">in</span> __call__\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/testing/main.py\"</span>, line <span class=\"number\">480</span> <span class=\"keyword\">in</span> \n__call__\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/pool.py\"</span>, line <span class=\"number\">119</span> <span class=\"keyword\">in</span> worker\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/process.py\"</span>, line <span class=\"number\">93</span> <span class=\"keyword\">in</span> run\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/process.py\"</span>, line <span class=\"number\">258</span> <span class=\"keyword\">in</span> _bootstrap\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/popen_fork.py\"</span>, line <span class=\"number\">80</span> <span class=\"keyword\">in</span> _launch\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/popen_fork.py\"</span>, line <span class=\"number\">26</span> <span class=\"keyword\">in</span> __init__\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/context.py\"</span>, line <span class=\"number\">277</span> <span class=\"keyword\">in</span> _Popen\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/process.py\"</span>, line <span class=\"number\">105</span> <span class=\"keyword\">in</span> start\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/pool.py\"</span>, line <span class=\"number\">239</span> <span class=\"keyword\">in</span> _repopulate_pool\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/pool.py\"</span>, line <span class=\"number\">174</span> <span class=\"keyword\">in</span> __init__\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/multiprocessing/context.py\"</span>, line <span class=\"number\">119</span> <span class=\"keyword\">in</span> Pool\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/testing/main.py\"</span>, line <span class=\"number\">558</span> <span class=\"keyword\">in</span> _run_inner\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/unittest/runner.py\"</span>, line <span class=\"number\">176</span> <span class=\"keyword\">in</span> run\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/testing/main.py\"</span>, line <span class=\"number\">607</span> <span class=\"keyword\">in</span> run\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/unittest/main.py\"</span>, line <span class=\"number\">256</span> <span class=\"keyword\">in</span> runTests\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/testing/main.py\"</span>, line <span class=\"number\">211</span> <span class=\"keyword\">in</span> run_tests_real\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/testing/main.py\"</span>, line <span class=\"number\">226</span> <span class=\"keyword\">in</span> runTests\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/unittest/main.py\"</span>, line <span class=\"number\">95</span> <span class=\"keyword\">in</span> __init__\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/testing/main.py\"</span>, line <span class=\"number\">127</span> <span class=\"keyword\">in</span> __init__\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/testing/__init__.py\"</span>, line <span class=\"number\">70</span> <span class=\"keyword\">in</span> run_tests\n  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/runtests.py\"</span>, line <span class=\"number\">23</span> <span class=\"keyword\">in</span> _main  File <span class=\"string\">\"&lt;path&gt;/lib/python3.6/site-packages/numba/runtests.py\"</span>, line <span class=\"number\">29</span> <span class=\"keyword\">in</span> main\n  File <span class=\"string\">\"&lt;string&gt;\"</span>, line <span class=\"number\">1</span> <span class=\"keyword\">in</span> &lt;module&gt;</code></pre>",
  "id": "5ab28ec0c3c5f8b90d9ab794",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:56:32.600Z",
  "text": "```\n$ conda create -n test_numba_release37 numba scipy cffi gcc_linux-64 gxx_linux64 -y  -q\n$ conda activate test_numba_release37 <snip env changes>\n$ python -c 'import numba; numba.runtests.main(\"-m\", \"-b\", \"-v\")'                                                               \ncc1plus: warning: command line option '-Wstrict-prototypes' is valid for C/ObjC but not for C++\nskipped CUDA tests\nskipped CUDA tests\ntest_direct_dufunc_cache (numba.tests.npyufunc.test_caching.TestDUfuncCacheTest) ... ok\ntest_indirect_dufunc_cache (numba.tests.npyufunc.test_caching.TestDUfuncCacheTest) ... ok\ntest_direct_gufunc_cache_objmode (numba.tests.npyufunc.test_caching.TestGUfuncCacheTest) ... ok\ntest_direct_gufunc_cache (numba.tests.npyufunc.test_caching.TestGUfuncCacheTest) ... ok\ntest_filename_prefix (numba.tests.npyufunc.test_caching.TestGUfuncCacheTest) ... ok\ntest_direct_gufunc_cache_parallel (numba.tests.npyufunc.test_caching.TestGUfuncCacheTest) ... ok\n<---skip things reporting ok --->\ntest_scalar_output (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalar) ... ok\ntest_gil_reacquire_deadlock (numba.tests.npyufunc.test_parallel_ufunc_issues.TestParUfuncIssues) ... ok\ntest_guvectorize_decor (numba.tests.npyufunc.test_gufunc.TestGUFuncParallel) ... ok\ntest_scalar_input_core_type (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalarParallel) ... ok\ntest_implicit_broadcasting (numba.tests.npyufunc.test_ufunc.TestUFuncs) ... ok\nFatal Python error: Segmentation fault\n\nThread 0x00007f6ce0251740 (most recent call first):\n  File \"<path>/lib/python3.6/site-packages/numba/tests/npyufunctest_parallel_ufunc_issues.py\", line 109 in test_gil_reacquire_deadlock\n  File \"<path>/lib/python3.6/unittest/case.py\", line 605 in run\n  File \"<path>/lib/python3.6/unittest/case.py\", line 653 in __call__\n  File \"<path>/lib/python3.6/site-packages/numba/testing/main.py\", line 480 in \n__call__\n  File \"<path>/lib/python3.6/multiprocessing/pool.py\", line 119 in worker\n  File \"<path>/lib/python3.6/multiprocessing/process.py\", line 93 in run\n  File \"<path>/lib/python3.6/multiprocessing/process.py\", line 258 in _bootstrap\n  File \"<path>/lib/python3.6/multiprocessing/popen_fork.py\", line 80 in _launch\n  File \"<path>/lib/python3.6/multiprocessing/popen_fork.py\", line 26 in __init__\n  File \"<path>/lib/python3.6/multiprocessing/context.py\", line 277 in _Popen\n  File \"<path>/lib/python3.6/multiprocessing/process.py\", line 105 in start\n  File \"<path>/lib/python3.6/multiprocessing/pool.py\", line 239 in _repopulate_pool\n  File \"<path>/lib/python3.6/multiprocessing/pool.py\", line 174 in __init__\n  File \"<path>/lib/python3.6/multiprocessing/context.py\", line 119 in Pool\n  File \"<path>/lib/python3.6/site-packages/numba/testing/main.py\", line 558 in _run_inner\n  File \"<path>/lib/python3.6/unittest/runner.py\", line 176 in run\n  File \"<path>/lib/python3.6/site-packages/numba/testing/main.py\", line 607 in run\n  File \"<path>/lib/python3.6/unittest/main.py\", line 256 in runTests\n  File \"<path>/lib/python3.6/site-packages/numba/testing/main.py\", line 211 in run_tests_real\n  File \"<path>/lib/python3.6/site-packages/numba/testing/main.py\", line 226 in runTests\n  File \"<path>/lib/python3.6/unittest/main.py\", line 95 in __init__\n  File \"<path>/lib/python3.6/site-packages/numba/testing/main.py\", line 127 in __init__\n  File \"<path>/lib/python3.6/site-packages/numba/testing/__init__.py\", line 70 in run_tests\n  File \"<path>/lib/python3.6/site-packages/numba/runtests.py\", line 23 in _main  File \"<path>/lib/python3.6/site-packages/numba/runtests.py\", line 29 in main\n  File \"<string>\", line 1 in <module>\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "So not LLVM 6 related <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> ^",
  "id": "5ab28edb27c509a7748b24ed",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-21T16:56:59.396Z",
  "text": "So not LLVM 6 related @seibert ^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "for the llvm5-cfg bug, a debug build with no optimization will allow the <code>opt -dot-cfg</code> to run correctly.<br>specially, with <code>-DCMAKE_BUILD_TYPE=Debug</code> and remove <code>-O2</code> from <code>CXXFLAGS</code>, which is set by the <code>clangxx_osx-64</code> conda package.  So, I may conclude that somehow the optimization from <code>clang</code> is causing the <code>dot-cfg</code> feature to break.",
  "id": "5ab309f027c509a7748d810a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T01:42:08.923Z",
  "text": "for the llvm5-cfg bug, a debug build with no optimization will allow the `opt -dot-cfg` to run correctly.  \nspecially, with `-DCMAKE_BUILD_TYPE=Debug` and remove `-O2` from `CXXFLAGS`, which is set by the `clangxx_osx-64` conda package.  So, I may conclude that somehow the optimization from `clang` is causing the `dot-cfg` feature to break.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm that&#39;s interesting, I wonder if the system clang would create a llvm with the same problem, and/or if it exists out of conda packages (I can&#39;t see how the prefix mangle would cause it but you never know).",
  "id": "5ab38045c3c5f8b90d9ef363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T10:07:01.084Z",
  "text": "hmmm that's interesting, I wonder if the system clang would create a llvm with the same problem, and/or if it exists out of conda packages (I can't see how the prefix mangle would cause it but you never know).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Just a thought, should we have incremented the build numba on llvmdev following the merge of the SVML patch ?",
  "id": "5ab391ed2b9dfdbc3a0d7f7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T11:22:21.969Z",
  "text": "Just a thought, should we have incremented the build numba on llvmdev following the merge of the SVML patch ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yes, probably",
  "id": "5ab3c29127c509a77490b146",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T14:49:53.211Z",
  "text": "yes, probably",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oops",
  "id": "5ab3c2acf3f6d24c68a3fbe6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T14:50:20.200Z",
  "text": "oops",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "that also ensures that conda will fetch the new llvmdev in preference over the existing one",
  "id": "5ab3c2b22b9dfdbc3a0e9235",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T14:50:26.087Z",
  "text": "that also ensures that conda will fetch the new llvmdev in preference over the existing one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well, it built ok, I&#39;ll issue a bump patch",
  "id": "5ab3c2c9fa066c53255c9e6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T14:50:49.600Z",
  "text": "well, it built ok, I'll issue a bump patch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , I just valgrind\u2019ed the opt build and here\u2019s what I got:<pre><code>\nWriting 'cfg._ZN7cpython8__main__7foo$241Ex.dot'...==41194== Conditional jump or move depends on uninitialised value(s)\n=<span class=\"ruby\">=<span class=\"number\">41194</span>==    at <span class=\"number\">0x10177127C</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Twine</span><span class=\"symbol\">:</span><span class=\"symbol\">:printOneChild</span>(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:raw_ostream&amp;</span>, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Twine</span><span class=\"constant\">::Child</span>, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Twine</span><span class=\"constant\">::NodeKind</span>) const (<span class=\"constant\">Twine</span>.<span class=\"symbol\">cpp:</span><span class=\"number\">59</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x10177126E</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Twine</span><span class=\"symbol\">:</span><span class=\"symbol\">:printOneChild</span>(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:raw_ostream&amp;</span>, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Twine</span><span class=\"constant\">::Child</span>, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Twine</span><span class=\"constant\">::NodeKind</span>) const (<span class=\"constant\">Twine</span>.<span class=\"symbol\">cpp:</span><span class=\"number\">164</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x101770F1E</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Twine</span><span class=\"symbol\">:</span><span class=\"symbol\">:str</span>() const (<span class=\"constant\">Twine</span>.<span class=\"symbol\">cpp:</span><span class=\"number\">164</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x100D0849B</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:DOTGraphTraits&lt;llvm</span><span class=\"constant\">::Function</span> const*&gt;<span class=\"symbol\">:</span><span class=\"symbol\">:getEdgeAttributes</span>(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:BasicBlock</span> const*, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:TerminatorInst</span><span class=\"constant\">::SuccIterator</span>&lt;<span class=\"symbol\">llvm:</span><span class=\"symbol\">:TerminatorInst</span> const*, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:BasicBlock</span> const&gt;, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:Function</span> const*) (<span class=\"constant\">CFGPrinter</span>.<span class=\"symbol\">h:</span><span class=\"number\">176</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x100D07EA9</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:GraphWriter&lt;llvm</span><span class=\"constant\">::Function</span> const*&gt;<span class=\"symbol\">:</span><span class=\"symbol\">:writeEdge</span>(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:BasicBlock</span> const*, unsigned int, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:TerminatorInst</span><span class=\"constant\">::SuccIterator</span>&lt;<span class=\"symbol\">llvm:</span><span class=\"symbol\">:TerminatorInst</span> const*, <span class=\"symbol\">llvm:</span><span class=\"symbol\">:BasicBlock</span> const&gt;) (<span class=\"constant\">GraphWriter</span>.<span class=\"symbol\">h:</span><span class=\"number\">255</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x100D07B14</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:GraphWriter&lt;llvm</span><span class=\"constant\">::Function</span> const*&gt;<span class=\"symbol\">:</span><span class=\"symbol\">:writeNode</span>(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:BasicBlock</span> const*) (<span class=\"constant\">GraphWriter</span>.<span class=\"symbol\">h:</span><span class=\"number\">232</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x100D07262</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:GraphWriter&lt;llvm</span><span class=\"constant\">::Function</span> const*&gt;<span class=\"symbol\">:</span><span class=\"symbol\">:writeGraph</span>(<span class=\"symbol\">std:</span><span class=\"symbol\">:__1</span><span class=\"symbol\">:</span><span class=\"symbol\">:basic_string&lt;char</span>, <span class=\"symbol\">std:</span><span class=\"symbol\">:__1</span><span class=\"symbol\">:</span><span class=\"symbol\">:char_traits&lt;char&gt;</span>, <span class=\"symbol\">std:</span><span class=\"symbol\">:__1</span><span class=\"symbol\">:</span><span class=\"symbol\">:allocator&lt;char&gt;</span> &gt; const&amp;) (<span class=\"constant\">GraphWriter</span>.<span class=\"symbol\">h:</span><span class=\"number\">158</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x100D06B7E</span><span class=\"symbol\">:</span> writeCFGToDotFile(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:Function&amp;</span>) (<span class=\"constant\">GraphWriter</span>.<span class=\"symbol\">h:</span><span class=\"number\">316</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x100D086BB</span><span class=\"symbol\">:</span> (anonymous namespace)<span class=\"constant\">::CFGPrinterLegacyPass::</span>runOnFunction(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:Function&amp;</span>) (<span class=\"constant\">CFGPrinter</span>.<span class=\"symbol\">cpp:</span><span class=\"number\">107</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x1012BE03C</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:FPPassManager</span><span class=\"symbol\">:</span><span class=\"symbol\">:runOnFunction</span>(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:Function&amp;</span>) (<span class=\"constant\">LegacyPassManager</span>.<span class=\"symbol\">cpp:</span><span class=\"number\">1514</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x1012BE2C2</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:FPPassManager</span><span class=\"symbol\">:</span><span class=\"symbol\">:runOnModule</span>(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:Module&amp;</span>) (<span class=\"constant\">LegacyPassManager</span>.<span class=\"symbol\">cpp:</span><span class=\"number\">1535</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==    by <span class=\"number\">0x1012BE769</span><span class=\"symbol\">:</span> <span class=\"symbol\">llvm:</span><span class=\"symbol\">:legacy</span><span class=\"constant\">::PassManagerImpl::</span>run(<span class=\"symbol\">llvm:</span><span class=\"symbol\">:Module&amp;</span>) (<span class=\"constant\">LegacyPassManager</span>.<span class=\"symbol\">cpp:</span><span class=\"number\">1591</span>)\n</span>=<span class=\"ruby\">=<span class=\"number\">41194</span>==</span></code></pre>",
  "id": "5ab412d45f188ccc15e71440",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T20:32:20.321Z",
  "text": "@stuartarchibald , I just valgrind\u2019ed the opt build and here\u2019s what I got:\n```\n\nWriting 'cfg._ZN7cpython8__main__7foo$241Ex.dot'...==41194== Conditional jump or move depends on uninitialised value(s)\n==41194==    at 0x10177127C: llvm::Twine::printOneChild(llvm::raw_ostream&, llvm::Twine::Child, llvm::Twine::NodeKind) const (Twine.cpp:59)\n==41194==    by 0x10177126E: llvm::Twine::printOneChild(llvm::raw_ostream&, llvm::Twine::Child, llvm::Twine::NodeKind) const (Twine.cpp:164)\n==41194==    by 0x101770F1E: llvm::Twine::str() const (Twine.cpp:164)\n==41194==    by 0x100D0849B: llvm::DOTGraphTraits<llvm::Function const*>::getEdgeAttributes(llvm::BasicBlock const*, llvm::TerminatorInst::SuccIterator<llvm::TerminatorInst const*, llvm::BasicBlock const>, llvm::Function const*) (CFGPrinter.h:176)\n==41194==    by 0x100D07EA9: llvm::GraphWriter<llvm::Function const*>::writeEdge(llvm::BasicBlock const*, unsigned int, llvm::TerminatorInst::SuccIterator<llvm::TerminatorInst const*, llvm::BasicBlock const>) (GraphWriter.h:255)\n==41194==    by 0x100D07B14: llvm::GraphWriter<llvm::Function const*>::writeNode(llvm::BasicBlock const*) (GraphWriter.h:232)\n==41194==    by 0x100D07262: llvm::GraphWriter<llvm::Function const*>::writeGraph(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) (GraphWriter.h:158)\n==41194==    by 0x100D06B7E: writeCFGToDotFile(llvm::Function&) (GraphWriter.h:316)\n==41194==    by 0x100D086BB: (anonymous namespace)::CFGPrinterLegacyPass::runOnFunction(llvm::Function&) (CFGPrinter.cpp:107)\n==41194==    by 0x1012BE03C: llvm::FPPassManager::runOnFunction(llvm::Function&) (LegacyPassManager.cpp:1514)\n==41194==    by 0x1012BE2C2: llvm::FPPassManager::runOnModule(llvm::Module&) (LegacyPassManager.cpp:1535)\n==41194==    by 0x1012BE769: llvm::legacy::PassManagerImpl::run(llvm::Module&) (LegacyPassManager.cpp:1591)\n==41194==\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I believe it is the same <code>llvm::Twine::printOneChild</code> you saw in the segfault",
  "id": "5ab412e5e4ff28713a628482",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T20:32:37.632Z",
  "text": "I believe it is the same `llvm::Twine::printOneChild` you saw in the segfault",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I guess this isn&#39;t surprising if you are seeing corrupted strings.",
  "id": "5ab4191a458cbde55766004f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T20:59:06.254Z",
  "text": "I guess this isn't surprising if you are seeing corrupted strings.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Since Twine seems to be their fancy tree-based string representation",
  "id": "5ab4192b5f188ccc15e733d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T20:59:23.125Z",
  "text": "Since Twine seems to be their fancy tree-based string representation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> that looks alarmingly familiar <a href=\"https://github.com/numba/numba/issues/2437#issuecomment-356576139\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/2437#issuecomment-356576139</a>",
  "id": "5ab419d6bb1018b37a14df0b",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T21:02:14.267Z",
  "text": "@sklam that looks alarmingly familiar https://github.com/numba/numba/issues/2437#issuecomment-356576139",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/2437#issuecomment-356576139"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "weirdly valgrind didn\u2019t report anything without <code>-O2</code>",
  "id": "5ab41a29bb1018b37a14e0a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T21:03:37.443Z",
  "text": "weirdly valgrind didn\u2019t report anything without `-O2`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Given how much of LLVM is string manipulation, I would imagine any memory corruption is likely to smash a Twine object somewhere.",
  "id": "5ab41a53c3c5f8b90da24e5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T21:04:19.973Z",
  "text": "Given how much of LLVM is string manipulation, I would imagine any memory corruption is likely to smash a Twine object somewhere.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "but that\u2019s the only error I got, a &quot;Conditional jump or move depends on uninitialised value(s)&quot;",
  "id": "5ab41a7ec574b1aa3e20a558",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T21:05:02.127Z",
  "text": "but that\u2019s the only error I got, a \"Conditional jump or move depends on uninitialised value(s)\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "and that points to a switch statement",
  "id": "5ab41a8935dd17022e8d5cb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T21:05:13.579Z",
  "text": "and that points to a switch statement",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If you change the function so the graph is altered does it reproduce still ?",
  "id": "5ab41ce7f3f6d24c68a5e7e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-22T21:15:19.862Z",
  "text": "If you change the function so the graph is altered does it reproduce still ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Siu is going to base his LLVM/Twine patch on LLVM 6, so once the LLVM6 transition is ready, he can open a PR to add that patch.",
  "id": "5ab52f8fe3d0b1ff2c5db739",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-23T16:47:11.161Z",
  "text": "@stuartarchibald: Siu is going to base his LLVM/Twine patch on LLVM 6, so once the LLVM6 transition is ready, he can open a PR to add that patch.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, thanks, I <em>think</em> that it&#39;s almost ready",
  "id": "5ab52fbbe4ff28713a678210",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-23T16:47:55.337Z",
  "text": "ok, thanks, I *think* that it's almost ready",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "fun fact: Numba&#39;s CUDA support basically works on the Jetson TX2.  All the unit tests pass except for those related to pinned memory and IPC (neither supported on Tegra)",
  "id": "5ab58afc458cbde5576ca123",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-23T23:17:16.938Z",
  "text": "fun fact: Numba's CUDA support basically works on the Jetson TX2.  All the unit tests pass except for those related to pinned memory and IPC (neither supported on Tegra)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , is <span data-link-type=\"issue\" data-issue=\"2824\" class=\"issue\">#2824</span> ok now?",
  "id": "5ab8c499e4ff28713a74d61f",
  "issues": [
   {
    "number": "2824"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T09:59:53.473Z",
  "text": "Hi @stuartarchibald , is #2824 ok now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The LLVM 6 patches are still failing on some OSX",
  "id": "5ab8ffd4c574b1aa3e341bdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T14:12:36.054Z",
  "text": "The LLVM 6 patches are still failing on some OSX",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "All ahead of time/distutils related",
  "id": "5ab8fff07c3a01610d770864",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T14:13:04.565Z",
  "text": "All ahead of time/distutils related",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and LinkError, first warning about object file built for newer osx version that being linked, then <code>ld</code> complains of an illegal text relocation",
  "id": "5ab9004835dd17022ea0452e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T14:14:32.395Z",
  "text": "and LinkError, first warning about object file built for newer osx version that being linked, then `ld` complains of an illegal text relocation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "do we need to rebuild llvmdev/llvmlite raising the minimum OS X version to 10.10?",
  "id": "5ab9008dc574b1aa3e3420f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T14:15:41.330Z",
  "text": "do we need to rebuild llvmdev/llvmlite raising the minimum OS X version to 10.10?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that might possibly be the case",
  "id": "5ab900eac574b1aa3e34223e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T14:17:14.181Z",
  "text": "that might possibly be the case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m trying to figure out which combinations of tools are complaining ",
  "id": "5ab90104c574b1aa3e3422d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T14:17:40.013Z",
  "text": "I'm trying to figure out which combinations of tools are complaining ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "like is system clang the culprit",
  "id": "5ab90113e4ff28713a761740",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T14:17:55.727Z",
  "text": "like is system clang the culprit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "PR <span data-link-type=\"issue\" data-issue=\"2847\" class=\"issue\">#2847</span> which replaces array indices of parfors with unsigned indices is finally ready. I think vectorization will actually happen now more often than just blackscholes. Array access elimination of parfors is also improved.",
  "id": "5ab97216c4d0ae8007043365",
  "issues": [
   {
    "number": "2847"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T22:20:06.918Z",
  "text": "PR #2847 which replaces array indices of parfors with unsigned indices is finally ready. I think vectorization will actually happen now more often than just blackscholes. Array access elimination of parfors is also improved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "plus more refactoring, tests, etc.",
  "id": "5ab972285f188ccc15fccb02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-26T22:20:24.141Z",
  "text": "plus more refactoring, tests, etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Ping <span data-link-type=\"issue\" data-issue=\"2824\" class=\"issue\">#2824</span> please ",
  "id": "5abbccbd458cbde55786acf7",
  "issues": [
   {
    "number": "2824"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-28T17:11:25.114Z",
  "text": "Ping #2824 please ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> sorry for the delay, will try and get to it tomorrow. There are issues with LLVM6 that are consuming a lot of time at present! Thanks for your patience.",
  "id": "5abc0b2627c509a774b417b3",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-03-28T21:37:42.562Z",
  "text": "@njwhite sorry for the delay, will try and get to it tomorrow. There are issues with LLVM6 that are consuming a lot of time at present! Thanks for your patience.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> / <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> : based on the most recent merges, are we now fully on LLVM6?  (Once the build farm catches up...)",
  "id": "5ac283705f188ccc15227428",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T19:24:32.625Z",
  "text": "@stuartarchibald / @sklam : based on the most recent merges, are we now fully on LLVM6?  (Once the build farm catches up...)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes, i thk so",
  "id": "5ac2837f5f188ccc152274bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T19:24:47.352Z",
  "text": "yes, i thk so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and free of Twine crashes?  :)",
  "id": "5ac28388c574b1aa3e5ca761",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T19:24:56.172Z",
  "text": "and free of Twine crashes?  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "not yet",
  "id": "5ac2838ee3d0b1ff2c9418c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T19:25:02.694Z",
  "text": "not yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ah, wasn&#39;t sure if that was on another PR",
  "id": "5ac28399270d7d3708864c63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T19:25:13.277Z",
  "text": "ah, wasn't sure if that was on another PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It\u2019s good to establish a working baseline before I introduce that patch",
  "id": "5ac283af1130fe3d369489a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T19:25:35.762Z",
  "text": "It\u2019s good to establish a working baseline before I introduce that patch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "makes sense",
  "id": "5ac283b67c3a01610d9e5dd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T19:25:42.581Z",
  "text": "makes sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m just  giving all the PRs with failing builds a re-try, chances are some of them are LLVM 6 related.",
  "id": "5ac2abdabb1018b37a50db6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-02T22:16:58.672Z",
  "text": "I'm just  giving all the PRs with failing builds a re-try, chances are some of them are LLVM 6 related.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span>: thanks for rebasing <span data-link-type=\"issue\" data-issue=\"2865\" class=\"issue\">#2865</span>. I&#39;ll shove this through the build farm now. Once we have stable CUDA builds again we&#39;ll move on to <span data-link-type=\"issue\" data-issue=\"2824\" class=\"issue\">#2824</span>.",
  "id": "5ac3f56ac4d0ae8007315964",
  "issues": [
   {
    "number": "2865"
   },
   {
    "number": "2824"
   }
  ],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-03T21:43:06.625Z",
  "text": "@njwhite: thanks for rebasing #2865. I'll shove this through the build farm now. Once we have stable CUDA builds again we'll move on to #2824.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Can anyone think of anything else to go on a fairly basic &quot;performance tips&quot; page?",
  "id": "5ac3fb4dbb1018b37a56e12f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-03T22:08:13.964Z",
  "text": "Can anyone think of anything else to go on a fairly basic \"performance tips\" page?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I have, loops vs vectors and how numba isn&#39;t too bothered, use of fastmath, use of parallel, SVML, MKL for linalg",
  "id": "5ac3fb6dbb1018b37a56e17f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-03T22:08:45.135Z",
  "text": "I have, loops vs vectors and how numba isn't too bothered, use of fastmath, use of parallel, SVML, MKL for linalg",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I know things have been a bit busy with the LLVM upgrade, but will <span data-link-type=\"issue\" data-issue=\"2824\" class=\"issue\">#2824</span> still make it in?",
  "id": "5ac4d49f7c3a01610da8acf7",
  "issues": [
   {
    "number": "2824"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-04T13:35:27.847Z",
  "text": "@stuartarchibald I know things have been a bit busy with the LLVM upgrade, but will #2824 still make it in?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span>, will get back to you once the US gets into the office! :)",
  "id": "5ac4d7abe4ff28713aa8a315",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-04T13:48:27.634Z",
  "text": "@njwhite, will get back to you once the US gets into the office! :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "US in office",
  "id": "5ac4d800109bb04332890ae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-04T13:49:52.892Z",
  "text": "US in office",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I will look at <span data-link-type=\"issue\" data-issue=\"2824\" class=\"issue\">#2824</span>",
  "id": "5ac4d821109bb04332890b7b",
  "issues": [
   {
    "number": "2824"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-04T13:50:25.314Z",
  "text": "I will look at #2824",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, <span data-link-type=\"issue\" data-issue=\"2875\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2875</span> is blocking testing it at present.",
  "id": "5ac4d84e7c3a01610da8bf4f",
  "issues": [
   {
    "number": "2875",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-04T13:51:10.223Z",
  "text": "@sklam, https://github.com/numba/numba/issues/2875 is blocking testing it at present.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> <a href=\"https://groups.google.com/a/continuum.io/forum/#!topic/numba-users/XS73BFixAGE\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://groups.google.com/a/continuum.io/forum/#!topic/numba-users/XS73BFixAGE</a>",
  "id": "5ac4ec9e270d7d3708915599",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-04T15:17:50.640Z",
  "text": "@njwhite https://groups.google.com/a/continuum.io/forum/#!topic/numba-users/XS73BFixAGE",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/a/continuum.io/forum/#!topic/numba-users/XS73BFixAGE"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Yay!",
  "id": "5ac525db270d7d37089281b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-04T19:22:03.139Z",
  "text": "Yay!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m messing about with github issue templates, any thoughts on asking people to pick if they are either a) requesting a feature or b) reporting a bug, with all other questions to appear on gitter or the mailing list ?",
  "id": "5ac61f062b9dfdbc3a5b6e8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T13:05:10.456Z",
  "text": "I'm messing about with github issue templates, any thoughts on asking people to pick if they are either a) requesting a feature or b) reporting a bug, with all other questions to appear on gitter or the mailing list ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , yeah, i thk that\u2019s a good idea.",
  "id": "5ac6440992f5d6205798d61e",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T15:43:05.891Z",
  "text": "@stuartarchibald , yeah, i thk that\u2019s a good idea.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I can run down the list of PRs we marked as ready to merge and merge them",
  "id": "5ac654c4109bb043328fe6cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T16:54:28.498Z",
  "text": "I can run down the list of PRs we marked as ready to merge and merge them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Just to confirm, <span data-link-type=\"issue\" data-issue=\"2839\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2839</span> is good enough at this point?",
  "id": "5ac6558dc574b1aa3e6e2fad",
  "issues": [
   {
    "number": "2839",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T16:57:49.911Z",
  "text": "@stuartarchibald: Just to confirm, numba/numba#2839 is good enough at this point?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: BTW, can you file that Twine patch in the LLVM bug tracker?",
  "id": "5ac65658c574b1aa3e6e3438",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T17:01:12.368Z",
  "text": "@sklam: BTW, can you file that Twine patch in the LLVM bug tracker?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, just relooked, the np.transpose overload has axis as a stararg not a kwarg, so it probably needs addressing further",
  "id": "5ac678ee1130fe3d36a72d15",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T19:28:46.395Z",
  "text": "@seibert, just relooked, the np.transpose overload has axis as a stararg not a kwarg, so it probably needs addressing further",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I can probably fix up.",
  "id": "5ac6790c270d7d370898643b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T19:29:16.819Z",
  "text": "I can probably fix up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "LLVM bug filed: <a href=\"https://bugs.llvm.org/show_bug.cgi?id=37019\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://bugs.llvm.org/show_bug.cgi?id=37019</a>",
  "id": "5ac67dc47c3a01610db074f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-05T19:49:24.111Z",
  "text": "LLVM bug filed: https://bugs.llvm.org/show_bug.cgi?id=37019",
  "unread": false,
  "urls": [
   {
    "url": "https://bugs.llvm.org/show_bug.cgi?id=37019"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Assume a and b are both NumPy arrays.   If I have an expression a = a[b], is there a reliable way of detecting in Numba IR that LHS and RHS of this expression are the same?",
  "id": "5ac785497c3a01610db4ca5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T14:33:45.051Z",
  "text": "Assume a and b are both NumPy arrays.   If I have an expression a = a[b], is there a reliable way of detecting in Numba IR that LHS and RHS of this expression are the same?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-06T15:23:38.889Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span>, do you mean detecting an inplace operation or detecting that <code>LHS is RHS</code>?",
  "id": "5ac790f6109bb04332953d2d",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:23:34.652Z",
  "text": "@agayev, do you mean detecting an inplace operation or detecting that `LHS is RHS`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I think the latter.  What&#39;s an example of  an inplace operation?  like a += 5?",
  "id": "5ac79128080a385053042c14",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:24:24.390Z",
  "text": "@sklam I think the latter.  What's an example of  an inplace operation?  like a += 5?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes",
  "id": "5ac7912e270d7d37089ceafd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:24:30.683Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "or <code>a[:5] = a[5:]</code>",
  "id": "5ac7913f080a385053042ceb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:24:47.018Z",
  "text": "or `a[:5] = a[5:]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so in what category does a = a[b] fall?",
  "id": "5ac791526d7e07082bc701ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:25:06.701Z",
  "text": "so in what category does a = a[b] fall?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "so I want to detect the above and avoid extra alloc for lhs",
  "id": "5ac791826d7e07082bc70289",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:25:54.589Z",
  "text": "so I want to detect the above and avoid extra alloc for lhs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "if it is c = a[b], I may need to alloc c, whereas if it is a = a[b], I may just use a for storing the resultant permutation",
  "id": "5ac791bf6d7e07082bc7040a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:26:55.393Z",
  "text": "if it is c = a[b], I may need to alloc c, whereas if it is a = a[b], I may just use a for storing the resultant permutation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s hard.  you need to prove that <code>a</code>\u2019s lifetime ends at that statement",
  "id": "5ac792275f188ccc15393d55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-06T15:28:39.334Z",
  "text": "it\u2019s hard.  you need to prove that `a`\u2019s lifetime ends at that statement",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "and nothing has retained a reference to it.  ",
  "id": "5ac79245109bb04332954498",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-06T15:29:09.775Z",
  "text": "and nothing has retained a reference to it.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "maybe not too hard, given some of the work in the closure inlining ",
  "id": "5ac79260109bb043329544f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-06T15:29:36.480Z",
  "text": "maybe not too hard, given some of the work in the closure inlining ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "This is not killing a, just modifies it; so if something has a reference to it, it will still be semantically correct, I think.  No?",
  "id": "5ac792b627c509a774e48f60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-06T15:31:02.025Z",
  "text": "This is not killing a, just modifies it; so if something has a reference to it, it will still be semantically correct, I think.  No?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "in the original statement, <code>a[b]</code> gives a new array and binds it to the name <code>a</code>.  whoever retained a reference to <code>a</code> beforehand should still see the unmodified version.",
  "id": "5ac792ff080a3850530436cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-06T15:32:14.999Z",
  "text": "in the original statement, `a[b]` gives a new array and binds it to the name `a`.  whoever retained a reference to `a` beforehand should still see the unmodified version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so this transformation is legal iff no one has a reference to <code>a</code>, and all future use of <code>a</code> is derived from the <code>a=a[b]</code>",
  "id": "5ac7933827c509a774e491f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-06T15:33:12.616Z",
  "text": "so this transformation is legal iff no one has a reference to `a`, and all future use of `a` is derived from the `a=a[b]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p><code>a</code> is obj1<br><code>a[b]</code> yield obj2<br><code>a = a[b]</code> binds obj2 to name <code>a</code></p><p>in the transformed code,<br><code>a = a[b]</code> modifies obj1.  no obj2 created.</p>",
  "id": "5ac794115f188ccc153945e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:36:49.771Z",
  "text": "`a` is obj1\n`a[b]` yield obj2\n`a = a[b]` binds obj2 to name `a`\n\nin the transformed code,\n`a = a[b]` modifies obj1.  no obj2 created.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "Got it.  I think this is what you are referring to",
  "id": "5ac794505f188ccc153947db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:37:52.741Z",
  "text": "Got it.  I think this is what you are referring to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<blockquote>\n<blockquote>\n<blockquote>\np = np.random.permutation(10)<br>a = np.arange(10)<br>c = a<br>a<br>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])<br>c<br>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])<br>a = a[p]<br>a<br>array([2, 9, 7, 3, 6, 4, 0, 8, 5, 1])<br>c<br>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</blockquote>\n</blockquote>\n</blockquote>\n",
  "id": "5ac794567c3a01610db51919",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-06T15:37:58.181Z",
  "text": ">>> p = np.random.permutation(10)\n>>> a = np.arange(10)\n>>> c = a\n>>> a\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n>>> c\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n>>> a = a[p]\n>>> a\narray([2, 9, 7, 3, 6, 4, 0, 8, 5, 1])\n>>> c\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes",
  "id": "5ac794bb5f188ccc153949c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-06T15:39:39.694Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I see why we need to make sure that there are no references to a, but the statement a = a[b] kills a and the further references to it would be semantically correct to use the new definition.  So I don&#39;t quite see why we need to prove that a&#39;s lifetime ends at that statement.   Can you explain please?",
  "id": "5ac79d2192f5d620579ec689",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-06T16:15:29.262Z",
  "text": "@sklam I see why we need to make sure that there are no references to a, but the statement a = a[b] kills a and the further references to it would be semantically correct to use the new definition.  So I don't quite see why we need to prove that a's lifetime ends at that statement.   Can you explain please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "icc_rt packages uploaded to numba channel",
  "id": "5ac7d1cf5f188ccc153a8d65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-06T20:00:15.671Z",
  "text": "icc_rt packages uploaded to numba channel",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-06T21:26:34.589Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"agayev\" class=\"mention\">@agayev</span>, right, any future references to the name <code>a</code> is ok, but we need to prove the underlying object, <code>obj1</code> is my example, is not referenced elsewhere.  <pre><code><span class=\"title\">a</span> = some_array()\nb = some_array()\nc = [a]  <span class=\"comment\"># keep hold of array named `a` in the list</span>\na = a[b] <span class=\"comment\"># binds a new array to `a`</span>\nc[<span class=\"number\">0</span>] <span class=\"comment\"># still contains the original array for `a`</span></code></pre>",
  "id": "5ac7e60692f5d62057a0299d",
  "issues": [],
  "mentions": [
   {
    "screenName": "agayev",
    "userId": "59483581d73408ce4f6888f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-06T21:26:30.268Z",
  "text": "@agayev, right, any future references to the name `a` is ok, but we need to prove the underlying object, `obj1` is my example, is not referenced elsewhere.  \n\n```\na = some_array()\nb = some_array()\nc = [a]  # keep hold of array named `a` in the list\na = a[b] # binds a new array to `a`\nc[0] # still contains the original array for `a`\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "thus, you need to prove that <code>obj1</code> is semantically dead before you can reuse its memory.",
  "id": "5ac7e64cdf3e0fb547aea5e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-06T21:27:40.098Z",
  "text": "thus, you need to prove that `obj1` is semantically dead before you can reuse its memory.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/agayev",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/434474?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/434474?v=4&s=60",
   "displayName": "agayev",
   "gv": "4",
   "id": "59483581d73408ce4f6888f6",
   "url": "/agayev",
   "username": "agayev",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I see.  So I just need to make sure that obj1 is dead at a = a[b].",
  "id": "5ac7e82f109bb0433296e4e2",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-06T21:35:43.854Z",
  "text": "@sklam I see.  So I just need to make sure that obj1 is dead at a = a[b].",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes",
  "id": "5ac7e850270d7d37089e94aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-06T21:36:16.485Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> is everything going ok with the LLVM upgrade and <span data-link-type=\"issue\" data-issue=\"2865\" class=\"issue\">#2865</span>? Will <span data-link-type=\"issue\" data-issue=\"2824\" class=\"issue\">#2824</span> still make it in? Thanks -",
  "id": "5acb56937c3a01610dc2ab5c",
  "issues": [
   {
    "number": "2865"
   },
   {
    "number": "2824"
   }
  ],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-04-09T12:03:31.814Z",
  "text": "@seibert is everything going ok with the LLVM upgrade and #2865? Will #2824 still make it in? Thanks -",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span>, please could you merge master into <span data-link-type=\"issue\" data-issue=\"2824\" class=\"issue\">#2824</span> to resolve conflicts, I&#39;ll then push it through the build farm again, I think the build is stable again now",
  "id": "5acb93126d7e07082bd6611f",
  "issues": [
   {
    "number": "2824"
   }
  ],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-09T16:21:38.760Z",
  "text": "@njwhite, please could you merge master into #2824 to resolve conflicts, I'll then push it through the build farm again, I think the build is stable again now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks :)",
  "id": "5acb93185f188ccc15480c64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-09T16:21:44.476Z",
  "text": "thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Quick update for 0.38 RC, there are 6 PRs open, 4 of which are mine/contain patches I wrote somewhere in them so need review by someone else! The other two are from <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> and await some small fixes post review. I&#39;ll prepare draft release notes.",
  "id": "5acdd3027c3a01610dce5518",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T09:18:58.764Z",
  "text": "Quick update for 0.38 RC, there are 6 PRs open, 4 of which are mine/contain patches I wrote somewhere in them so need review by someone else! The other two are from @sklam and await some small fixes post review. I'll prepare draft release notes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> <span data-link-type=\"issue\" data-issue=\"2886\" class=\"issue\">#2886</span> is a small patch that fixes an issue in ParallelAccelerator. We might want to merge this one as well.",
  "id": "5acdfb9c1130fe3d36c6773a",
  "issues": [
   {
    "number": "2886"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T12:12:12.790Z",
  "text": "@stuartarchibald #2886 is a small patch that fixes an issue in ParallelAccelerator. We might want to merge this one as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>, thanks, seems reasonable :) I&#39;ve scheduled it for 0.38RC.",
  "id": "5acdfcb792f5d62057b888f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T12:16:55.914Z",
  "text": "@ehsantn, thanks, seems reasonable :) I've scheduled it for 0.38RC.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> RE: <span data-link-type=\"issue\" data-issue=\"2887\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2887</span>",
  "id": "5ace08567c3a01610dcf69ff",
  "issues": [
   {
    "number": "2887",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T13:06:30.497Z",
  "text": "@ehsantn RE: https://github.com/numba/numba/issues/2887",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "nonsense arrives at the call site",
  "id": "5ace0865080a3850531ea45c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T13:06:45.638Z",
  "text": "nonsense arrives at the call site",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>(gdb) b numba_xxnrm2\nFunction \"numba_xxnrm2\" not defined.\nMake breakpoint pending on future shared library <span class=\"operator\"><span class=\"keyword\">load</span>? (y <span class=\"keyword\">or</span> [n]) y\nBreakpoint <span class=\"number\">1</span> (numba_xxnrm2) pending.\n(gdb) r issue2887.py\n<span class=\"keyword\">Starting</span> program: &lt;path&gt;/<span class=\"keyword\">bin</span>/python issue2887.py\n[Thread debugging <span class=\"keyword\">using</span> libthread_db enabled]\n<span class=\"keyword\">Using</span> host libthread_db library <span class=\"string\">\"/lib64/libthread_db.so.1\"</span>.\nDetaching <span class=\"keyword\">after</span> fork <span class=\"keyword\">from</span> child process <span class=\"number\">21378.</span>\nMissing separate debuginfo <span class=\"keyword\">for</span> &lt;path&gt;/lib/python3.6/site-packages/numpy/../../../libiomp5.so\nDetaching <span class=\"keyword\">after</span> fork <span class=\"keyword\">from</span> child process <span class=\"number\">21380.</span>\nDetaching <span class=\"keyword\">after</span> fork <span class=\"keyword\">from</span> child process <span class=\"number\">21381.</span>\nDetaching <span class=\"keyword\">after</span> fork <span class=\"keyword\">from</span> child process <span class=\"number\">21382.</span>\n\nBreakpoint <span class=\"number\">1</span>, numba_xxnrm2 (kind=<span class=\"number\">100</span> <span class=\"string\">'d'</span>, n=<span class=\"number\">4</span>, x=<span class=\"number\">0x5555560fa1e0</span>, incx=<span class=\"number\">1</span>, result=<span class=\"number\">0x5555563447c0</span>) <span class=\"keyword\">at</span> numba/_lapack.c:<span class=\"number\">408</span>\n<span class=\"number\">408</span>     {\nMissing separate debuginfos, <span class=\"keyword\">use</span>: debuginfo-<span class=\"keyword\">install</span> libuuid-<span class=\"number\">2.23</span>.2-<span class=\"number\">43.</span>el7_4.2.x86_64\n(gdb) p ((<span class=\"keyword\">double</span>*)x)[<span class=\"number\">0</span>]@<span class=\"number\">4</span>\n$<span class=\"number\">1</span> = {-<span class=\"number\">9.8683099208633679e+148</span>, -<span class=\"number\">9.8683099208633679e+148</span>, -<span class=\"number\">9.8683099208633679e+148</span>, -<span class=\"number\">9.8683099208633679e+148</span>}\n(gdb) p ((<span class=\"keyword\">double</span>*)result)[<span class=\"number\">0</span>]@<span class=\"number\">1</span>\n$<span class=\"number\">2</span> = {-<span class=\"number\">1.363115719988382e+57</span>}</span></code></pre>",
  "id": "5ace0908080a3850531ea78d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T13:09:28.211Z",
  "text": "```\n(gdb) b numba_xxnrm2\nFunction \"numba_xxnrm2\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 1 (numba_xxnrm2) pending.\n(gdb) r issue2887.py\nStarting program: <path>/bin/python issue2887.py\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\nDetaching after fork from child process 21378.\nMissing separate debuginfo for <path>/lib/python3.6/site-packages/numpy/../../../libiomp5.so\nDetaching after fork from child process 21380.\nDetaching after fork from child process 21381.\nDetaching after fork from child process 21382.\n\nBreakpoint 1, numba_xxnrm2 (kind=100 'd', n=4, x=0x5555560fa1e0, incx=1, result=0x5555563447c0) at numba/_lapack.c:408\n408     {\nMissing separate debuginfos, use: debuginfo-install libuuid-2.23.2-43.el7_4.2.x86_64\n(gdb) p ((double*)x)[0]@4\n$1 = {-9.8683099208633679e+148, -9.8683099208633679e+148, -9.8683099208633679e+148, -9.8683099208633679e+148}\n(gdb) p ((double*)result)[0]@1\n$2 = {-1.363115719988382e+57}\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "without <code>parallel=True</code> that doesn&#39;t happen, one gets:<pre><code><span class=\"variable\">$1</span> = {<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>}\n<span class=\"variable\">$2</span> = {-<span class=\"number\">1.363115719988382</span>e+<span class=\"number\">57</span>}</code></pre>",
  "id": "5ace094f080a3850531ea8ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T13:10:39.219Z",
  "text": "without `parallel=True` that doesn't happen, one gets:\n```\n$1 = {1, 1, 1, 1}\n$2 = {-1.363115719988382e+57}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "i.e.  <code>a</code> went in ok",
  "id": "5ace095d270d7d3708b70fc2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T13:10:53.634Z",
  "text": "i.e.  `a` went in ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Also, if you set <code>ret=np.ones(1)</code>, then that arrives at the call site ok",
  "id": "5ace09a85f188ccc1553880c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T13:12:08.779Z",
  "text": "Also, if you set `ret=np.ones(1)`, then that arrives at the call site ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so that narrows it down to something to do with <code>a</code>",
  "id": "5ace09b427c509a774febd89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T13:12:20.946Z",
  "text": "so that narrows it down to something to do with `a`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "Yes, I see similar things",
  "id": "5ace301227c509a774ff90cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T15:56:02.795Z",
  "text": "Yes, I see similar things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I disabled everything except one copy propagation and remove dead",
  "id": "5ace3028df3e0fb547c7fc9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T15:56:24.233Z",
  "text": "I disabled everything except one copy propagation and remove dead",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "this happens when <code>a = $something</code> assignment is removed",
  "id": "5ace30475f188ccc15547e64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T15:56:55.944Z",
  "text": "this happens when `a = $something` assignment is removed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "and every <code>a</code> is replaced with <code>$something</code>",
  "id": "5ace305427c509a774ff91f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T15:57:08.495Z",
  "text": "and every `a` is replaced with `$something`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "how does <code>ret=np.ones(1)</code> matter though?",
  "id": "5ace307e6d7e07082be2ce38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T15:57:50.445Z",
  "text": "how does `ret=np.ones(1)` matter though?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "do assignments have any side effects?",
  "id": "5ace308e109bb04332b072b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T15:58:06.192Z",
  "text": "do assignments have any side effects?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the <code>ret=np.ones(1)</code> was to make sure there was some value in <code>ret</code>that was known so when in gdb it was clear that it arrived correctly",
  "id": "5ace3201109bb04332b07ae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:04:17.547Z",
  "text": "the `ret=np.ones(1)` was to make sure there was some value in `ret`that was known so when in gdb it was clear that it arrived correctly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "i.e. it&#39;s not <em>all</em> <code>.ctypes</code> that is problematic",
  "id": "5ace320d5f188ccc1554879d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:04:29.155Z",
  "text": "i.e. it's not *all* `.ctypes` that is problematic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it is just those that emanate from a parfors loop nest",
  "id": "5ace322127c509a774ff9b5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:04:49.550Z",
  "text": "it is just those that emanate from a parfors loop nest",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "ok, makes sense",
  "id": "5ace32de2b9dfdbc3a7d3d1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:07:58.214Z",
  "text": "ok, makes sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the IR also looks valid on inspection",
  "id": "5ace3513080a3850531f9696",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:17:23.758Z",
  "text": "the IR also looks valid on inspection",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(sequential lowering)",
  "id": "5ace3519df3e0fb547c81545",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:17:29.719Z",
  "text": "(sequential lowering)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which makes me wonder if either that&#39;s wrong, or if indeed there&#39;s some other issue upstream of it",
  "id": "5ace352e6d7e07082be2e7e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:17:50.289Z",
  "text": "which makes me wonder if either that's wrong, or if indeed there's some other issue upstream of it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the assembler also has what I&#39;d expect in it in terms of setting up:<pre><code>        movabsq <span class=\"number\">$4607182418800017408</span>, %<span class=\"literal\">rax</span>\n        <span class=\"keyword\">movq</span>    %<span class=\"literal\">rax</span>, (%<span class=\"literal\">rbx</span>)\n        <span class=\"keyword\">movq</span>    %<span class=\"literal\">rax</span>, <span class=\"number\">8</span>(%<span class=\"literal\">rbx</span>)\n        <span class=\"keyword\">movq</span>    %<span class=\"literal\">rax</span>, <span class=\"number\">16</span>(%<span class=\"literal\">rbx</span>)\n        <span class=\"keyword\">movq</span>    %<span class=\"literal\">rax</span>, <span class=\"number\">24</span>(%<span class=\"literal\">rbx</span>)\n        <span class=\"keyword\">movq</span>    %<span class=\"literal\">r13</span>, %<span class=\"literal\">rdi</span>\n        callq   *%<span class=\"literal\">rbp</span>\n        movabsq $numba_xxnrm2, %<span class=\"literal\">rax</span></code></pre>",
  "id": "5ace361d2b9dfdbc3a7d4ddb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:21:49.617Z",
  "text": "the assembler also has what I'd expect in it in terms of setting up:\n```\n        movabsq $4607182418800017408, %rax\n        movq    %rax, (%rbx)\n        movq    %rax, 8(%rbx)\n        movq    %rax, 16(%rbx)\n        movq    %rax, 24(%rbx)\n        movq    %r13, %rdi\n        callq   *%rbp\n        movabsq $numba_xxnrm2, %rax\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>In <span class=\"attr_selector\">[17]</span><span class=\"value\">: struct.<span class=\"function\">unpack</span>(<span class=\"string\">'&lt;d'</span>, struct.<span class=\"function\">pack</span>(<span class=\"string\">'L'</span>,<span class=\"number\">4607182418800017408</span>))\nOut[<span class=\"number\">17</span>]: (<span class=\"number\">1.0</span>,)</span></code></pre>",
  "id": "5ace362d27c509a774ffafe6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:22:05.040Z",
  "text": "```\nIn [17]: struct.unpack('<d', struct.pack('L',4607182418800017408))\nOut[17]: (1.0,)\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "looks like assign 1 to %rbx+(0:24:8) ",
  "id": "5ace36835f188ccc1554a108",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:23:31.367Z",
  "text": "looks like assign 1 to %rbx+(0:24:8) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh hang on, the asm looks wrong afterwards",
  "id": "5ace36f9109bb04332b09710",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:25:29.555Z",
  "text": "oh hang on, the asm looks wrong afterwards",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I  know what&#39;s going on",
  "id": "5ace36fe5f188ccc1554a379",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:25:34.176Z",
  "text": "I  know what's going on",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "you need a sink function ",
  "id": "5ace3704109bb04332b09741",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:25:40.310Z",
  "text": "you need a sink function ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>import numba\nimport numpy as np\nnumba<span class=\"class\">.parfor</span><span class=\"class\">.sequential_parfor_lowering</span> = True\nfrom numba import types\nfrom numba<span class=\"class\">.targets</span><span class=\"class\">.linalg</span> import _BLAS\n\nxxnrm2 = _BLAS().<span class=\"function\"><span class=\"title\">numba_xxnrm2</span><span class=\"params\">(types.float64)</span></span>\n\n@numba<span class=\"class\">.njit</span>\ndef <span class=\"function\"><span class=\"title\">sink</span><span class=\"params\">(*args)</span></span>:\n    pass\n\n@numba.<span class=\"function\"><span class=\"title\">njit</span><span class=\"params\">(parallel=True)</span></span>\ndef <span class=\"function\"><span class=\"title\">f</span><span class=\"params\">()</span></span>:\n    ret = np.<span class=\"function\"><span class=\"title\">zeros</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>\n    <span class=\"tag\">a</span> = np.<span class=\"function\"><span class=\"title\">ones</span><span class=\"params\">(<span class=\"number\">4</span>)</span></span>\n    <span class=\"function\"><span class=\"title\">xxnrm2</span><span class=\"params\">(<span class=\"number\">100</span>, <span class=\"number\">4</span>, a.ctypes, <span class=\"number\">1</span>, ret.ctypes)</span></span>\n    <span class=\"function\"><span class=\"title\">sink</span><span class=\"params\">(a)</span></span>\n    return ret[<span class=\"number\">0</span>]\n\n<span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(np.linalg.norm(np.ones(<span class=\"number\">4</span>)</span></span>), <span class=\"function\"><span class=\"title\">f</span><span class=\"params\">()</span></span>)</code></pre>",
  "id": "5ace37186d7e07082be2f348",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:26:00.535Z",
  "text": "```\nimport numba\nimport numpy as np\nnumba.parfor.sequential_parfor_lowering = True\nfrom numba import types\nfrom numba.targets.linalg import _BLAS\n\nxxnrm2 = _BLAS().numba_xxnrm2(types.float64)\n\n@numba.njit\ndef sink(*args):\n    pass\n\n@numba.njit(parallel=True)\ndef f():\n    ret = np.zeros(1)\n    a = np.ones(4)\n    xxnrm2(100, 4, a.ctypes, 1, ret.ctypes)\n    sink(a)\n    return ret[0]\n\nprint(np.linalg.norm(np.ones(4)), f())\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> ^",
  "id": "5ace37d0109bb04332b09cb7",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:29:04.097Z",
  "text": "@ehsantn ^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "or is that just forcing parfors not to work ?",
  "id": "5ace3888270d7d3708b8284d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:32:08.512Z",
  "text": "or is that just forcing parfors not to work ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "why do you need a sink function?",
  "id": "5ace38a97c3a01610dd07e3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:32:41.747Z",
  "text": "why do you need a sink function?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I was thinking that the call site looked weird, and there needed to be something to keep &#39;a&#39; alive outside",
  "id": "5ace38ab5f188ccc1554ac38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:32:43.793Z",
  "text": "I was thinking that the call site looked weird, and there needed to be something to keep 'a' alive outside",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "a is alive afterwards",
  "id": "5ace38bc92f5d62057b9dcd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:33:00.284Z",
  "text": "a is alive afterwards",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "or <code>$a...</code> is alive",
  "id": "5ace38cadf3e0fb547c82a12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:33:14.425Z",
  "text": "or `$a...` is alive",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "in the Numba IR",
  "id": "5ace38ce109bb04332b0a0e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:33:18.069Z",
  "text": "in the Numba IR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, in the impl in <code>targets/linalg.py</code> I&#39;m sure we had to put in sinks ",
  "id": "5ace38e37c3a01610dd07ef6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:33:39.657Z",
  "text": "hmmm, in the impl in `targets/linalg.py` I'm sure we had to put in sinks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "does LLVM do anything weird that removes it?",
  "id": "5ace38e4080a3850531faa67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:33:40.049Z",
  "text": "does LLVM do anything weird that removes it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "that was for liveness",
  "id": "5ace392b5f188ccc1554af15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-11T16:34:51.112Z",
  "text": "that was for liveness",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "but the variable is live at the call site",
  "id": "5ace393427c509a774ffbfbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-11T16:35:00.319Z",
  "text": "but the variable is live at the call site",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah ok, perhaps its not that then, however adding that does seem to fix it",
  "id": "5ace397c5f188ccc1554b028",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-11T16:36:12.733Z",
  "text": "ah ok, perhaps its not that then, however adding that does seem to fix it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "doesn&#39;t make sense",
  "id": "5ace39d3080a3850531fb07a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-11T16:37:39.046Z",
  "text": "doesn't make sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "we have to figure out why",
  "id": "5ace39d36bbe1d2739d6e9f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:37:39.552Z",
  "text": "we have to figure out why",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh I agree it makes no sense, its just the IR looks the same",
  "id": "5ace3a566bbe1d2739d6edde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:39:50.611Z",
  "text": "oh I agree it makes no sense, its just the IR looks the same",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so I&#39;m looking for weirder things",
  "id": "5ace3a5d6d7e07082be302b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:39:57.102Z",
  "text": "so I'm looking for weirder things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "ok",
  "id": "5ace3a652b9dfdbc3a7d6398",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:40:05.906Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "things like refcounts maybe?",
  "id": "5ace3a6c92f5d62057b9e501",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:40:12.343Z",
  "text": "things like refcounts maybe?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s what made me think it was a sink() like issue",
  "id": "5ace3ad092f5d62057b9e757",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:41:52.575Z",
  "text": "that's what made me think it was a sink() like issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the asm looked strange around the call",
  "id": "5ace3ade6bbe1d2739d6f00b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-11T16:42:06.477Z",
  "text": "the asm looked strange around the call",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "ok",
  "id": "5ace3aeb5f188ccc1554b770",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-11T16:42:19.518Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> is now working his way through PR reviews on your remaining open PRs",
  "id": "5acf7b5b1130fe3d36cdc39d",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-12T15:29:31.561Z",
  "text": "@stuartarchibald: @sklam is now working his way through PR reviews on your remaining open PRs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>",
  "id": "5acf7c676d7e07082be8e050",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:33:59.745Z",
  "text": "thanks @seibert @sklam",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<a href=\"https://github.com/numba/numba/issues/2884#issuecomment-380180727\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/2884#issuecomment-380180727</a> makes me wonder if there is a SIMD-friendly sort we could be using...",
  "id": "5acf80107c3a01610dd642b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:49:36.220Z",
  "text": "https://github.com/numba/numba/issues/2884#issuecomment-380180727 makes me wonder if there is a SIMD-friendly sort we could be using...",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/2884#issuecomment-380180727"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-04-12T15:51:20.620Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "erm.. we have <code>set</code> supported. should try that first",
  "id": "5acf80725d7286b43a20d04d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-12T15:51:14.704Z",
  "text": "erm.. we have `set` supported. should try that first",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "oh, I meant generally",
  "id": "5acf80df080a38505325a314",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-12T15:53:03.359Z",
  "text": "oh, I meant generally",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "not just for np.unique",
  "id": "5acf80e86d7e07082be8f94c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-12T15:53:12.865Z",
  "text": "not just for np.unique",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-12T15:55:01.951Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "ok, I have wanted to try giving LLVM a sorting network and see what it can do to SIMD it",
  "id": "5acf81482b9dfdbc3a833eea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-12T15:54:48.469Z",
  "text": "ok, I have wanted to try giving LLVM a sorting network and see what it can do to SIMD it",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "interesting. np.unique is faster if the array is already sorted",
  "id": "5acf816a27c509a774059d3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-12T15:55:22.954Z",
  "text": "interesting. np.unique is faster if the array is already sorted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "time to go read the source code :)",
  "id": "5acf8174df3e0fb547ce1cdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:55:32.756Z",
  "text": "time to go read the source code :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, is it doing partial sort",
  "id": "5acf81835f188ccc155aa10f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:55:47.704Z",
  "text": "oh, is it doing partial sort",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "4.4x faster in my test, to be exact",
  "id": "5acf8194df3e0fb547ce1dab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:56:04.685Z",
  "text": "4.4x faster in my test, to be exact",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "hmm, looking at the code, it seems to just be calling numpy.sort",
  "id": "5acf820a270d7d3708bdfe1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:58:02.858Z",
  "text": "hmm, looking at the code, it seems to just be calling numpy.sort",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s doing sort",
  "id": "5acf820b5f188ccc155aa387",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:58:03.621Z",
  "text": "it\u2019s doing sort",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "quicksort",
  "id": "5acf820f080a38505325a887",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T15:58:07.751Z",
  "text": "quicksort",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Numba RC checklist is here: <span data-link-type=\"issue\" data-issue=\"2892\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2892</span>",
  "id": "5acf8e9b2b9dfdbc3a838783",
  "issues": [
   {
    "number": "2892",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T16:51:39.053Z",
  "text": "Numba RC checklist is here: https://github.com/numba/numba/issues/2892",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, kicked off the icc_rt package build",
  "id": "5acf97bc080a38505326134d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-12T17:30:36.642Z",
  "text": "ok, kicked off the icc_rt package build",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: In light of <a href=\"https://github.com/numba/numba/issues/2451#issuecomment-382115604\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/2451#issuecomment-382115604</a> , can you amend the revision notes to say that PPC64LE support will require the future LLVM 6.0.1 release?",
  "id": "5adde8d1270d7d3708f82f3c",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T14:08:17.619Z",
  "text": "@stuartarchibald: In light of https://github.com/numba/numba/issues/2451#issuecomment-382115604 , can you amend the revision notes to say that PPC64LE support will require the future LLVM 6.0.1 release?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/2451#issuecomment-382115604"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "sure.",
  "id": "5adde94315c9b0311427c58b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T14:10:11.261Z",
  "text": "sure.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "we probably ought to make sure all the optional packages are installed too and that it works with them",
  "id": "5adde96a5d7286b43a5b28f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T14:10:50.527Z",
  "text": "we probably ought to make sure all the optional packages are installed too and that it works with them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Any other blockers for tagging the final release pop up last week?",
  "id": "5addecaa270d7d3708f843e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T14:24:42.169Z",
  "text": "Any other blockers for tagging the final release pop up last week?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "There&#39;s a threadsafety problem <span data-link-type=\"issue\" data-issue=\"2901\" class=\"issue\">#2901</span> that I&#39;m fairly sure is similar to one we know about (not a new issue for 0.38), need to spend some time on lock design for 0.39. I&#39;ve also just done <span data-link-type=\"issue\" data-issue=\"2908\" class=\"issue\">#2908</span> as there was placeholder in the docs that didn&#39;t get replaced, that ought to go in! It might be worth fixing <span data-link-type=\"issue\" data-issue=\"2903\" class=\"issue\">#2903</span> if it&#39;s easy?",
  "id": "5addf2095f188ccc159518d6",
  "issues": [
   {
    "number": "2901"
   },
   {
    "number": "2908"
   },
   {
    "number": "2903"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T14:47:37.871Z",
  "text": "There's a threadsafety problem #2901 that I'm fairly sure is similar to one we know about (not a new issue for 0.38), need to spend some time on lock design for 0.39. I've also just done #2908 as there was placeholder in the docs that didn't get replaced, that ought to go in! It might be worth fixing #2903 if it's easy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Nothing on the mailing list or as a new issue that I can see otherwise.",
  "id": "5addf26d2d0e228d7ba25474",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T14:49:17.205Z",
  "text": "Nothing on the mailing list or as a new issue that I can see otherwise.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "This also probably needs moving <a href=\"https://github.com/numba/numba/blob/master/setup.py#L210\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/setup.py#L210</a> to the llvmlite release",
  "id": "5addf308109bb04332f09f0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T14:51:52.218Z",
  "text": "This also probably needs moving https://github.com/numba/numba/blob/master/setup.py#L210 to the llvmlite release",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/setup.py#L210"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yeah, all that makes sense.",
  "id": "5ade13786d7e07082b25b9e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-23T17:10:16.938Z",
  "text": "Yeah, all that makes sense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think has hotfixes before the release, we need <span data-link-type=\"issue\" data-issue=\"2911\" class=\"issue\">#2911</span>, <span data-link-type=\"issue\" data-issue=\"2912\" class=\"issue\">#2912</span> and <span data-link-type=\"issue\" data-issue=\"2914\" class=\"issue\">#2914</span> to all go in. The first two are critical, one bumps llvmlite version, the other fixes a testing bug in random.permutation.",
  "id": "5adf31ea1130fe3d360f4c22",
  "issues": [
   {
    "number": "2911"
   },
   {
    "number": "2912"
   },
   {
    "number": "2914"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-24T13:32:26.494Z",
  "text": "I think has hotfixes before the release, we need #2911, #2912 and #2914 to all go in. The first two are critical, one bumps llvmlite version, the other fixes a testing bug in random.permutation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "There&#39;s also a performance regression in object mode since the addition of the enhanced errors patch, I <em>think</em> it is because there&#39;s simply more to do now, but  it might require more investigation.",
  "id": "5adf32632b9dfdbc3ac381f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-24T13:34:27.014Z",
  "text": "There's also a performance regression in object mode since the addition of the enhanced errors patch, I *think* it is because there's simply more to do now, but  it might require more investigation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The bottom of <span data-link-type=\"issue\" data-issue=\"2368\" class=\"issue\">#2368</span> has some info.",
  "id": "5adf32907c3a01610d1653f3",
  "issues": [
   {
    "number": "2368"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-24T13:35:12.455Z",
  "text": "The bottom of #2368 has some info.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, all three are merged now",
  "id": "5adf34d6270d7d3708fe7a0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-24T13:44:54.559Z",
  "text": "ok, all three are merged now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks, also need to bump the change log again ",
  "id": "5adf34ea2b9dfdbc3ac39141",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-04-24T13:45:14.476Z",
  "text": "thanks, also need to bump the change log again ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that we&#39;re now done ?",
  "id": "5adf34f327c509a77446988f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-24T13:45:23.250Z",
  "text": "I think that we're now done ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2915\" class=\"issue\">#2915</span> bumps the change log",
  "id": "5adf3766270d7d3708fe9013",
  "issues": [
   {
    "number": "2915"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-24T13:55:50.143Z",
  "text": "#2915 bumps the change log",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I just uploaded the llvmlite sdist so that people trying to pip install numba don&#39;t get dependency failures",
  "id": "5adfe9cc270d7d3708021f5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-25T02:37:00.100Z",
  "text": "I just uploaded the llvmlite sdist so that people trying to pip install numba don't get dependency failures",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "however, I suspect they will next complain about the lack of llvmlite wheels, so I think the lesson learned (contrary to what I told Siu to do this afternoon) is that we should not upload the sdist unless the wheels are also ready.",
  "id": "5adfe9f45f188ccc159ec065",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-25T02:37:40.128Z",
  "text": "however, I suspect they will next complain about the lack of llvmlite wheels, so I think the lesson learned (contrary to what I told Siu to do this afternoon) is that we should not upload the sdist unless the wheels are also ready.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "there&#39;s a ping on llvmlite:<span data-link-type=\"issue\" data-issue=\"328\" class=\"issue\">#328</span>",
  "id": "5ae054447c3a01610d1bc478",
  "issues": [
   {
    "number": "328"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-25T10:11:16.290Z",
  "text": "there's a ping on llvmlite:#328",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"328\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#328</span>",
  "id": "5ae05454b01085166cbbf498",
  "issues": [
   {
    "number": "328",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-25T10:11:32.809Z",
  "text": "https://github.com/numba/llvmlite/pull/328",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I don&#39;t see any huge problem with this. <code>mgorny</code> is a gentoo dev so large scale package building is probably the motivation for the change. Whilst using parallel make and distcc has no real benefit locally, I imagine if you have a lot of things to build it is a necessity.",
  "id": "5ae054e262316e0505fa1636",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-25T10:13:54.062Z",
  "text": "I don't see any huge problem with this. `mgorny` is a gentoo dev so large scale package building is probably the motivation for the change. Whilst using parallel make and distcc has no real benefit locally, I imagine if you have a lot of things to build it is a necessity.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "alright 0.38.0 announced on list and tweeted",
  "id": "5ae0b31b27c509a7744e297e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-25T16:55:55.936Z",
  "text": "alright 0.38.0 announced on list and tweeted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "on to 0.39 :)",
  "id": "5ae0b32a2b9dfdbc3acb2274",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-25T16:56:10.264Z",
  "text": "on to 0.39 :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Rik-de-Kort",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/32839123?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/32839123?v=4&s=60",
   "displayName": "Rik-de-Kort",
   "gv": "4",
   "id": "5a0ea31cd73408ce4f7f000d",
   "url": "/Rik-de-Kort",
   "username": "Rik-de-Kort",
   "v": 4
  },
  "html": "Hurrah!",
  "id": "5ae1deb25d7286b43a6e5c24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-26T14:14:10.157Z",
  "text": "Hurrah!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> / <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Any chance this PEP coming in Python 3.7 will impact the disk cache?  <a href=\"https://www.python.org/dev/peps/pep-0552/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.python.org/dev/peps/pep-0552/</a>",
  "id": "5ae7347a62316e05051618b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-30T15:21:30.139Z",
  "text": "@stuartarchibald / @sklam: Any chance this PEP coming in Python 3.7 will impact the disk cache?  https://www.python.org/dev/peps/pep-0552/",
  "unread": false,
  "urls": [
   {
    "url": "https://www.python.org/dev/peps/pep-0552/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I wonder if we could support the new <code>breakpoint()</code> function as a way to break if gdb is running.  <a href=\"https://www.python.org/dev/peps/pep-0553/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.python.org/dev/peps/pep-0553/</a>",
  "id": "5ae7352462316e0505161f98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-30T15:24:20.600Z",
  "text": "I wonder if we could support the new `breakpoint()` function as a way to break if gdb is running.  https://www.python.org/dev/peps/pep-0553/",
  "unread": false,
  "urls": [
   {
    "url": "https://www.python.org/dev/peps/pep-0553/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the caching calls stat(1) on the source file for the purposes of timestamps",
  "id": "5ae737361130fe3d3631d41e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-30T15:33:10.190Z",
  "text": "I think the caching calls stat(1) on the source file for the purposes of timestamps",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "right, I don\u2019t think we rely on anything specific in the bytecode spec",
  "id": "5ae7535862316e050516be18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-04-30T17:33:12.476Z",
  "text": "right, I don\u2019t think we rely on anything specific in the bytecode spec",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Hi - I just changed <span data-link-type=\"issue\" data-issue=\"2929\" class=\"issue\">#2929</span> to a not-[WIP]",
  "id": "5ae814e7727e915b1043c422",
  "issues": [
   {
    "number": "2929"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-01T07:19:03.233Z",
  "text": "Hi - I just changed #2929 to a not-[WIP]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Not sure if you get notified!",
  "id": "5ae814f5dea1b95c10f27d67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-01T07:19:17.041Z",
  "text": "Not sure if you get notified!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I guess I should move to this channel now that I am talking about Numba dev",
  "id": "5ae8f8416d98e53e044534c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-01T23:29:05.348Z",
  "text": "I guess I should move to this channel now that I am talking about Numba dev",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I was digging through the python code looking at the Bytes type and the Type class",
  "id": "5ae908ba97e5506e048d6d71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T00:39:22.934Z",
  "text": "I was digging through the python code looking at the Bytes type and the Type class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am not sure I understand how python objects are maintained in the interpreter while they are passed into a nopython function",
  "id": "5ae9095597e5506e048d70f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T00:41:57.482Z",
  "text": "I am not sure I understand how python objects are maintained in the interpreter while they are passed into a nopython function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-02T00:44:47.208Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I see the unbox() decorator but it doesn&#39;t clarify this",
  "id": "5ae909f61eddba3d04c5e815",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T00:44:38.740Z",
  "text": "I see the unbox() decorator but it doesn't clarify this",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "how and where is reference counting maintained?",
  "id": "5ae90a655cf0b830044c1241",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T00:46:29.601Z",
  "text": "how and where is reference counting maintained?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I think I found it, the docs refer to NPM, is that &#39;no python mode&#39;?",
  "id": "5ae9312940f24c430446ba34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T03:31:53.496Z",
  "text": "I think I found it, the docs refer to NPM, is that 'no python mode'?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span> , everything you need to know is in <a href=\"http://numba.pydata.org/numba-doc/latest/extending/interval-example.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/latest/extending/interval-example.html</a>.  But i still don\u2019t think you need the ctypes.Structure support if <a href=\"https://github.com/innovate-invent/bampy/blob/master/bampy/bgzf/zlib.py#L94-L127\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">zState</a> is all you needed.  I would have treated the zState as an opaque pointer and write small accessor functions in C.",
  "id": "5ae9ea6a0a9c956f041e9c56",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T16:42:18.252Z",
  "text": "@innovate-invent , everything you need to know is in http://numba.pydata.org/numba-doc/latest/extending/interval-example.html.  But i still don\u2019t think you need the ctypes.Structure support if [zState](https://github.com/innovate-invent/bampy/blob/master/bampy/bgzf/zlib.py#L94-L127) is all you needed.  I would have treated the zState as an opaque pointer and write small accessor functions in C.",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/latest/extending/interval-example.html"
   },
   {
    "url": "https://github.com/innovate-invent/bampy/blob/master/bampy/bgzf/zlib.py#L94-L127"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Yea, I read through that. I am working out the details, it isn&#39;t clear how everything works yet.",
  "id": "5aea137b59a05780049d1f72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T19:37:31.888Z",
  "text": "Yea, I read through that. I am working out the details, it isn't clear how everything works yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Nearly every class in my library uses a Structure in some capacity. I need general support for it.",
  "id": "5aea13bcb37eab7d04615519",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-02T19:38:36.299Z",
  "text": "Nearly every class in my library uses a Structure in some capacity. I need general support for it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "StructModel is described as immutable, does that refer to the data or the fields?",
  "id": "5aea996c6d98e53e044ab159",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-03T05:09:00.521Z",
  "text": "StructModel is described as immutable, does that refer to the data or the fields?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am getting lost in the abstraction trying to read its code, does the struct model represent tightly packed data? or does it simply provide a struct like interface?",
  "id": "5aea9a65e2d30c2f045e48b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-03T05:13:09.550Z",
  "text": "I am getting lost in the abstraction trying to read its code, does the struct model represent tightly packed data? or does it simply provide a struct like interface?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It\u2019s just a providing a structure like interface and it lowers to C-compatible layout, but it is not a C-struct, which has many more semantic.",
  "id": "5aeb7ff303cafa797b2541cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-03T21:32:35.742Z",
  "text": "It\u2019s just a providing a structure like interface and it lowers to C-compatible layout, but it is not a C-struct, which has many more semantic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "As for immutability, I think you saw the comment about LLVM value being immutable.  ",
  "id": "5aeb80195cf0b8300454ade1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-03T21:33:13.618Z",
  "text": "As for immutability, I think you saw the comment about LLVM value being immutable.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Implementing ctypes.Structure is a very difficult task that requires surgery into the compiler.  It is also just the beginning of the things that numba lacks.  You will soon find out you need almost all of ctypes API supported.  ",
  "id": "5aeb81326f9af87e043ef71e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-03T21:37:54.407Z",
  "text": "Implementing ctypes.Structure is a very difficult task that requires surgery into the compiler.  It is also just the beginning of the things that numba lacks.  You will soon find out you need almost all of ctypes API supported.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The numba ctypes support is just meant for calling simple C-functions with scalars and pointers args.",
  "id": "5aeb8188b37eab7d04664e47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-03T21:39:20.690Z",
  "text": "The numba ctypes support is just meant for calling simple C-functions with scalars and pointers args.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I have been trying to figure out what &quot;FE&quot; is short for. It appears everywhere in the code, as in &quot;FE type&quot;",
  "id": "5aeba906da323a7c04f5eaeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T00:27:50.224Z",
  "text": "I have been trying to figure out what \"FE\" is short for. It appears everywhere in the code, as in \"FE type\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "implementing the ctypes library will be trivial once I get my head around the code abstraction",
  "id": "5aeba9c100dc48880492eeb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T00:30:57.587Z",
  "text": "implementing the ctypes library will be trivial once I get my head around the code abstraction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "there isn&#39;t much to it",
  "id": "5aeba9cb6d98e53e044e85de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T00:31:07.988Z",
  "text": "there isn't much to it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ok, so I think I have an idea of whats going on. Please correct me if I am wrong. The bytecode gets converted to a graph composed of python objects called the Numba IR. Numba datatypes are mapped to a DataModel which maps to a llvmlite IR type. I am assuming the llvm compiler then takes over and generates the appropriate machine code based on those types.",
  "id": "5aebbc5e1eddba3d04cf17f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T01:50:22.427Z",
  "text": "ok, so I think I have an idea of whats going on. Please correct me if I am wrong. The bytecode gets converted to a graph composed of python objects called the Numba IR. Numba datatypes are mapped to a DataModel which maps to a llvmlite IR type. I am assuming the llvm compiler then takes over and generates the appropriate machine code based on those types.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "so I need to extend the StructModel to pass packed=True to the LiteralStructType constructor",
  "id": "5aebbdfb1eddba3d04cf1c3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T01:57:15.457Z",
  "text": "so I need to extend the StructModel to pass packed=True to the LiteralStructType constructor",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "along with providing llvmlite friendly implementations of all its ctypes functions",
  "id": "5aebbe87db299d4004cd729d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T01:59:35.801Z",
  "text": "along with providing llvmlite friendly implementations of all its ctypes functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am not clear on the difference between the value type and the data type of a DataModel. Looking at the BooleanModel it is a 1 bit sized type vs 8 bit sized type. Does that mean the value type is the intended size where the data type is the minimum size that will be allocated?",
  "id": "5aebc2696d98e53e044ebf8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T02:16:09.393Z",
  "text": "I am not clear on the difference between the value type and the data type of a DataModel. Looking at the BooleanModel it is a 1 bit sized type vs 8 bit sized type. Does that mean the value type is the intended size where the data type is the minimum size that will be allocated?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "can anyone explain this: <a href=\"http://numba.pydata.org/numba-doc/dev/extending/interval-example.html#exposing-data-model-attributes\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/dev/extending/interval-example.html#exposing-data-model-attributes</a>. Why wouldn&#39;t member access of a struct type not be represented by a <a href=\"http://llvmlite.pydata.org/en/latest/glossary.html#getelementptr\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">GEPInstr</a> node.",
  "id": "5aebd38eb37eab7d04672d39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T03:29:18.055Z",
  "text": "can anyone explain this: http://numba.pydata.org/numba-doc/dev/extending/interval-example.html#exposing-data-model-attributes. Why wouldn't member access of a struct type not be represented by a [GEPInstr](http://llvmlite.pydata.org/en/latest/glossary.html#getelementptr) node.",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/dev/extending/interval-example.html#exposing-data-model-attributes"
   },
   {
    "url": "http://llvmlite.pydata.org/en/latest/glossary.html#getelementptr"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "hold on, cgutils.py has a fully fleshed out Structure datatype",
  "id": "5aebd67300dc488804935bbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T03:41:39.220Z",
  "text": "hold on, cgutils.py has a fully fleshed out Structure datatype",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "this is almost a 1:1 to a ctypes Structure",
  "id": "5aebd80b00dc488804935f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T03:48:27.848Z",
  "text": "this is almost a 1:1 to a ctypes Structure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Is there a reason I can&#39;t use this?",
  "id": "5aebd820b982f08504f12363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-04T03:48:48.638Z",
  "text": "Is there a reason I can't use this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "\u201cFE&quot; is FrontEnd.  FE type is the type seen in the language level.  The datamodel is the \u201cbackend\u201d type as it defines how the FE type is layout in memory.",
  "id": "5aec7a0c6f9af87e044219d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-04T15:19:40.100Z",
  "text": "\u201cFE\" is FrontEnd.  FE type is the type seen in the language level.  The datamodel is the \u201cbackend\u201d type as it defines how the FE type is layout in memory.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "For \u201cvalue\u201d vs \u201cdata\u201d, see <a href=\"https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L12-L32\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L12-L32</a>",
  "id": "5aec7a4240f24c430451ebb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-04T15:20:34.741Z",
  "text": "For \u201cvalue\u201d vs \u201cdata\u201d, see https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L12-L32",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L12-L32"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The cgutils is holding helper functions for code-generation.  The Structure in there is like ctypes.Structure by design.  But the cgutils.Structure emits LLVM instructions.  So, it is like a metaprogramming version of ctypes.Structure.",
  "id": "5aec7aa55cf0b8300457d37c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-04T15:22:13.638Z",
  "text": "The cgutils is holding helper functions for code-generation.  The Structure in there is like ctypes.Structure by design.  But the cgutils.Structure emits LLVM instructions.  So, it is like a metaprogramming version of ctypes.Structure.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The reason the example can use GEPInstr.  It can use the llvmlite.IRBuilder directly.  The <code>create_struct_proxy</code> is just an abstraction to make the long codegeneration code more readable.",
  "id": "5aec7b246f9af87e04421eab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-04T15:24:20.175Z",
  "text": "The reason the example can use GEPInstr.  It can use the llvmlite.IRBuilder directly.  The `create_struct_proxy` is just an abstraction to make the long codegeneration code more readable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "LLVM 6.0.1-rc1 has been tagged.",
  "id": "5af03ca26f9af87e044b7667",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-07T11:46:42.268Z",
  "text": "LLVM 6.0.1-rc1 has been tagged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Python 3.7 seems to add just 2 new opcodes",
  "id": "5af04cfcb37eab7d04733ff9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-07T12:56:28.400Z",
  "text": "Python 3.7 seems to add just 2 new opcodes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>$ git diff remotes/origin/<span class=\"number\">3.6</span>..remotes/origin/<span class=\"number\">3.7</span> Include/opcode.h\ndiff --git a/Include/opcode.h b/Include/opcode.h\nindex be360e1..fc6cbf3 <span class=\"number\">100644</span>\n--- a/Include/opcode.h\n+++ b/Include/opcode.h\n@@ -<span class=\"number\">99</span>,<span class=\"number\">7</span> +<span class=\"number\">99</span>,<span class=\"number\">6</span> @@ <span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span> {\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> LOAD_FAST               124</span>\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> STORE_FAST              125</span>\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> DELETE_FAST             126</span>\n-<span class=\"preprocessor\">#<span class=\"keyword\">define</span> STORE_ANNOTATION        127</span>\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> RAISE_VARARGS           130</span>\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> CALL_FUNCTION           131</span>\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> MAKE_FUNCTION           132</span>\n@@ -<span class=\"number\">126</span>,<span class=\"number\">6</span> +<span class=\"number\">125</span>,<span class=\"number\">8</span> @@ <span class=\"keyword\">extern</span> <span class=\"string\">\"C\"</span> {\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> BUILD_CONST_KEY_MAP     156</span>\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> BUILD_STRING            157</span>\n <span class=\"preprocessor\">#<span class=\"keyword\">define</span> BUILD_TUPLE_UNPACK_WITH_CALL 158</span>\n+<span class=\"preprocessor\">#<span class=\"keyword\">define</span> LOAD_METHOD             160</span>\n+<span class=\"preprocessor\">#<span class=\"keyword\">define</span> CALL_METHOD             161</span></code></pre>",
  "id": "5af04d1f97f07c7e137551a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-07T12:57:03.427Z",
  "text": "```\n$ git diff remotes/origin/3.6..remotes/origin/3.7 Include/opcode.h\ndiff --git a/Include/opcode.h b/Include/opcode.h\nindex be360e1..fc6cbf3 100644\n--- a/Include/opcode.h\n+++ b/Include/opcode.h\n@@ -99,7 +99,6 @@ extern \"C\" {\n #define LOAD_FAST               124\n #define STORE_FAST              125\n #define DELETE_FAST             126\n-#define STORE_ANNOTATION        127\n #define RAISE_VARARGS           130\n #define CALL_FUNCTION           131\n #define MAKE_FUNCTION           132\n@@ -126,6 +125,8 @@ extern \"C\" {\n #define BUILD_CONST_KEY_MAP     156\n #define BUILD_STRING            157\n #define BUILD_TUPLE_UNPACK_WITH_CALL 158\n+#define LOAD_METHOD             160\n+#define CALL_METHOD             161\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<code>LOAD_METHOD</code> and <code>CALL_METHOD</code>, which I think can be implemented similar to <code>op_LOAD_ATTR</code> and <code>op_CALL_FUNCTION</code> respectively",
  "id": "5af04d6f97e5506e04a31906",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-07T12:58:23.849Z",
  "text": "`LOAD_METHOD` and `CALL_METHOD`, which I think can be implemented similar to `op_LOAD_ATTR` and `op_CALL_FUNCTION` respectively",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Any sign that the ppc64le patches made it in?",
  "id": "5af077adda323a7c0402f7b2",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-07T15:58:37.884Z",
  "text": "@stuartarchibald: Any sign that the ppc64le patches made it in?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I didn&#39;t see them in the digest, I&#39;ll go pull down the source and have a look",
  "id": "5af0785959a0578004af8e3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-07T16:01:29.319Z",
  "text": "I didn't see them in the digest, I'll go pull down the source and have a look",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "seems like they all got committed",
  "id": "5af07cbb18d6bdde3721e154",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:20:11.022Z",
  "text": "seems like they all got committed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "apart from this one <a href=\"https://reviews.llvm.org/rL328400\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reviews.llvm.org/rL328400</a> ?",
  "id": "5af07cf653ceca3604bb2827",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:21:10.726Z",
  "text": "apart from this one https://reviews.llvm.org/rL328400 ?",
  "unread": false,
  "urls": [
   {
    "url": "https://reviews.llvm.org/rL328400"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, that one we definitely need as well",
  "id": "5af07d1697e5506e04a3da45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:21:42.965Z",
  "text": "ok, that one we definitely need as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so one patch is pretty easy",
  "id": "5af07d1b1eddba3d04dc243a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:21:47.795Z",
  "text": "so one patch is pretty easy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "how long is the RC supposed to run for?",
  "id": "5af07d26b37eab7d0474036c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:21:58.414Z",
  "text": "how long is the RC supposed to run for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"http://lists.llvm.org/pipermail/llvm-dev/2018-March/121757.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://lists.llvm.org/pipermail/llvm-dev/2018-March/121757.html</a>",
  "id": "5af0853a18d6bdde372201ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:56:26.674Z",
  "text": "http://lists.llvm.org/pipermail/llvm-dev/2018-March/121757.html",
  "unread": false,
  "urls": [
   {
    "url": "http://lists.llvm.org/pipermail/llvm-dev/2018-March/121757.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ul>\n<li>rc1  April 15</li>\n</ul>\n",
  "id": "5af0854000dc488804a066a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:56:32.217Z",
  "text": "  - rc1  April 15",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ul>\n<li>Merge Request Deadline May 18</li>\n</ul>\n",
  "id": "5af085405cf0b8300462a089",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:56:32.312Z",
  "text": "  - Merge Request Deadline May 18",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ul>\n<li>rc2/Merge Deadline     May 25</li>\n</ul>\n",
  "id": "5af08540f2d2d537046d68dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:56:32.408Z",
  "text": "  - rc2/Merge Deadline     May 25",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ul>\n<li>Final June 8</li>\n</ul>\n",
  "id": "5af085406d98e53e045bd54d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T16:56:32.521Z",
  "text": "  - Final June 8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think we technically need 3 patches  <a href=\"https://reviews.llvm.org/rL328400\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reviews.llvm.org/rL328400</a>, <a href=\"https://reviews.llvm.org/rL329335\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reviews.llvm.org/rL329335</a>, <a href=\"https://reviews.llvm.org/rL330186\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://reviews.llvm.org/rL330186</a>",
  "id": "5af0862453ceca3604bb49d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T17:00:20.900Z",
  "text": "I think we technically need 3 patches  https://reviews.llvm.org/rL328400, https://reviews.llvm.org/rL329335, https://reviews.llvm.org/rL330186",
  "unread": false,
  "urls": [
   {
    "url": "https://reviews.llvm.org/rL328400"
   },
   {
    "url": "https://reviews.llvm.org/rL329335"
   },
   {
    "url": "https://reviews.llvm.org/rL330186"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the first is blocked on audit required",
  "id": "5af086411eddba3d04dc4a85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T17:00:49.093Z",
  "text": "the first is blocked on audit required",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the other patches relevant to that sequence of fixes add and then fix up tests, so up to use whether we apply them",
  "id": "5af0865897f07c7e13762e1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T17:01:12.327Z",
  "text": "the other patches relevant to that sequence of fixes add and then fix up tests, so up to use whether we apply them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Also, the Python 3.7 fixup wasn&#39;t so bad, I think we&#39;re done/it&#39;s &lt;0.5hr effort unless there&#39;s surprises!",
  "id": "5af086be6d98e53e045bdaf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-07T17:02:54.368Z",
  "text": "Also, the Python 3.7 fixup wasn't so bad, I think we're done/it's <0.5hr effort unless there's surprises!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Given that the ppc64le patches were merged to the LLVM 6.0.1 branch, I think we can wait for 6.0.1 to come out officially.",
  "id": "5af1a338f2d2d537047118eb",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-08T13:16:40.616Z",
  "text": "@stuartarchibald: Given that the ppc64le patches were merged to the LLVM 6.0.1 branch, I think we can wait for 6.0.1 to come out officially.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, it&#39;s a month but that&#39;s fine",
  "id": "5af1a4ef1eddba3d04dfef3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-08T13:23:59.645Z",
  "text": "ok, it's a month but that's fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I&#39;m not in a huge hurry to rush out conda packages until we get ppc64le into our CI system",
  "id": "5af1a517f2d2d53704712021",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-08T13:24:39.529Z",
  "text": "yeah, I'm not in a huge hurry to rush out conda packages until we get ppc64le into our CI system",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> Can you elaborate on value vs data. That code comment was actually why I was asking. I am not sure what the implications of &quot;storing into containers&quot; are. Is data simply a heap representation vs the value stack representation? If so, why is heap vs stack different other than when to deallocate the memory?",
  "id": "5af2901100dc488804a6efd7",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T06:07:13.175Z",
  "text": "@sklam Can you elaborate on value vs data. That code comment was actually why I was asking. I am not sure what the implications of \"storing into containers\" are. Is data simply a heap representation vs the value stack representation? If so, why is heap vs stack different other than when to deallocate the memory?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://stackoverflow.com/questions/46751140/running-librosa-numba-on-raspberry-pi-3/50250155?s=3|0.0000#50250155\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/46751140/running-librosa-numba-on-raspberry-pi-3/50250155?s=3|0.0000#50250155</a>",
  "id": "5af2e71797f07c7e137de232",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T12:18:31.003Z",
  "text": "https://stackoverflow.com/questions/46751140/running-librosa-numba-on-raspberry-pi-3/50250155?s=3|0.0000#50250155",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/46751140/running-librosa-numba-on-raspberry-pi-3/50250155?s=3|0.0000#50250155"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;m starting to think we need to get the ARMv7 packages out there, even with the open linalg issues",
  "id": "5af2f78418d6bdde3729ed70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T13:28:36.868Z",
  "text": "I'm starting to think we need to get the ARMv7 packages out there, even with the open linalg issues",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmm",
  "id": "5af2fc071eddba3d04e47cd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T13:47:51.794Z",
  "text": "hmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I was wondering if we ought to have a crack at building the compilers",
  "id": "5af2fc1ab37eab7d047c402f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T13:48:10.522Z",
  "text": "I was wondering if we ought to have a crack at building the compilers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "but yeah, I think once the NumPy patch is in it&#39;ll stabilise things enough so that dispatch works right",
  "id": "5af2fc4e97e5506e04abfcf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T13:49:02.097Z",
  "text": "but yeah, I think once the NumPy patch is in it'll stabilise things enough so that dispatch works right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I also found that fixing the <code>dispatch only cares about C/F contig</code> issue means that other things break <span data-link-type=\"issue\" data-issue=\"2950\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2950</span>",
  "id": "5af2fc7e97e5506e04abfd6a",
  "issues": [
   {
    "number": "2950",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T13:49:50.274Z",
  "text": "I also found that fixing the `dispatch only cares about C/F contig` issue means that other things break https://github.com/numba/numba/pull/2950",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "essentially, the use of <code>Py_IS{C,F}ARRAY</code> has meant dispatch has raised if a read only array is passed when there&#39;s writable impls in the dispatch cache",
  "id": "5af2fcd31eddba3d04e480d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T13:51:15.079Z",
  "text": "essentially, the use of `Py_IS{C,F}ARRAY` has meant dispatch has raised if a read only array is passed when there's writable impls in the dispatch cache",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "but if you remove this behaviour then readonly arrays can be written to",
  "id": "5af3009f59a0578004b7c412",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T14:07:27.415Z",
  "text": "but if you remove this behaviour then readonly arrays can be written to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and the ArrayModel doesn&#39;t have a <code>readonly</code> member so i don&#39;t think at present a run time check can be made",
  "id": "5af303d56d98e53e04642413",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T14:21:09.428Z",
  "text": "and the ArrayModel doesn't have a `readonly` member so i don't think at present a run time check can be made",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span>, about \u201cvalue&quot; vs \u201cdata&quot;:<br>\u201cdata\u201d is the representation of the object that&#39;s addressable so that they can be stored into <code>array</code>, <code>list</code>, etc..  It must follow the ABI requirement of the platform (e.g. alignment).   \u201cvalue\u201d is the representation of the object that is passed around within a function.  It has no ABI requirement.  For example",
  "id": "5af3099d97e5506e04ac31d2",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T14:45:49.514Z",
  "text": "@innovate-invent, about \u201cvalue\" vs \u201cdata\":\n\u201cdata\u201d is the representation of the object that's addressable so that they can be stored into `array`, `list`, etc..  It must follow the ABI requirement of the platform (e.g. alignment).   \u201cvalue\u201d is the representation of the object that is passed around within a function.  It has no ABI requirement.  For example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "boolean value is represented as a bit as \u201cvalue\u201d but it is a byte as \u201cdata\u201d.  ",
  "id": "5af309d16d98e53e04643abb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T14:46:41.119Z",
  "text": "boolean value is represented as a bit as \u201cvalue\u201d but it is a byte as \u201cdata\u201d.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that, unfortunately, a whole load of code will need changing to accommodate &quot;readonly&quot; as a member of arrays inside Numba :(",
  "id": "5af319e9e7051e1d04c18659",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T15:55:21.886Z",
  "text": "I think that, unfortunately, a whole load of code will need changing to accommodate \"readonly\" as a member of arrays inside Numba :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>, we should add an explicit readonly check at dispatch.  The readonly-ness is encoded as part of the type.",
  "id": "5af31e58c9f02444483bd2fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-09T16:14:16.806Z",
  "text": "@stuartarchibald, we should add an explicit readonly check at dispatch.  The readonly-ness is encoded as part of the type.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> : I assume we can merge <span data-link-type=\"issue\" data-issue=\"2938\" class=\"issue\">#2938</span> and your opcode updates will go into another PR?",
  "id": "5af44b40ea553a33ea52da16",
  "issues": [
   {
    "number": "2938"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:38:08.068Z",
  "text": "@stuartarchibald : I assume we can merge #2938 and your opcode updates will go into another PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "think that&#39;s ok",
  "id": "5af44d22d332ee5fad0a641e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:46:10.790Z",
  "text": "think that's ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, I tested Py3.7 locally and it worked alright",
  "id": "5af44d36e1cf621dba0c4737",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:46:30.824Z",
  "text": "@seibert, I tested Py3.7 locally and it worked alright",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "with your bytecode patch?",
  "id": "5af44d44d332ee5fad0a64ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:46:44.677Z",
  "text": "with your bytecode patch?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "And CI claims the other pythons are not affected by <span data-link-type=\"issue\" data-issue=\"2938\" class=\"issue\">#2938</span>",
  "id": "5af44d5ad245fe2eb79d94a0",
  "issues": [
   {
    "number": "2938"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:47:06.448Z",
  "text": "And CI claims the other pythons are not affected by #2938",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, I tested building from the C/C++ end and then once I was there shoved in the bytecode changes to see if there were any other surprises",
  "id": "5af44d795666c42eb6fe9336",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:47:37.820Z",
  "text": "yeah, I tested building from the C/C++ end and then once I was there shoved in the bytecode changes to see if there were any other surprises",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "excellent",
  "id": "5af44df21cfca775e1faefbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:49:38.115Z",
  "text": "excellent",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;m glad that was easier than it looked.",
  "id": "5af44e02bd10f34a68f06aa1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:49:54.617Z",
  "text": "I'm glad that was easier than it looked.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the byte codes were added to speed up method calls",
  "id": "5af44e391cfca775e1faf07b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:50:49.872Z",
  "text": "the byte codes were added to speed up method calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so I just rewrote them as a getattr and call",
  "id": "5af44e4ad245fe2eb79d97e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:51:06.435Z",
  "text": "so I just rewrote them as a getattr and call",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I don&#39;t think there&#39;s anything special we can do with them",
  "id": "5af44e58e1cf621dba0c4bd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:51:20.846Z",
  "text": "I don't think there's anything special we can do with them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I think we already optimize method calls :)",
  "id": "5af44e70f04ce53632c898f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-10T13:51:44.208Z",
  "text": "yeah, I think we already optimize method calls :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ok, so it seems there is no way around it, I have to add ctypes struct support.",
  "id": "5af52786d332ee5fad0d1995",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-11T05:17:58.727Z",
  "text": "ok, so it seems there is no way around it, I have to add ctypes struct support.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I have a pretty good idea how to do that but I need to confirm some things. Primarily what is the intended difference between StructProxy and Structure in cgutils. I get that StructProxy uses the datamodel vs Structure holding the reference to the llvm LiteralStruct directly. Why does Structure exist if it goes around the abstraction?",
  "id": "5af5286d5a1d895fae2f89ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-11T05:21:49.018Z",
  "text": "I have a pretty good idea how to do that but I need to confirm some things. Primarily what is the intended difference between StructProxy and Structure in cgutils. I get that StructProxy uses the datamodel vs Structure holding the reference to the llvm LiteralStruct directly. Why does Structure exist if it goes around the abstraction?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I also haven&#39;t been able to nail down the MemInfo lifecycle. Where does that machinery come into play? ",
  "id": "5af53d3cb84be71db9fad584",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-11T06:50:36.244Z",
  "text": "I also haven't been able to nail down the MemInfo lifecycle. Where does that machinery come into play? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "does instantiating a types.MemInfoPointer instance in the model do all the work?",
  "id": "5af53eded332ee5fad0d5f1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-11T06:57:34.102Z",
  "text": "does instantiating a types.MemInfoPointer instance in the model do all the work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rjenc29",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=60",
   "displayName": "rjenc29",
   "gv": "4",
   "id": "5afc8df5d73408ce4f9997a7",
   "url": "/rjenc29",
   "username": "rjenc29",
   "v": 35
  },
  "html": "evening, I opened PR <span data-link-type=\"issue\" data-issue=\"2953\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2953</span> the other day - if you have some time to review, that would be great",
  "id": "5afc8f1be1cf621dba2563a4",
  "issues": [
   {
    "number": "2953"
   },
   {
    "number": "2953",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-16T20:05:47.272Z",
  "text": "evening, I opened PR [#2953](https://github.com/numba/numba/pull/2953) the other day - if you have some time to review, that would be great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rjenc29\" class=\"mention\">@rjenc29</span> done, thanks.",
  "id": "5afd845f5a1d895fae49519c",
  "issues": [],
  "mentions": [
   {
    "screenName": "rjenc29",
    "userId": "5afc8df5d73408ce4f9997a7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T13:32:15.521Z",
  "text": "@rjenc29 done, thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "fun fact (regarding today&#39;s discussion about running flake8 in Travis CI): Numba currently has ~100,000 lines of Python and using Dask&#39;s flake8 warning exclusion list, Numba has 6500 flake8 failures.",
  "id": "5afde5ff9ad18967b9f3fcfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:28:47.368Z",
  "text": "fun fact (regarding today's discussion about running flake8 in Travis CI): Numba currently has ~100,000 lines of Python and using Dask's flake8 warning exclusion list, Numba has 6500 flake8 failures.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "close out all PR&#39;s and run an autoformatter? :P",
  "id": "5afde9075a1d895fae4b0192",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:41:43.811Z",
  "text": "close out all PR's and run an autoformatter? :P",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "heh, we&#39;re going to wait until we get the open PR count down a bit",
  "id": "5afde91d8c24fe61eaf31906",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:42:05.445Z",
  "text": "heh, we're going to wait until we get the open PR count down a bit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "because yes, that&#39;s basically it",
  "id": "5afde924e1cf621dba2a1eeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:42:12.575Z",
  "text": "because yes, that's basically it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "is there an automated way to flag PR&#39;s for flake8 errors?",
  "id": "5afde9579ad18967b9f40880",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:43:03.906Z",
  "text": "is there an automated way to flag PR's for flake8 errors?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, we can add flake8 to the Travis CI config that runs on every PR (like the unit tests)",
  "id": "5afde9771cfca775e1193ba7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:43:35.267Z",
  "text": "yeah, we can add flake8 to the Travis CI config that runs on every PR (like the unit tests)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "cool",
  "id": "5afde97f5666c42eb61ce3e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:43:43.487Z",
  "text": "cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "while you are on, was my question earlier too big?",
  "id": "5afde9b15666c42eb61ce484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:44:33.236Z",
  "text": "while you are on, was my question earlier too big?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "that might be a <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> question :)",
  "id": "5afde9cca2d95136334b07c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:45:00.241Z",
  "text": "that might be a @sklam question :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ah, I guess everyone has a specialization?",
  "id": "5afde9e852194a4a67f33450",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:45:28.777Z",
  "text": "ah, I guess everyone has a specialization?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Siu is much deeper into the compiler internals.",
  "id": "5afdea6fb84be71db916057a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:47:43.674Z",
  "text": "Siu is much deeper into the compiler internals.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(since he is the lead developer and designed most of Numba)",
  "id": "5afdea8b5666c42eb61ce7b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:48:11.082Z",
  "text": "(since he is the lead developer and designed most of Numba)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "maybe you can help me with a more general question.  Should I be using the extending API for integrated library support or should I be using the underlying mechanics?",
  "id": "5afdea8b9ad18967b9f40e38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:48:11.988Z",
  "text": "maybe you can help me with a more general question.  Should I be using the extending API for integrated library support or should I be using the underlying mechanics?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I can&#39;t find a good place to put the code as it seems to rely on the library being fully initialized and there is no post-init hook or specific location in the codebase to load my supporting code",
  "id": "5afdeae752194a4a67f338d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:49:43.912Z",
  "text": "I can't find a good place to put the code as it seems to rely on the library being fully initialized and there is no post-init hook or specific location in the codebase to load my supporting code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I almost feel like I should create a separate subfolder for library support and have a proper post-init loader that scans through the folder",
  "id": "5afdeb1cd332ee5fad28b23d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:50:36.780Z",
  "text": "I almost feel like I should create a separate subfolder for library support and have a proper post-init loader that scans through the folder",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "there is also a spattering of ctypes references throughout numba that I feel should be excised into a single location alongside my code",
  "id": "5afdeb55e1cf621dba2a2954",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:51:33.242Z",
  "text": "there is also a spattering of ctypes references throughout numba that I feel should be excised into a single location alongside my code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span>, what do you mean by \u201cintegrated library support\u201d?  do u mean a shared lib (e.g. .so, .dll)?",
  "id": "5afdeb965666c42eb61ceb7e",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:52:38.608Z",
  "text": "@innovate-invent, what do you mean by \u201cintegrated library support\u201d?  do u mean a shared lib (e.g. .so, .dll)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am working on proper support for ctypes (and cffi ) types and functions, I would hope that this gets merged into the numba codebase rather than a separate package.",
  "id": "5afdebef2df44c2d06379711",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:54:07.286Z",
  "text": "I am working on proper support for ctypes (and cffi ) types and functions, I would hope that this gets merged into the numba codebase rather than a separate package.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am imagining tweaking the typing code so that when it detects an unknown type it will try and detect the originating library and search a folder for support for that library and load it",
  "id": "5afdec62d245fe2eb7bbe74f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:56:02.316Z",
  "text": "I am imagining tweaking the typing code so that when it detects an unknown type it will try and detect the originating library and search a folder for support for that library and load it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "if it\u2019s general support for ctypes and cffi, they are initialized at <a href=\"https://github.com/numba/numba/blob/210d8397a79f0379ebbab753c3d611ac6a98eb48/numba/targets/cpu.py#L40-L61\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/210d8397a79f0379ebbab753c3d611ac6a98eb48/numba/targets/cpu.py#L40-L61</a>",
  "id": "5afdecd8e0b50c2d05ceebec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-17T20:58:00.111Z",
  "text": "if it\u2019s general support for ctypes and cffi, they are initialized at https://github.com/numba/numba/blob/210d8397a79f0379ebbab753c3d611ac6a98eb48/numba/targets/cpu.py#L40-L61\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/210d8397a79f0379ebbab753c3d611ac6a98eb48/numba/targets/cpu.py#L40-L61"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh, thats exactly what I was hunting for. Would it be better to change that to my suggestion for dynamic support rather than a hardcoded version?",
  "id": "5afded4b8c24fe61eaf32774",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T20:59:55.328Z",
  "text": "oh, thats exactly what I was hunting for. Would it be better to change that to my suggestion for dynamic support rather than a hardcoded version?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Start with the hardcoded ones first.  The dynamic support sounded nice but it also sounded big.  It will be easier to review your patches if you limit your scope.",
  "id": "5afdede452194a4a67f344b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:02:28.408Z",
  "text": "Start with the hardcoded ones first.  The dynamic support sounded nice but it also sounded big.  It will be easier to review your patches if you limit your scope.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am compartmentalizing my changes into branches, but yea I will just hardcode for now ",
  "id": "5afdee2ba2d95136334b163e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:03:39.775Z",
  "text": "I am compartmentalizing my changes into branches, but yea I will just hardcode for now ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "while I have you, did you catch my Structure and StructProxy question? I want to understand your logic behind it so I&#39;m not working against you on that.",
  "id": "5afdee965666c42eb61cf731",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:05:26.683Z",
  "text": "while I have you, did you catch my Structure and StructProxy question? I want to understand your logic behind it so I'm not working against you on that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Right, i have been typing the answers in the background",
  "id": "5afdef19e0b50c2d05cef423",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:07:37.829Z",
  "text": "Right, i have been typing the answers in the background\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p>Answer to &quot;StructProxy vs Structure in cgutils\u201d:<br>Structure is just legacy code that existed before datamodel stuffs got added.  If you have a datamodel, use StructProxy.  If you are doing manual low-level llvm hacking, use Structure.</p><p>Answer to &quot;MemInfo&quot;:<br>See arrayobj.py or listobj.py for sample implementations of something that needs refcount.  There are 2 important refcount helper functions that tag the refcount semantic of a returning value:</p><ul>\n<li>numba.targets.imputils.impl_ret_new_ref:<br>  For when the implementation is returning a new reference.<br>  Usually for functions that is returning a freshly made object.</li>\n<li>numba.targets.imputils.impl_ret_borrowed:<br>  For when the implementation is returning a borrowed reference. Usually for functions that returns an attribute of the object.</li>\n</ul>\n",
  "id": "5afdef1dbd10f34a680edb91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:07:41.910Z",
  "text": "Answer to \"StructProxy vs Structure in cgutils\u201d:\nStructure is just legacy code that existed before datamodel stuffs got added.  If you have a datamodel, use StructProxy.  If you are doing manual low-level llvm hacking, use Structure.\n\nAnswer to \"MemInfo\":\nSee arrayobj.py or listobj.py for sample implementations of something that needs refcount.  There are 2 important refcount helper functions that tag the refcount semantic of a returning value:\n\n* numba.targets.imputils.impl_ret_new_ref: \n    For when the implementation is returning a new reference.\n    Usually for functions that is returning a freshly made object.\n* numba.targets.imputils.impl_ret_borrowed: \n    For when the implementation is returning a borrowed reference. Usually for functions that returns an attribute of the object.\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Thanks! I think that is everything I need to get started.",
  "id": "5afdeff25a1d895fae4b1d51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:11:14.864Z",
  "text": "Thanks! I think that is everything I need to get started.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "is there a way to automatically generate sphinx doc&#39;s in a repo?",
  "id": "5afdf562a2d95136334b2fd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:34:26.682Z",
  "text": "is there a way to automatically generate sphinx doc's in a repo?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I feel like that is what this project is missing",
  "id": "5afdf56b41f54f22e23a5010",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:34:35.408Z",
  "text": "I feel like that is what this project is missing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>python setup.py build_doc</code>",
  "id": "5afdf58ca2d95136334b306c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:35:08.700Z",
  "text": "` python setup.py build_doc`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I mean on github, like regenerate after each commit to the master and then link to it on the website",
  "id": "5afdf5e29ad18967b9f435b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:36:34.142Z",
  "text": "I mean on github, like regenerate after each commit to the master and then link to it on the website",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "that isn&#39;t something travis does is it?",
  "id": "5afdf660a2d95136334b32df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:38:40.759Z",
  "text": "that isn't something travis does is it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh cool, it is: <a href=\"https://github.com/Syntaf/travis-sphinx\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Syntaf/travis-sphinx</a>",
  "id": "5afdf6b8b84be71db91630c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:40:08.701Z",
  "text": "oh cool, it is: https://github.com/Syntaf/travis-sphinx",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Syntaf/travis-sphinx"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "It might motivate more doc contributions",
  "id": "5afdf727b84be71db91631e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:41:59.706Z",
  "text": "It might motivate more doc contributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2974\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2974</span> ;)",
  "id": "5afdf928b84be71db916378f",
  "issues": [
   {
    "number": "2974",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T21:50:32.461Z",
  "text": "https://github.com/numba/numba/issues/2974 ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Oh, shoot, python 2.7 support is being retained?",
  "id": "5afe00e3e0b50c2d05cf30ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T22:23:31.031Z",
  "text": "Oh, shoot, python 2.7 support is being retained?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I usually make heavy use of PEP 3107, will a PR be accepted if it has .pyi files following PEP 484?",
  "id": "5afe0304e0b50c2d05cf38f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T22:32:36.288Z",
  "text": "I usually make heavy use of PEP 3107, will a PR be accepted if it has .pyi files following PEP 484?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> could you document your answer somewhere (docs, comments)?",
  "id": "5afe08338c24fe61eaf37ebf",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T22:54:43.701Z",
  "text": "@sklam could you document your answer somewhere (docs, comments)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am compiling notes as I go that I plan to add",
  "id": "5afe0b902df44c2d0637fec1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T23:09:04.731Z",
  "text": "I am compiling notes as I go that I plan to add",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> <a href=\"https://gist.github.com/innovate-invent/2e3ca08db1942f55ffaba2f0dcdf1374\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/innovate-invent/2e3ca08db1942f55ffaba2f0dcdf1374</a>",
  "id": "5afe0e4c2df44c2d06380679",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-17T23:20:44.640Z",
  "text": "@ehsantn https://gist.github.com/innovate-invent/2e3ca08db1942f55ffaba2f0dcdf1374",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/innovate-invent/2e3ca08db1942f55ffaba2f0dcdf1374"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> looking at the targets folder I am not sure what is meant by &#39;targets&#39; I assumed targets were CPU and GPU but I haven&#39;t found reference to GPU anywhere. What is meant by a &#39;target&#39; in numba",
  "id": "5afe1bb35666c42eb61d78f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T00:17:55.822Z",
  "text": "@sklam looking at the targets folder I am not sure what is meant by 'targets' I assumed targets were CPU and GPU but I haven't found reference to GPU anywhere. What is meant by a 'target' in numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "it almost seems like a target is anything that the python interpreter could hand to numba",
  "id": "5afe1beea2d95136334ba0ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T00:18:54.300Z",
  "text": "it almost seems like a target is anything that the python interpreter could hand to numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span> thanks. Numba docs desperately needs this info.",
  "id": "5afe26abb84be71db916b790",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T01:04:43.687Z",
  "text": "@innovate-invent thanks. Numba docs desperately needs this info.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span>: <a href=\"http://numba.pydata.org/numba-doc/dev/reference/python27-eol.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/dev/reference/python27-eol.html</a>",
  "id": "5afe299c41f54f22e23ae2f9",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T01:17:16.250Z",
  "text": "@innovate-invent: http://numba.pydata.org/numba-doc/dev/reference/python27-eol.html",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/dev/reference/python27-eol.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "thanks :), what about .pyi files in the meantime?",
  "id": "5afe2be79ad18967b9f4c6e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T01:27:03.555Z",
  "text": "thanks :), what about .pyi files in the meantime?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I don&#39;t think this is something we want to add to the codebase before Numba 1.0",
  "id": "5afe2c352df44c2d0638529d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T01:28:21.994Z",
  "text": "I don't think this is something we want to add to the codebase before Numba 1.0",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(the .pyi stuff)",
  "id": "5afe2c3ef04ce53632e7c5bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T01:28:30.665Z",
  "text": "(the .pyi stuff)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: The release of CUDA 9.2 has reminded me we will eventually need to deal with the NVVM bitcode problem: <span data-link-type=\"issue\" data-issue=\"2975\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2975</span>",
  "id": "5afe2fef5a1d895fae4bd15f",
  "issues": [
   {
    "number": "2975",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T01:44:15.920Z",
  "text": "@sklam: The release of CUDA 9.2 has reminded me we will eventually need to deal with the NVVM bitcode problem: https://github.com/numba/numba/issues/2975",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> It would be really cool if you could help me fill this out sometime: <a href=\"https://github.com/innovate-invent/numba/blob/documentation/docs/source/developer/directory.rst\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/innovate-invent/numba/blob/documentation/docs/source/developer/directory.rst</a>",
  "id": "5afe50571cfca775e11a4f0b",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T04:02:31.356Z",
  "text": "@sklam It would be really cool if you could help me fill this out sometime: https://github.com/innovate-invent/numba/blob/documentation/docs/source/developer/directory.rst",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/innovate-invent/numba/blob/documentation/docs/source/developer/directory.rst"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "or anyone who can",
  "id": "5afe506fb84be71db91712dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T04:02:55.775Z",
  "text": "or anyone who can",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rjenc29",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=60",
   "displayName": "rjenc29",
   "gv": "4",
   "id": "5afc8df5d73408ce4f9997a7",
   "url": "/rjenc29",
   "username": "rjenc29",
   "v": 35
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> great, thanks - will action the points raised",
  "id": "5afe6dd62df44c2d0638fbb4",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-18T06:08:22.297Z",
  "text": "@stuartarchibald great, thanks - will action the points raised",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-18T15:10:53.679Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span>, good question about the \u201ctargets\u201d directory.  I think the code in it has drifted away from the original intent.  It is now containing the implementations for the cpu-target.",
  "id": "5afeece5b84be71db91969e0",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-18T15:10:29.518Z",
  "text": "@innovate-invent, good question about the \u201ctargets\u201d directory.  I think the code in it has drifted away from the original intent.  It is now containing the implementations for the cpu-target.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "At first glance it seems to contain more than cpu specific code. are things like arrayobj not used in the cuda target?",
  "id": "5aff2101f04ce53632eb1e39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-18T18:52:49.903Z",
  "text": "At first glance it seems to contain more than cpu specific code. are things like arrayobj not used in the cuda target?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I should say CPU and common impl.  Some CPU impl can be used in GPU.",
  "id": "5aff2181a2d95136334f260b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-18T18:54:57.521Z",
  "text": "I should say CPU and common impl.  Some CPU impl can be used in GPU.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Just addressed that issue along with some other organisational stuff here: <span data-link-type=\"issue\" data-issue=\"2980\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2980</span>",
  "id": "5aff2cd252194a4a67f78155",
  "issues": [
   {
    "number": "2980",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-18T19:43:14.273Z",
  "text": "Just addressed that issue along with some other organisational stuff here: https://github.com/numba/numba/issues/2980",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I am still a little fuzzy on FE types. Datamodel constructors are handed the FE type, which its a numbe.Type and does not have a link to the object or type of object being evaluated. How do I get that information to the datamodel?",
  "id": "5aff52b99ad18967b9f8d19a",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-18T22:24:57.836Z",
  "text": "@sklam I am still a little fuzzy on FE types. Datamodel constructors are handed the FE type, which its a numbe.Type and does not have a link to the object or type of object being evaluated. How do I get that information to the datamodel?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "The only thing I can see doing is having the typer() generate a new type at that time that copies in the required information. Is that the intended way?",
  "id": "5b00c96bf04ce53632ef67c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-20T01:03:39.905Z",
  "text": "The only thing I can see doing is having the typer() generate a new type at that time that copies in the required information. Is that the intended way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<a href=\"https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py</a>",
  "id": "5b00e761d245fe2eb7c453b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-20T03:11:29.957Z",
  "text": "https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "This statement is also crazy: class_obj = c.pyapi.unserialize(c.pyapi.serialize_object(Interval))",
  "id": "5b00e794a2d951363353a3b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-20T03:12:20.683Z",
  "text": "This statement is also crazy: class_obj = c.pyapi.unserialize(c.pyapi.serialize_object(Interval))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-20T03:19:38.519Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Looking at the source, serialize_object is evaluated at compile time and unserialize is evaluated at runtime",
  "id": "5b00e7cbbd10f34a68174a16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-20T03:13:15.557Z",
  "text": "Looking at the source, serialize_object is evaluated at compile time and unserialize is evaluated at runtime",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Is that right?",
  "id": "5b00e7d6d332ee5fad313864",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-20T03:13:26.100Z",
  "text": "Is that right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I feel like that behavior should be more explicit",
  "id": "5b00e7ee8c24fe61eafbc75a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-20T03:13:50.785Z",
  "text": "I feel like that behavior should be more explicit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span>, I am not sure I understand your question about FE types.  The thing you are working on is very similar to the <code>Record</code> dtype in <a href=\"https://github.com/numba/numba/blob/master/numba/types/npytypes.py?utf8=%E2%9C%93#L45\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/types/npytypes.py?utf8=%E2%9C%93#L45</a>.  ",
  "id": "5b02e0f42df44c2d0645b84c",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-21T15:08:36.297Z",
  "text": "@innovate-invent, I am not sure I understand your question about FE types.  The thing you are working on is very similar to the `Record` dtype in https://github.com/numba/numba/blob/master/numba/types/npytypes.py?utf8=%E2%9C%93#L45.  ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/types/npytypes.py?utf8=%E2%9C%93#L45"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Your understanding of <code>c.pyapi.unserialize(c.pyapi.serialize_object(Interval))</code> is correct.  A lot of numba code-gen source code is heavy meta-programming that blurs the line between current runtime, compile-time and runtime-of-the-compiled.  It does feels like inception sometimes. =)",
  "id": "5b02e209e0b50c2d05dd530e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-21T15:13:13.539Z",
  "text": "Your understanding of `c.pyapi.unserialize(c.pyapi.serialize_object(Interval))` is correct.  A lot of numba code-gen source code is heavy meta-programming that blurs the line between current runtime, compile-time and runtime-of-the-compiled.  It does feels like inception sometimes. =)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Is there a consistent way of determining the execution time of a function in the codebase?",
  "id": "5b03681141f54f22e24a320d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-22T00:45:05.362Z",
  "text": "Is there a consistent way of determining the execution time of a function in the codebase?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I don\u2019t think there is.  Everything under the \u201ctarget\u201d subdir is doing codegen or preparing thing for codegen.  ",
  "id": "5b0459d9d245fe2eb7cefd05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-22T17:56:41.005Z",
  "text": "I don\u2019t think there is.  Everything under the \u201ctarget\u201d subdir is doing codegen or preparing thing for codegen.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Looking at the usage of <code>c.pyapi.unserialize(c.pyapi.serialize_object(\u2026</code>, it can probably be simplified to one function call <code>c.pyapi.prepare_obj_for_runtime_use</code>.",
  "id": "5b045a40e1cf621dba3d2c48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-22T17:58:24.583Z",
  "text": "Looking at the usage of `c.pyapi.unserialize(c.pyapi.serialize_object(\u2026`, it can probably be simplified to one function call `c.pyapi.prepare_obj_for_runtime_use`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "is serializing the entire type a good way to hold a link to the Python object?",
  "id": "5b045c012df44c2d064b2f7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-22T18:05:53.961Z",
  "text": "is serializing the entire type a good way to hold a link to the Python object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It\u2019s hard to judge without knowing all the details.  In general, I think serializing should be a last resort, because unpickling requires calling libpython\u2014can be slow and may interfere w/ caching/ahead-of-time.  ",
  "id": "5b05a96baaafa25932ae18b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-23T17:48:27.053Z",
  "text": "It\u2019s hard to judge without knowing all the details.  In general, I think serializing should be a last resort, because unpickling requires calling libpython\u2014can be slow and may interfere w/ caching/ahead-of-time.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am just looking at the box function of the <a href=\"http://numba.pydata.org/numba-doc/dev/extending/interval-example.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">interval example</a>",
  "id": "5b05af893815f70bffd20087",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-23T18:14:33.884Z",
  "text": "I am just looking at the box function of the [interval example](http://numba.pydata.org/numba-doc/dev/extending/interval-example.html)",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/dev/extending/interval-example.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "What is a better alternative to the serialization used in that exmaple?",
  "id": "5b071b21d88b24150d31ddcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:05:53.245Z",
  "text": "What is a better alternative to the serialization used in that exmaple?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "That actually made me wonder if doing <code>c.env_manager.read_const(c.env_manager.add_const(np_dtype))</code> (from <code>box_array</code> of boxing.py) is better than the <code>c.pyapi.unserialize(c.pyapi.serialize_object(\u2026</code>.  Again we have two ways.   ",
  "id": "5b071fbe3815f70bffd71415",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:25:34.025Z",
  "text": "That actually made me wonder if doing `c.env_manager.read_const(c.env_manager.add_const(np_dtype))` (from `box_array` of boxing.py) is better than the `c.pyapi.unserialize(c.pyapi.serialize_object(\u2026`.  Again we have two ways.   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "now that i am doing work on the <code>env_manager</code>, i think <code>env_manager</code> would defer the serialization to when it is actually needed (for caching and AoT).",
  "id": "5b07200caaafa25932b3519a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:26:52.110Z",
  "text": "now that i am doing work on the `env_manager`, i think `env_manager` would defer the serialization to when it is actually needed (for caching and AoT).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "what is env_manager?",
  "id": "5b0721632817b43087c66c0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:32:35.154Z",
  "text": "what is env_manager?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "You read about the Env in <a href=\"https://github.com/sklam/numba/blob/62a1b4a321eeacfe415be019d0df9cb8e98c56a7/docs/source/developer/environment.rst\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this doc</a> from a open PR. ",
  "id": "5b0721a73815f70bffd71dfe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:33:43.699Z",
  "text": "You read about the Env in [this doc](https://github.com/sklam/numba/blob/62a1b4a321eeacfe415be019d0df9cb8e98c56a7/docs/source/developer/environment.rst) from a open PR. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/sklam/numba/blob/62a1b4a321eeacfe415be019d0df9cb8e98c56a7/docs/source/developer/environment.rst"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the env_manager (EnvironmentManager in pythonapi.py) is just a small helper to use the Env.  ",
  "id": "5b0721e3d88b24150d31f661",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:34:43.052Z",
  "text": "the env_manager (EnvironmentManager in pythonapi.py) is just a small helper to use the Env.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Ah, yea! haha, I was just sitting here looking at pyapi thinking we needed something like this",
  "id": "5b07228baaafa25932b35b7f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:37:31.284Z",
  "text": "Ah, yea! haha, I was just sitting here looking at pyapi thinking we needed something like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "going back to your question, the serialization is a good way to hold a type object because it is actually cheap.  The deserialization (unpickle) is really just importing that type from a path.  No content of the type object is serialized.",
  "id": "5b0723ac2817b43087c673f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:42:20.513Z",
  "text": "going back to your question, the serialization is a good way to hold a type object because it is actually cheap.  The deserialization (unpickle) is really just importing that type from a path.  No content of the type object is serialized.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh, I didn&#39;t know it stored a path",
  "id": "5b0724515f3e6b40fae1cb1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:45:05.360Z",
  "text": "oh, I didn't know it stored a path",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "so you cant unpickle an object that the interpreter isn&#39;t already aware of the type?",
  "id": "5b072467d88b24150d31ffdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:45:27.522Z",
  "text": "so you cant unpickle an object that the interpreter isn't already aware of the type?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T20:45:46.136Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "or even unpickle a type",
  "id": "5b072473ee623e2e41ff4ba6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:45:39.275Z",
  "text": "or even unpickle a type",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Can you also tell me the expected type of the ref parameter for StructProxy? I tried following it back and ran into IR code",
  "id": "5b07252697a0361fb76086f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:48:38.991Z",
  "text": "Can you also tell me the expected type of the ref parameter for StructProxy? I tried following it back and ran into IR code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "cgutils.create_struct_proxy(typ, &#39;data&#39;)(c.context, c.builder, ref={pointer to ctypes struct buffer})",
  "id": "5b07257360209a1187dfd485",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:49:55.456Z",
  "text": "cgutils.create_struct_proxy(typ, 'data')(c.context, c.builder, ref={pointer to ctypes struct buffer})",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "is what I am trying to do",
  "id": "5b0725792817b43087c679cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:50:01.744Z",
  "text": "is what I am trying to do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I think I need nrt_adapt_buffer_from_python in there but I am also not sure the proper way to init arystruct_t",
  "id": "5b0725bdfb0f4a0bfe6a6ca1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:51:09.765Z",
  "text": "I think I need nrt_adapt_buffer_from_python in there but I am also not sure the proper way to init arystruct_t",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "the code comments start to get pretty thin around the MemInfo stuff",
  "id": "5b07263897a0361fb7608b7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:53:12.272Z",
  "text": "the code comments start to get pretty thin around the MemInfo stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh right, numba.targets.imputils.impl_ret_borrowed",
  "id": "5b0726eb9ed336150eaaac55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:56:11.512Z",
  "text": "oh right, numba.targets.imputils.impl_ret_borrowed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>ref</code> is a LLVM IR pointer to a struct of <code>typ</code>",
  "id": "5b0726f297a0361fb7608cfb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:56:18.524Z",
  "text": "the `ref` is a LLVM IR pointer to a struct of `typ`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh, so you cant pass an arbitrary buffer into that",
  "id": "5b07273496af8f1186c9e0a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:57:24.456Z",
  "text": "oh, so you cant pass an arbitrary buffer into that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "no, it\u2019s part of code-generation",
  "id": "5b07276760209a1187dfdbbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:58:15.646Z",
  "text": "no, it\u2019s part of code-generation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T20:58:35.776Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s writing LLVM IR to be compiled",
  "id": "5b07277a97a0361fb7608ee8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T20:58:34.232Z",
  "text": "it\u2019s writing LLVM IR to be compiled",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "but it passes ref to gep to calculate a pointer offset into it",
  "id": "5b0727e42817b43087c68234",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:00:20.520Z",
  "text": "but it passes ref to gep to calculate a pointer offset into it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>NRT_adapt_buffer_from_python</code> is for creating arrays from object that expose a python buffer-protocol.  I don\u2019t thk u need that.",
  "id": "5b0727ee752aff5931117493",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:00:30.415Z",
  "text": "the `NRT_adapt_buffer_from_python` is for creating arrays from object that expose a python buffer-protocol.  I don\u2019t thk u need that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh, wait, why cant you just cast a pointer to a buffer to a LLVM IR pointer?",
  "id": "5b07284bd88b24150d320c19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:02:03.512Z",
  "text": "oh, wait, why cant you just cast a pointer to a buffer to a LLVM IR pointer?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T21:04:53.583Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "if you do that, the pointer value will be a constant in the emitted code such that all it can do is operate on the same pointer value.  I am assuming that\u2019s not what you intended.",
  "id": "5b0728e65f3e6b40fae1db8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:04:38.836Z",
  "text": "if you do that, the pointer value will be a constant in the emitted code such that all it can do is operate on the same pointer value.  I am assuming that\u2019s not what you intended.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "so the existing alloca call works because it is held until runtime ? ",
  "id": "5b0729399ed336150eaab31d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:06:01.889Z",
  "text": "so the existing alloca call works because it is held until runtime ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "how can it know the pointer value before runtime?",
  "id": "5b0729832942532e42dcd5ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:07:15.461Z",
  "text": "how can it know the pointer value before runtime?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I guess the next question is what machinery acts as a runtime placeholder for a value",
  "id": "5b0729d560209a1187dfe3b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:08:37.682Z",
  "text": "I guess the next question is what machinery acts as a runtime placeholder for a value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i thk i need to clarify what you mean by &quot;a pointer to a buffer&quot;",
  "id": "5b072a902817b43087c68e1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:11:44.006Z",
  "text": "i thk i need to clarify what you mean by \"a pointer to a buffer\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "is it a <code>ctypes.POINTER</code> value?",
  "id": "5b072aa16309af743d0fd769",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:12:01.242Z",
  "text": "is it a `ctypes.POINTER` value?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "the memory address of the first byte of allocated memory :P",
  "id": "5b072ab0d96cfd743ebb4ba0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:12:16.089Z",
  "text": "the memory address of the first byte of allocated memory :P",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "a LLVM IR pointer?",
  "id": "5b072abeee623e2e41ff6299",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:12:30.934Z",
  "text": "a LLVM IR pointer?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-24T21:13:12.911Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "what is the exact type of <code>type(a_pointer_to_a_buffer)</code>?",
  "id": "5b072ae6752aff5931117d44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:13:10.890Z",
  "text": "what is the exact type of `type(a_pointer_to_a_buffer)`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "so the python buffer interface allows grabbing that pointer value along with the ctypes library. I can store the number in any type I want",
  "id": "5b072aeb2942532e42dcd942",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:13:15.851Z",
  "text": "so the python buffer interface allows grabbing that pointer value along with the ctypes library. I can store the number in any type I want",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "it can be an int if needed",
  "id": "5b072b01fb0f4a0bfe6a7fae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:13:37.418Z",
  "text": "it can be an int if needed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "ok,  i c",
  "id": "5b072b0197a0361fb7609a3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:13:37.749Z",
  "text": "ok,  i c",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so my assumption is right",
  "id": "5b072b1bfb0f4a0bfe6a7ffe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:14:03.856Z",
  "text": "so my assumption is right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "&quot;a runtime placeholder for a value\u201d will be a value in LLVM IR. ",
  "id": "5b072c16aaafa25932b37eaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:18:14.446Z",
  "text": "\"a runtime placeholder for a value\u201d will be a value in LLVM IR. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "so I just need to wrap the value being passed to ref of StructProxy?",
  "id": "5b072c72fb0f4a0bfe6a841d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:19:46.593Z",
  "text": "so I just need to wrap the value being passed to ref of StructProxy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I still don&#39;t understand how it can store a constant at compile time if that constant is a parameter to the unboxing function",
  "id": "5b072cadd96cfd743ebb52d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:20:45.408Z",
  "text": "I still don't understand how it can store a constant at compile time if that constant is a parameter to the unboxing function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "it cant know the value at that time",
  "id": "5b072cc097a0361fb7609f6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-05-24T21:21:04.064Z",
  "text": "it cant know the value at that time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "can u post your unbox function source code?  it\u2019ll probably make it easier to talk about",
  "id": "5b072e6fee623e2e41ff6eae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:28:15.242Z",
  "text": "can u post your unbox function source code?  it\u2019ll probably make it easier to talk about",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<a href=\"https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py</a>",
  "id": "5b072e8bfb0f4a0bfe6a8869",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:28:43.042Z",
  "text": "https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/innovate-invent/numba/blob/ctypes_support/numba/targets/ctypesimpl.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "great",
  "id": "5b072eb49ed336150eaac41c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:29:24.157Z",
  "text": "great",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so in <pre><code class=\"python\">\n<span class=\"decorator\">@unbox(CDataType)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">unbox_cdata</span><span class=\"params\">(typ, obj, c)</span>:</span></code></pre>",
  "id": "5b072ec197a0361fb760a5e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:29:37.830Z",
  "text": "so in \n\n```python\n\n@unbox(CDataType)\ndef unbox_cdata(typ, obj, c):\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>obj</code> is already a LLVM IR value.",
  "id": "5b072ed72942532e42dce8bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:29:59.076Z",
  "text": "`obj` is already a LLVM IR value.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ah, ok",
  "id": "5b072f723815f70bffd74fa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:32:34.781Z",
  "text": "ah, ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "let\u2019s say you have",
  "id": "5b072f885f3e6b40fae1f195",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:32:56.131Z",
  "text": "let\u2019s say you have",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<pre><code><span class=\"prompt\">&gt;&gt;</span>&gt; import ctypes\n<span class=\"prompt\">&gt;&gt;</span>&gt; <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyStruct</span>(<span class=\"title\">ctypes</span>.<span class=\"title\">Structure</span>):</span>\n...     _fields<span class=\"number\">_</span> = [(<span class=\"string\">'a'</span>, ctypes.c_int)]\n...\n<span class=\"prompt\">&gt;&gt;</span>&gt; s = <span class=\"constant\">MyStruct</span>()\n<span class=\"prompt\">&gt;&gt;</span>&gt; s.a = <span class=\"number\">123</span></code></pre>",
  "id": "5b072f8bd88b24150d3226be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:32:59.169Z",
  "text": "```\n>>> import ctypes\n>>> class MyStruct(ctypes.Structure):\n...     _fields_ = [('a', ctypes.c_int)]\n...\n>>> s = MyStruct()\n>>> s.a = 123\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "And you want to get the address of <code>s</code>",
  "id": "5b072f965f3e6b40fae1f1a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:33:10.286Z",
  "text": "And you want to get the address of `s`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "In the interpreter, you would do<pre><code>\n&gt;&gt;&gt; ctypes.<span class=\"function\"><span class=\"title\">addressof</span><span class=\"params\">(s)</span></span>\n<span class=\"number\">4530489624</span></code></pre>",
  "id": "5b072fa43815f70bffd750a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:33:24.307Z",
  "text": "In the interpreter, you would do\n```\n\n>>> ctypes.addressof(s)\n4530489624\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "yup",
  "id": "5b072faf5f3e6b40fae1f33b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:33:35.548Z",
  "text": "yup",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "but here in the unbox function, you want to emit the LLVM IR that would do the same",
  "id": "5b072fbc2942532e42dcebf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:33:48.658Z",
  "text": "but here in the unbox function, you want to emit the LLVM IR that would do the same",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "yes",
  "id": "5b072fc5752aff5931118b35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:33:57.652Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "think of the LLVM IR as C source code",
  "id": "5b072fc5ee623e2e41ff72cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:33:57.894Z",
  "text": "think of the LLVM IR as C source code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I am assuming c.pyapi.get_buffer(obj) or something",
  "id": "5b072fdfee623e2e41ff72fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:34:23.454Z",
  "text": "I am assuming c.pyapi.get_buffer(obj) or something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the get_buffer API maybe harder to use since it was designed to make turn the buffer into sth like a numpy array ",
  "id": "5b0731172942532e42dcf0a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:39:35.000Z",
  "text": "the get_buffer API maybe harder to use since it was designed to make turn the buffer into sth like a numpy array ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "instead, i think you should just do <code>ctypes.addressof(s)</code>",
  "id": "5b073127b435f21fb8c59994",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:39:51.458Z",
  "text": "instead, i think you should just do `ctypes.addressof(s)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "See <a href=\"https://github.com/numba/numba/blob/f0418c7ae79e26a6b708b6220908f3cf52d7ab9c/numba/_helperlib.c?utf8=%E2%9C%93#L305-L311\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/f0418c7ae79e26a6b708b6220908f3cf52d7ab9c/numba/_helperlib.c?utf8=%E2%9C%93#L305-L311</a>",
  "id": "5b073132ee623e2e41ff7820",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:40:02.091Z",
  "text": "See https://github.com/numba/numba/blob/f0418c7ae79e26a6b708b6220908f3cf52d7ab9c/numba/_helperlib.c?utf8=%E2%9C%93#L305-L311",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/f0418c7ae79e26a6b708b6220908f3cf52d7ab9c/numba/_helperlib.c?utf8=%E2%9C%93#L305-L311"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "That\u2019s the C code to do:<pre><code>import numpy\nnumpy_record = numpy.<span class=\"type\">record</span></code></pre>",
  "id": "5b07314d5f3e6b40fae1f7d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:40:29.431Z",
  "text": "That\u2019s the C code to do:\n```\nimport numpy\nnumpy_record = numpy.record\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh, there is support for ctypes.addressof in nopython?",
  "id": "5b073184aaafa25932b38fa9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:41:24.130Z",
  "text": "oh, there is support for ctypes.addressof in nopython?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "in the unboxing, you can call python C-API",
  "id": "5b07319fd88b24150d322e55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:41:51.191Z",
  "text": "in the unboxing, you can call python C-API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it is the transition from the python interpreter into nopython",
  "id": "5b0731b36309af743d0fed07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:42:11.524Z",
  "text": "it is the transition from the python interpreter into nopython",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "so ctypes.addressof gets automatically boiled down to the capi?",
  "id": "5b0731cf96af8f1186ca05ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:42:39.982Z",
  "text": "so ctypes.addressof gets automatically boiled down to the capi?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "no, you will need to write LLVM IR for the equivalent C-API calls",
  "id": "5b0731ecaaafa25932b390ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:43:08.516Z",
  "text": "no, you will need to write LLVM IR for the equivalent C-API calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "inside the unbox function",
  "id": "5b0731f39ed336150eaacf67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:43:15.168Z",
  "text": "inside the unbox function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that\u2019s what the <code>c.pyapi</code> is for",
  "id": "5b0732082817b43087c6a5b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:43:36.422Z",
  "text": "that\u2019s what the `c.pyapi` is for",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "In the Interval example<pre><code>\n<span class=\"decorator\">@unbox(IntervalType)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">unbox_interval</span><span class=\"params\">(typ, obj, c)</span>:</span>\n    <span class=\"string\">\"\"\"\n    Convert a Interval object to a native interval structure.\n    \"\"\"</span>\n    lo_obj = c.pyapi.object_getattr_string(obj, <span class=\"string\">\"lo\"</span>)\n    hi_obj = c.pyapi.object_getattr_string(obj, <span class=\"string\">\"hi\u201d)</span></code></pre>",
  "id": "5b073213ee623e2e41ff7c31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:43:47.487Z",
  "text": "In the Interval example\n```\n\n@unbox(IntervalType)\ndef unbox_interval(typ, obj, c):\n    \"\"\"\n    Convert a Interval object to a native interval structure.\n    \"\"\"\n    lo_obj = c.pyapi.object_getattr_string(obj, \"lo\")\n    hi_obj = c.pyapi.object_getattr_string(obj, \"hi\u201d)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>c.pyapi.object_getattr_string</code> is emitting the LLVMIR to do the <code>PyObject_GetAttrString</code> call ",
  "id": "5b0732312942532e42dcf373",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:44:17.124Z",
  "text": "`c.pyapi.object_getattr_string` is emitting the LLVMIR to do the `PyObject_GetAttrString` call ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "yea, I am just not sure what you mean by &#39;just using ctypes.addressof&#39;",
  "id": "5b07323c6309af743d0feef0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:44:28.023Z",
  "text": "yea, I am just not sure what you mean by 'just using ctypes.addressof'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "using it in a meta level",
  "id": "5b0732bfd88b24150d32324d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:46:39.987Z",
  "text": "using it in a meta level",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "can you be more specific? I am not sure what meta refers to",
  "id": "5b07330cd96cfd743ebb698e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:47:56.441Z",
  "text": "can you be more specific? I am not sure what meta refers to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "you will need to write the LLVM IR for the equivalent C-API calls",
  "id": "5b07332a2817b43087c6a9cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:48:26.735Z",
  "text": "you will need to write the LLVM IR for the equivalent C-API calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "are you saying to have pyapi call ctypes.addressof?",
  "id": "5b0733349ed336150eaad541",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:48:36.052Z",
  "text": "are you saying to have pyapi call ctypes.addressof?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes",
  "id": "5b07333d2942532e42dcf85b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:48:45.285Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "wouldn&#39;t that be more brittle than get_buffer? all ctypes objects support the buffer api",
  "id": "5b0733705f3e6b40fae1ff18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:49:36.787Z",
  "text": "wouldn't that be more brittle than get_buffer? all ctypes objects support the buffer api",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "not really.  and I thk <code>get_buffer</code> is just hard to use for your case.",
  "id": "5b0733dad88b24150d323790",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:51:22.541Z",
  "text": "not really.  and I thk `get_buffer` is just hard to use for your case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ok, I&#39;ll have a look",
  "id": "5b0733f69ed336150eaad7e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:51:50.438Z",
  "text": "ok, I'll have a look",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "so you are talking about pyapi.call() right?",
  "id": "5b0734b1ee623e2e41ff8444",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:54:57.367Z",
  "text": "so you are talking about pyapi.call() right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "you will need <code>import_module_noblock</code> to import <code>ctypes</code>, <code>object_getattr_string</code> to get to the <code>addressof</code>, and then the <code>call</code>",
  "id": "5b0735a25f3e6b40fae20632",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:58:58.671Z",
  "text": "you will need `import_module_noblock` to import `ctypes`, `object_getattr_string` to get to the `addressof`, and then the `call`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ah, thanks",
  "id": "5b0735b996af8f1186ca1373",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T21:59:21.213Z",
  "text": "ah, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "should I just simply pyapi.incref(obj) and decref(obj) in the cleanup()?",
  "id": "5b07376a6309af743d0ffea0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T22:06:34.690Z",
  "text": "should I just simply pyapi.incref(obj) and decref(obj) in the cleanup()?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "that would avoid MemInfo",
  "id": "5b07377c60209a1187e00ff7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T22:06:52.263Z",
  "text": "that would avoid MemInfo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that should work for most cases.  for simplicity start to just that.",
  "id": "5b073813b435f21fb8c5b4c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T22:09:23.729Z",
  "text": "that should work for most cases.  for simplicity start to just that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "cool, ok, one last thing for now: if the jitted function returns the Structure it will try and box it rather than return the original object. Is there a way of keeping track of that?",
  "id": "5b07385cee623e2e41ff91da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-24T22:10:36.626Z",
  "text": "cool, ok, one last thing for now: if the jitted function returns the Structure it will try and box it rather than return the original object. Is there a way of keeping track of that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Store the original object along with the nopython value of the Structure.  The numpy.array support does just that",
  "id": "5b0738a696af8f1186ca1bdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T22:11:50.476Z",
  "text": "Store the original object along with the nopython value of the Structure.  The numpy.array support does just that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ok, and just do a lookup in the box function?",
  "id": "5b0738c6d96cfd743ebb7bda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T22:12:22.517Z",
  "text": "ok, and just do a lookup in the box function?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes",
  "id": "5b0738cf3815f70bffd770f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T22:12:31.683Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "do you happen to know where the numpy array boxing function is?",
  "id": "5b07391a752aff593111a827",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T22:13:46.280Z",
  "text": "do you happen to know where the numpy array boxing function is?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "All the boxing code is in boxing.py",
  "id": "5b07393c97a0361fb760c8a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T22:14:20.207Z",
  "text": "All the boxing code is in boxing.py",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s the <code>box_array</code>",
  "id": "5b07394497a0361fb760c8d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T22:14:28.052Z",
  "text": "it\u2019s the `box_array`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "huh, sorry, I don&#39;t see how that is storing a reference to the objects",
  "id": "5b073a10752aff593111aae8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T22:17:52.574Z",
  "text": "huh, sorry, I don't see how that is storing a reference to the objects",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<code>CPUContext.load_additional_registries</code> doesn&#39;t appear to be the correct place to import my ctypesimpl file",
  "id": "5b074b589ed336150eab214b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T23:31:36.537Z",
  "text": "`CPUContext.load_additional_registries` doesn't appear to be the correct place to import my ctypesimpl file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<code>CPUContext.refresh</code> is not called before typing begins",
  "id": "5b074b7fee623e2e41ffc8d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T23:32:15.852Z",
  "text": "`CPUContext.refresh` is not called before typing begins",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "am I expected to put my boxing functions in boxing.py and my typeof function in typeof.py?",
  "id": "5b074bb4d88b24150d3289fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-24T23:33:08.068Z",
  "text": "am I expected to put my boxing functions in boxing.py and my typeof function in typeof.py?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I have 3 nice and easy PRs waiting for you :)",
  "id": "5b07ff806fcbaf377df82c83",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-25T12:20:16.437Z",
  "text": "@stuartarchibald I have 3 nice and easy PRs waiting for you :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> thanks, am looking now!",
  "id": "5b0d3e98edd06f7d15f112f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T11:50:48.607Z",
  "text": "@ehsantn thanks, am looking now!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> all done, few minor comments but largely good to merge.",
  "id": "5b0d442b52e35117cdedaec3",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T12:14:35.351Z",
  "text": "@ehsantn all done, few minor comments but largely good to merge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , will update them soon.",
  "id": "5b0d5f0c016ae21a4cf2409d",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T14:09:16.528Z",
  "text": "thanks @stuartarchibald , will update them soon.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, we don&#39;t differentiate between <code>np.bool</code> and <code>np.bool_</code>, but some NumPy functions return different types depending on which is in use",
  "id": "5b0d6f26361a950a6624cc73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T15:17:58.440Z",
  "text": "hmmm, we don't differentiate between `np.bool` and `np.bool_`, but some NumPy functions return different types depending on which is in use",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and this also breaks:<pre><code>In [<span class=\"number\">52</span>]: zero = np.bool_(<span class=\"number\">0</span>)\n\nIn [<span class=\"number\">53</span>]: <span class=\"decorator\">@njit</span>\n    ...: <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">()</span>:</span>\n    ...:     <span class=\"keyword\">return</span> zero\n\nIn [<span class=\"number\">54</span>]: foo()\n\nRuntimeError: Failed at nopython (nopython mode backend)\nLLVM IR parsing error\n&lt;string&gt;:<span class=\"number\">15</span>:<span class=\"number\">12</span>: error: expected value token\n  store i1 <span class=\"keyword\">False</span>, i1* %<span class=\"string\">\"$0.1\"</span></code></pre>",
  "id": "5b0d7021e26c847ac89e3f5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T15:22:09.119Z",
  "text": "and this also breaks:\n```\nIn [52]: zero = np.bool_(0)\n\nIn [53]: @njit\n    ...: def foo():\n    ...:     return zero\n\nIn [54]: foo()\n\nRuntimeError: Failed at nopython (nopython mode backend)\nLLVM IR parsing error\n<string>:15:12: error: expected value token\n  store i1 False, i1* %\"$0.1\"\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span> , boxing functions should go in boxing.py",
  "id": "5b0d70aaba1a351a68d2a02a",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T15:24:26.397Z",
  "text": "@innovate-invent , boxing functions should go in boxing.py",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> Thanks, can you also point out how box_array stores a reference to the original object?",
  "id": "5b0d9fc9016ae21a4cf35791",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T18:45:29.985Z",
  "text": "@sklam Thanks, can you also point out how box_array stores a reference to the original object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It\u2019s stored as <code>parent</code> in the datamodel. see <a href=\"https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L841\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L841</a>",
  "id": "5b0da044016ae21a4cf35931",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T18:47:32.259Z",
  "text": "It\u2019s stored as `parent` in the datamodel. see https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L841",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/datamodel/models.py#L841"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "oh!, thanks I totally missed that",
  "id": "5b0da2bbba1a351a68d37a1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T18:58:03.963Z",
  "text": "oh!, thanks I totally missed that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I guess that&#39;s a bit of an issue then, the datamodel can&#39;t contain any extra information as the members can only be the members in the ctypes struct",
  "id": "5b0da9a2160c567d16e9032c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-29T19:27:30.883Z",
  "text": "I guess that's a bit of an issue then, the datamodel can't contain any extra information as the members can only be the members in the ctypes struct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "Is there existing machinery to support this?",
  "id": "5b0dad36a7abc8692ef3d7e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:42:46.828Z",
  "text": "Is there existing machinery to support this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "you can stuff the ctypes struct as a pointer in the nopython object.  e.g.",
  "id": "5b0dadc7e26c847ac89f3c31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:45:11.991Z",
  "text": "you can stuff the ctypes struct as a pointer in the nopython object.  e.g.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<pre><code class=\"c\"><span class=\"keyword\">struct</span> NumbaCTypeStruct{\n    <span class=\"keyword\">struct</span> CtypeStructPayload {\n        <span class=\"comment\">/* _fields_ */</span>\n    }        *payload;\n    PyObject *parent;\n};</code></pre>",
  "id": "5b0dadcbb6eece791dc241e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:45:15.539Z",
  "text": "```C\nstruct NumbaCTypeStruct{\n    struct CtypeStructPayload {\n        /* _fields_ */\n    }        *payload;\n    PyObject *parent;\n};\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s a common pattern in numba for container types",
  "id": "5b0dae04a45f930a65e52443",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:46:12.010Z",
  "text": "it\u2019s a common pattern in numba for container types",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "how would that interact with the member access in nopython",
  "id": "5b0dae08edd06f7d15f2f716",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:46:16.017Z",
  "text": "how would that interact with the member access in nopython",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "does GEP follow pointers?",
  "id": "5b0dae1593dc78791c95daa9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:46:29.716Z",
  "text": "does GEP follow pointers?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "er, no",
  "id": "5b0dae204eaffb692d663e3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:46:40.288Z",
  "text": "er, no",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "just need another load ",
  "id": "5b0dae40edd06f7d15f2f75b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:47:12.330Z",
  "text": "just need another load ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "there would need to be something to tell to look in payload for member access",
  "id": "5b0dae504eaffb692d663f06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:47:28.328Z",
  "text": "there would need to be something to tell to look in payload for member access",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes, you\u2019ll have to write the implementation of <code>getattr</code>",
  "id": "5b0dae87a45f930a65e525a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:48:23.698Z",
  "text": "yes, you\u2019ll have to write the implementation of `getattr`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "ok, cool",
  "id": "5b0daeb3c712f56125413666",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:49:07.479Z",
  "text": "ok, cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "About putting everything in boxing.py, have you had a chance to look at <span data-link-type=\"issue\" data-issue=\"2980\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2980</span>",
  "id": "5b0daf8c52e35117cdef798e",
  "issues": [
   {
    "number": "2980",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:52:44.427Z",
  "text": "About putting everything in boxing.py, have you had a chance to look at [my suggestion](https://github.com/numba/numba/issues/2980)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "I feel like things are becoming quite disorganised",
  "id": "5b0dafb7e26c847ac89f4419",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T19:53:27.535Z",
  "text": "I feel like things are becoming quite disorganised",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: <span data-link-type=\"issue\" data-issue=\"2998\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2998</span> ultimately seems to be due to conda-forge building llvmdev without the SVML patch.  I&#39;m hoping this will prod them into including it, but <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> and I are trying to think of a way to detect if LLVM was not patched, and then have Numba automatically disable the SVML support in that case.",
  "id": "5b0db74052e35117cdef9954",
  "issues": [
   {
    "number": "2998",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T20:25:36.807Z",
  "text": "@stuartarchibald: https://github.com/numba/numba/issues/2998 ultimately seems to be due to conda-forge building llvmdev without the SVML patch.  I'm hoping this will prod them into including it, but @sklam and I are trying to think of a way to detect if LLVM was not patched, and then have Numba automatically disable the SVML support in that case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "To protect against cases where someone has built LLVM not using our recipe.",
  "id": "5b0db755edd06f7d15f31777",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-29T20:25:57.471Z",
  "text": "To protect against cases where someone has built LLVM not using our recipe.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Re <span data-link-type=\"issue\" data-issue=\"3003\" class=\"issue\">#3003</span>, I&#39;m impressed that CuPy&#39;s kernel launch overhead is so low.",
  "id": "5b0eaba3a45f930a65e89ec3",
  "issues": [
   {
    "number": "3003"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-30T13:48:19.786Z",
  "text": "Re #3003, I'm impressed that CuPy's kernel launch overhead is so low.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Looks like we need to turn the release crank tomorrow if possible: <span data-link-type=\"issue\" data-issue=\"3006\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3006</span>",
  "id": "5b0ff745016ae21a4cfb6b24",
  "issues": [
   {
    "number": "3006",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T13:23:17.465Z",
  "text": "@sklam: Looks like we need to turn the release crank tomorrow if possible: https://github.com/numba/numba/issues/3006",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> is working on the required patches now, but we&#39;ll need to put out both a new Numba and new llvmlite.",
  "id": "5b0ff764e26c847ac8a71dbe",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T13:23:48.251Z",
  "text": "@stuartarchibald is working on the required patches now, but we'll need to put out both a new Numba and new llvmlite.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "testing this is going to be interesting",
  "id": "5b1006acb6eece791dca9b0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T14:29:00.210Z",
  "text": "testing this is going to be interesting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I guess I can try conda forge <code>llvm-dev</code> vs Anaconda <code>llvm-dev</code>",
  "id": "5b1008f3016ae21a4cfbb782",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T14:38:43.426Z",
  "text": "I guess I can try conda forge `llvm-dev` vs Anaconda `llvm-dev`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I think that&#39;s the best approach",
  "id": "5b100cfcc712f56125497989",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T14:55:56.812Z",
  "text": "yeah, I think that's the best approach",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "since that&#39;s how conda-forge llvmlite is built",
  "id": "5b100d0f352b9e1a4b49ec56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T14:56:15.845Z",
  "text": "since that's how conda-forge llvmlite is built",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: I&#39;ve made a <code>0.38-patches</code> branch in the Numba repo (branching off 0.38.0), so you can make a PR that corresponds to the llvmlite change against that branch.  Then we can tag 0.38.1 off that branch and also merge the branch to master when we are done.",
  "id": "5b1043f44eaffb692d6f6861",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T18:50:28.976Z",
  "text": "@stuartarchibald: I've made a `0.38-patches` branch in the Numba repo (branching off 0.38.0), so you can make a PR that corresponds to the llvmlite change against that branch.  Then we can tag 0.38.1 off that branch and also merge the branch to master when we are done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "What are your guys plans for the flake8 compliance autoformatting?",
  "id": "5b104ac6a45f930a65ee8859",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T19:19:34.879Z",
  "text": "What are your guys plans for the flake8 compliance autoformatting?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "We want to do it, but I think it will need to be post SciPy",
  "id": "5b105e98e26c847ac8a8bec7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-05-31T20:44:08.936Z",
  "text": "We want to do it, but I think it will need to be post SciPy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "or doing it incrementally over many PRs",
  "id": "5b105ea9352b9e1a4b4b2a9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-31T20:44:25.277Z",
  "text": "or doing it incrementally over many PRs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "The disruption to the currently open PRs would be bad.  The best time to do it is right after a release, when our active PR count is the smallest.",
  "id": "5b105edcb6eece791dcbfbe4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-31T20:45:16.463Z",
  "text": "The disruption to the currently open PRs would be bad.  The best time to do it is right after a release, when our active PR count is the smallest.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "After a release means after v1.0? I am just trying to figure out if it is worth working on <span data-link-type=\"issue\" data-issue=\"2980\" class=\"issue\">#2980</span> ",
  "id": "5b10ccbb99fa7f4c063684b9",
  "issues": [
   {
    "number": "2980"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-01T04:34:03.694Z",
  "text": "After a release means after v1.0? I am just trying to figure out if it is worth working on #2980 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span> We do point releases on an approximate 6 week cadence, 0.38 was the last release, it went out a few weeks back (and announced on the mailing list) <a href=\"https://groups.google.com/a/continuum.io/d/msg/numba-users/p0aVKVUDIWI/2j0CxHiPAwAJ\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://groups.google.com/a/continuum.io/d/msg/numba-users/p0aVKVUDIWI/2j0CxHiPAwAJ</a>. You can see all past releases here <a href=\"https://github.com/numba/numba/releases\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/releases</a>, they are also tagged in the git history,  and the change log is here <a href=\"https://github.com/numba/numba/blob/master/CHANGE_LOG\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/CHANGE_LOG</a>. The next scheduled release date is shown at the bottom of the Numba core developer meeting  minutes, these are publicly available here: <a href=\"https://github.com/numba/numba/wiki/Meeting-Minutes\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/wiki/Meeting-Minutes</a> , and for reference: <code>Next Release: Version 0.39, RC=June 18, 2018, Final=June 25, 2018</code>. Please do note that sometimes release dates  can move about a bit if we hit critical problems when approaching the RC code freeze (like hardware failures/build farm issues/last minute critical bugs etc), if the deviation is large it is communicated via the mailing list.",
  "id": "5b110e0a93dc78791ca15255",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-01T09:12:42.400Z",
  "text": "@innovate-invent We do point releases on an approximate 6 week cadence, 0.38 was the last release, it went out a few weeks back (and announced on the mailing list) https://groups.google.com/a/continuum.io/d/msg/numba-users/p0aVKVUDIWI/2j0CxHiPAwAJ. You can see all past releases here https://github.com/numba/numba/releases, they are also tagged in the git history,  and the change log is here https://github.com/numba/numba/blob/master/CHANGE_LOG. The next scheduled release date is shown at the bottom of the Numba core developer meeting  minutes, these are publicly available here: https://github.com/numba/numba/wiki/Meeting-Minutes , and for reference: `Next Release: Version 0.39, RC=June 18, 2018, Final=June 25, 2018`. Please do note that sometimes release dates  can move about a bit if we hit critical problems when approaching the RC code freeze (like hardware failures/build farm issues/last minute critical bugs etc), if the deviation is large it is communicated via the mailing list.",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/a/continuum.io/d/msg/numba-users/p0aVKVUDIWI/2j0CxHiPAwAJ"
   },
   {
    "url": "https://github.com/numba/numba/releases"
   },
   {
    "url": "https://github.com/numba/numba/blob/master/CHANGE_LOG"
   },
   {
    "url": "https://github.com/numba/numba/wiki/Meeting-Minutes"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> the SVML detection stuff appears to be working if you want to take a look ?",
  "id": "5b114fff99fa7f4c06385d09",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T13:54:07.158Z",
  "text": "@seibert the SVML detection stuff appears to be working if you want to take a look ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Excellent!  So the test on Windows worked?",
  "id": "5b1150324eaffb692d72e0d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T13:54:57.999Z",
  "text": "Excellent!  So the test on Windows worked?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Seemed to, built 2x llvms, one with the patch, one without, then built llvmlites against them, one reported True, the other False",
  "id": "5b11506993dc78791ca254a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T13:55:53.086Z",
  "text": "Seemed to, built 2x llvms, one with the patch, one without, then built llvmlites against them, one reported True, the other False",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Should we test linux or OSX the same?",
  "id": "5b11508852e35117cdfc2f2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T13:56:24.785Z",
  "text": "Should we test linux or OSX the same?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I&#39;m ok with just Windows, but can you also check the Numba half of it?",
  "id": "5b115093016ae21a4c001f3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T13:56:35.717Z",
  "text": "I'm ok with just Windows, but can you also check the Numba half of it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, I&#39;ll pull down the Numba patch and manually test it",
  "id": "5b1150a7f9f2e56cf23196a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T13:56:55.103Z",
  "text": "yeah, I'll pull down the Numba patch and manually test it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "also good to verify that we do see the bug with Numba 0.38 and your llvmlite w/o SVML",
  "id": "5b11511c361a950a6632a50f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T13:58:52.336Z",
  "text": "also good to verify that we do see the bug with Numba 0.38 and your llvmlite w/o SVML",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah yes, I think I&#39;d need to build llvmlite master against llvm w/o svml patch, then install numba and icc_rt and then use one of the sample broken things from the ticket?",
  "id": "5b11516c4eaffb692d72e54a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T14:00:12.217Z",
  "text": "ah yes, I think I'd need to build llvmlite master against llvm w/o svml patch, then install numba and icc_rt and then use one of the sample broken things from the ticket?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, and if you have the llvmlite w/o svml already built, that&#39;s one less thing :)",
  "id": "5b115195016ae21a4c002613",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T14:00:53.123Z",
  "text": "yeah, and if you have the llvmlite w/o svml already built, that's one less thing :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "you almost certainly have icc_rt already in the Windows environment due to the Fortran thing",
  "id": "5b1151ae352b9e1a4b4e5284",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T14:01:18.998Z",
  "text": "you almost certainly have icc_rt already in the Windows environment due to the Fortran thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes. I&#39;ll do the numba patch verification first",
  "id": "5b1151d752e35117cdfc34f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T14:01:59.219Z",
  "text": "yes. I'll do the numba patch verification first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "at some point we should bake the buildstring from llvmdev into llvmlite",
  "id": "5b11566152e35117cdfc4b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T14:21:21.975Z",
  "text": "at some point we should bake the buildstring from llvmdev into llvmlite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I <em>think</em> we are almost good to go with the SVML critical bug patches now.",
  "id": "5b11607a016ae21a4c00607e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T15:04:26.876Z",
  "text": "I *think* we are almost good to go with the SVML critical bug patches now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok great!",
  "id": "5b11702ff9f2e56cf2322a1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-06-01T16:11:27.198Z",
  "text": "ok great!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I have an external function that returns boolean. Calling it results in <code>Storing i8 to ptr of i1 (&#39;$0.4&#39;). FE type bool</code> error. Any idea?",
  "id": "5b16b63d016ae21a4c10ec47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:11:41.437Z",
  "text": "I have an external function that returns boolean. Calling it results in `Storing i8 to ptr of i1 ('$0.4'). FE type bool` error. Any idea?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>bool</code> type is represented differently depending on for it is used for",
  "id": "5b16b6cbe26c847ac8bc71e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:14:03.000Z",
  "text": "the `bool` type is represented differently depending on for it is used for",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "as argument and return type, it is a <code>i8</code>",
  "id": "5b16b6daedd06f7d15104c87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:14:18.294Z",
  "text": "as argument and return type, it is a `i8`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "as just plain value inside a function, it\u2019s a <code>i1</code>",
  "id": "5b16b6ec22a05f5e7102851c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:14:36.352Z",
  "text": "as just plain value inside a function, it\u2019s a `i1`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "why is this inconsistency necessary?",
  "id": "5b16b737b6eece791ddfb751",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:15:51.000Z",
  "text": "why is this inconsistency necessary?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>i8</code> for ABI requirement, addressability.  <code>i1</code> for what it really is and what llvm branch inst actually takes as the condition.",
  "id": "5b16b798016ae21a4c10f300",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:17:28.661Z",
  "text": "`i8` for ABI requirement, addressability.  `i1` for what it really is and what llvm branch inst actually takes as the condition.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "how can we convert between the two in high-level APIs?",
  "id": "5b16b7ceedd06f7d151050ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:18:22.967Z",
  "text": "how can we convert between the two in high-level APIs?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<pre><code class=\"python\">datamodel = target_context.data_model_manager[types.Boolean]</code></pre>gives <code>datamodel</code> as a BooleanModel in <a href=\"https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/datamodel/models.py#L167-L199\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/datamodel/models.py#L167-L199</a>.  Use one of the <code>as_*</code> or <code>from_*</code> to convert between different representation.",
  "id": "5b16b880016ae21a4c10f854",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:21:20.940Z",
  "text": "```python\ndatamodel = target_context.data_model_manager[types.Boolean]\n```\ngives `datamodel` as a BooleanModel in https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/datamodel/models.py#L167-L199.  Use one of the `as_*` or `from_*` to convert between different representation.\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/datamodel/models.py#L167-L199"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "^ that\u2019s for manual conversion",
  "id": "5b16b8ac93dc78791cb32e48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:22:04.994Z",
  "text": "^ that\u2019s for manual conversion\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "For handling function call ABI, use the <code>target_context.call_conv</code> (<a href=\"https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/cpu.py#L76-L77\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/cpu.py#L76-L77</a>)",
  "id": "5b16b8d235e25f39974f4458",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:22:42.366Z",
  "text": "For handling function call ABI, use the `target_context.call_conv` (https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/cpu.py#L76-L77)\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/cpu.py#L76-L77"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-06-05T16:23:48.938Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Which has <code>.call_function</code> (<a href=\"https://github.com/numba/numba/blob/master/numba/targets/callconv.py#L440\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/callconv.py#L440</a>) to do all the work for the args and return-values.",
  "id": "5b16b90da45f930a6502c254",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:23:41.096Z",
  "text": "Which has `.call_function` (https://github.com/numba/numba/blob/master/numba/targets/callconv.py#L440) to do all the work for the args and return-values.\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/callconv.py#L440"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Also look at the <code>.call_*</code> methods of the target-context to see if one of them matches your need already",
  "id": "5b16b97752e35117cd0d2c11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:25:27.557Z",
  "text": "Also look at the `.call_*` methods of the target-context to see if one of them matches your need already\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i.e. <a href=\"https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/base.py#L699-L703\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/base.py#L699-L703</a>",
  "id": "5b16b97f52e35117cd0d2c25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:25:35.400Z",
  "text": "i.e. https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/base.py#L699-L703\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/f9089c2dc5c70a31fd5539ec2696810e79198c14/numba/targets/base.py#L699-L703"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "ok, thanks",
  "id": "5b16b9c122a05f5e7102900c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:26:41.347Z",
  "text": "ok, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I&#39;m trying to stay in <code>overload</code> land so I&#39;ll probably write a little intrinsic",
  "id": "5b16b9d5b0d8ca5f1a7faf86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:27:01.427Z",
  "text": "I'm trying to stay in `overload` land so I'll probably write a little intrinsic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "But this is fragile. We have to think about automating it.",
  "id": "5b16b9f1016ae21a4c10fe06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:27:29.356Z",
  "text": "But this is fragile. We have to think about automating it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "r u calling a C function pointer from a <code>overload</code> function?",
  "id": "5b16b9fd35e25f39974f4843",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:27:41.589Z",
  "text": "r u calling a C function pointer from a `overload` function?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "yes",
  "id": "5b16ba09b6eece791ddfc1a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:27:53.062Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "not using <code>ctypes</code>/<code>cffi</code>?",
  "id": "5b16ba1752e35117cd0d2e8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:28:07.575Z",
  "text": "not using `ctypes`/`cffi`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "no",
  "id": "5b16ba8116f64961240bd278",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:29:53.072Z",
  "text": "no",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "just using types.External with LLVM function pointer",
  "id": "5b16ba97160c567d16063aa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:30:15.028Z",
  "text": "just using types.External with LLVM function pointer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, so it\u2019s going through the <code>.call_external_function</code>",
  "id": "5b16bae3b0d8ca5f1a7fb420",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:31:31.771Z",
  "text": "oh, so it\u2019s going through the `.call_external_function`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s likely a bug then",
  "id": "5b16bae999fa7f4c06490c92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:31:37.065Z",
  "text": "it\u2019s likely a bug then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "hopefully, it is an isolated bug there. It looks quite scary otherwise.",
  "id": "5b16bb3d99fa7f4c06490dcd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:33:01.998Z",
  "text": "hopefully, it is an isolated bug there. It looks quite scary otherwise.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I thk it\u2019s a simple one.  I opened <span data-link-type=\"issue\" data-issue=\"3014\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3014</span>",
  "id": "5b16bbfe22a05f5e71029809",
  "issues": [
   {
    "number": "3014",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:36:14.240Z",
  "text": "I thk it\u2019s a simple one.  I opened https://github.com/numba/numba/issues/3014",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "think it&#39;s the same bug that I fixed for generators last release?",
  "id": "5b16bc5f352b9e1a4b5f2b57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:37:51.128Z",
  "text": "think it's the same bug that I fixed for generators last release?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2340\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2340</span> <span data-link-type=\"issue\" data-issue=\"2684\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2684</span> ?",
  "id": "5b16bc7752e35117cd0d36e9",
  "issues": [
   {
    "number": "2340",
    "repo": "numba/numba"
   },
   {
    "number": "2684",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:38:15.075Z",
  "text": "https://github.com/numba/numba/issues/2340 https://github.com/numba/numba/pull/2684 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "we probably ought to have a think about if there&#39;s any other places where this is likely ?",
  "id": "5b16bca435e25f39974f5257",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:39:00.974Z",
  "text": "we probably ought to have a think about if there's any other places where this is likely ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "right, same bug in different places",
  "id": "5b16bcb193dc78791cb33d4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:39:13.397Z",
  "text": "right, same bug in different places",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah :S",
  "id": "5b16bd24016ae21a4c1109f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:41:08.956Z",
  "text": "yeah :S",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "is there merit in making that the default, or perhaps adding it as an option/adding another function that just does that?",
  "id": "5b16bdb8a45f930a6502d54b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:43:36.177Z",
  "text": "is there merit in making that the default, or perhaps adding it as an option/adding another function that just does that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "all the <code>.call_*</code> should have either use the <code>.call_conv</code> or do the conversion directly.",
  "id": "5b16be2822a05f5e7102a03f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-05T16:45:28.649Z",
  "text": "all the `.call_*` should have either use the `.call_conv` or do the conversion directly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "ping <span data-link-type=\"issue\" data-issue=\"2929\" class=\"issue\">#2929</span> please",
  "id": "5b199933a09ae108e6096b8a",
  "issues": [
   {
    "number": "2929"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-07T20:44:35.346Z",
  "text": "ping #2929 please",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "I think <span data-link-type=\"issue\" data-issue=\"2929\" class=\"issue\">#2929</span> addresses all the comments now!",
  "id": "5b1e159c144c8c6fea882d28",
  "issues": [
   {
    "number": "2929"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-11T06:24:28.200Z",
  "text": "I think #2929 addresses all the comments now!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> - I&#39;ve fixed your latest feedback on <span data-link-type=\"issue\" data-issue=\"2929\" class=\"issue\">#2929</span>",
  "id": "5b22cd04fd5b835b2d5c4e46",
  "issues": [
   {
    "number": "2929"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-14T20:16:04.318Z",
  "text": "Hi @sklam - I've fixed your latest feedback on #2929",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "I&#39;d like to get <span data-link-type=\"issue\" data-issue=\"2929\" class=\"issue\">#2929</span> into the next release if possible ",
  "id": "5b27ef9594a11e0adeaa92e4",
  "issues": [
   {
    "number": "2929"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-18T17:44:53.853Z",
  "text": "I'd like to get #2929 into the next release if possible ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2793\" class=\"issue\">#2793</span> is now fixed up and ready for review/to go in 0.39RC",
  "id": "5b28eaf759799e70172a0821",
  "issues": [
   {
    "number": "2793"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-19T11:37:27.354Z",
  "text": "#2793 is now fixed up and ready for review/to go in 0.39RC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(HTML Annotate)",
  "id": "5b28eb1fce3b0f268d295eb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-19T11:38:07.009Z",
  "text": "(HTML Annotate)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span>, <span data-link-type=\"issue\" data-issue=\"2929\" class=\"issue\">#2929</span> looks good on inspection and <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> is happy, however, there are some outstanding issues entirely unrelated to your work that are preventing proper testing. Do you mind if we (core devs) take over the branch and merge in stuff as needed to ensure that this makes it into the 0.39RC?",
  "id": "5b2cdee67d3bca737a00a6ba",
  "issues": [
   {
    "number": "2929"
   }
  ],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-22T11:35:02.144Z",
  "text": "@njwhite, #2929 looks good on inspection and @sklam is happy, however, there are some outstanding issues entirely unrelated to your work that are preventing proper testing. Do you mind if we (core devs) take over the branch and merge in stuff as needed to ensure that this makes it into the 0.39RC?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(thanks :))",
  "id": "5b2cdeebce3b0f268d381bf7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-22T11:35:07.195Z",
  "text": "(thanks :))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Go for it",
  "id": "5b2ce682d2abe466887faf8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-22T12:07:30.780Z",
  "text": "Go for it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> ",
  "id": "5b2ce698467bd7268c29fce1",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-22T12:07:52.616Z",
  "text": "@stuartarchibald ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Great, thanks!",
  "id": "5b2ce6f27da8cd7c8c636ac5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-22T12:09:22.697Z",
  "text": "Great, thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: I assume I can merge <span data-link-type=\"issue\" data-issue=\"3056\" class=\"issue\">#3056</span> and <span data-link-type=\"issue\" data-issue=\"3054\" class=\"issue\">#3054</span>?",
  "id": "5b32409e5862c35f47c97b06",
  "issues": [
   {
    "number": "3056"
   },
   {
    "number": "3054"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-26T13:33:18.065Z",
  "text": "@stuartarchibald: I assume I can merge #3056 and #3054?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> think <span data-link-type=\"issue\" data-issue=\"3056\" class=\"issue\">#3056</span> needs us to tag and build out llvmlite wheels? <span data-link-type=\"issue\" data-issue=\"3054\" class=\"issue\">#3054</span> is running in the farm, if it passes then yes, I think we can merge and update the change_log to accommodate.",
  "id": "5b32507ead21887018dfdd5c",
  "issues": [
   {
    "number": "3056"
   },
   {
    "number": "3054"
   }
  ],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-06-26T14:41:02.928Z",
  "text": "@seibert think #3056 needs us to tag and build out llvmlite wheels? #3054 is running in the farm, if it passes then yes, I think we can merge and update the change_log to accommodate.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Are we ready to tag and build llvmlite 0.24.0rc1?",
  "id": "5b33917ab9c2fb25570fddb0",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T13:30:34.969Z",
  "text": "@stuartarchibald: Are we ready to tag and build llvmlite 0.24.0rc1?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, think so",
  "id": "5b3392b0960fcd4eb927d227",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T13:35:44.406Z",
  "text": "@seibert, think so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "tagged and building",
  "id": "5b3394e3a288503b3de3cc77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T13:45:07.176Z",
  "text": "tagged and building",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Numba 0.39rc1 tagged",
  "id": "5b33a8d00168e70c08f37c39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T15:10:08.663Z",
  "text": "Numba 0.39rc1 tagged",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": ":fire: ",
  "id": "5b33a914479ca26689845b81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T15:11:16.601Z",
  "text": ":fire: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so, now 3 hours until packages live on numba channel?",
  "id": "5b33a9270168e70c08f37d2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T15:11:35.448Z",
  "text": "so, now 3 hours until packages live on numba channel?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the trickle should start in 9+6 minutes, full build out will be order of hours",
  "id": "5b33a950ce3b0f268d4807ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T15:12:16.659Z",
  "text": "the trickle should start in 9+6 minutes, full build out will be order of hours",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "We now do 66 primary CPU builds, and then 33 with SVML, and then another 66 CUDA builds",
  "id": "5b33ab507da8cd7c8c728f74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-27T15:20:48.489Z",
  "text": "We now do 66 primary CPU builds, and then 33 with SVML, and then another 66 CUDA builds",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, going to announce rc1, but note that an rc2 with the cuda.In fix is coming soon",
  "id": "5b34e903d2abe4668891d0db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-28T13:56:19.714Z",
  "text": "ok, going to announce rc1, but note that an rc2 with the cuda.In fix is coming soon",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, posted, now for rc2 :)",
  "id": "5b34ea95be98b1422410a46a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-28T14:03:01.807Z",
  "text": "ok, posted, now for rc2 :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "BTW, this tweet made me smile: <a href=\"https://twitter.com/danrothenberg/status/1006605827510276096\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://twitter.com/danrothenberg/status/1006605827510276096</a>",
  "id": "5b34ec3ab9c2fb2557131b8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-28T14:10:02.358Z",
  "text": "BTW, this tweet made me smile: https://twitter.com/danrothenberg/status/1006605827510276096",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/danrothenberg/status/1006605827510276096"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "The bittersweet part of this being that tiny tweaks can have that much impact... :)",
  "id": "5b34ee46ad21887018e60744",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-28T14:18:46.338Z",
  "text": "The bittersweet part of this being that tiny tweaks can have that much impact... :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fschlimb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=60",
   "displayName": "Frank Schlimbach",
   "gv": "4",
   "id": "5a8a99f7d73408ce4f8dbfb7",
   "url": "/fschlimb",
   "username": "fschlimb",
   "v": 10
  },
  "html": "I am writing an extension to numba to support a python package which uses lots of default/keyword arguments. What&#39;s the best way to do this? Is there any documentation for such things? ",
  "id": "5b36170559799e70174c40ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-29T11:24:53.390Z",
  "text": "I am writing an extension to numba to support a python package which uses lots of default/keyword arguments. What's the best way to do this? Is there any documentation for such things? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "raising the ValueError from stdlib for, well, value errors, means that all the markup and numba-being-helpful stuff doesn&#39;t happen",
  "id": "5b3661440168e70c08faa05a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-29T16:41:40.826Z",
  "text": "raising the ValueError from stdlib for, well, value errors, means that all the markup and numba-being-helpful stuff doesn't happen",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "whilst not splendidly pythonic, any views on having a <code>numba.errors.ValueError</code> which inherits all the backtrace magic?",
  "id": "5b366171ce3b0f268d4e9101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-06-29T16:42:25.543Z",
  "text": "whilst not splendidly pythonic, any views on having a `numba.errors.ValueError` which inherits all the backtrace magic?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fschlimb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=60",
   "displayName": "Frank Schlimbach",
   "gv": "4",
   "id": "5a8a99f7d73408ce4f8dbfb7",
   "url": "/fschlimb",
   "username": "fschlimb",
   "v": 10
  },
  "html": "<p>Coming back to my keyword question above.<br>I&#39;d like to do something like the following, but numba does not accept keyword args for overloads:</p><pre><code><span class=\"keyword\">import</span> numba\n<span class=\"keyword\">from</span> numba.extending <span class=\"keyword\">import</span> overload\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ff</span><span class=\"params\">(*args, **kwargs)</span>:</span>\n    <span class=\"keyword\">return</span> <span class=\"number\">0</span>\n\n<span class=\"decorator\">@overload(ff)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ol_ff</span><span class=\"params\">(*args, **kwargs)</span>:</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ol_ff_impl</span><span class=\"params\">(*args, **kwargs)</span>:</span>\n       <span class=\"keyword\">return</span> <span class=\"number\">1</span>\n    <span class=\"keyword\">return</span> ol_ff_impl\n\n<span class=\"decorator\">@numba.jit(nopython=True)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span><span class=\"params\">()</span>:</span>\n    <span class=\"keyword\">return</span> ff(<span class=\"number\">3</span>,b=<span class=\"number\">4</span>)\n\nprint(f())</code></pre><p>Must I assume that <span data-link-type=\"issue\" data-issue=\"728\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#728</span> is about exactly this?<br>Any idea how I can get this done when I have the set of valid keyword args (and their default) only in a dict (or similar)? I cannot provide them in &quot;static&quot; code.</p>",
  "id": "5b3a12f43c5abf52b634e92e",
  "issues": [
   {
    "number": "728",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T11:56:36.022Z",
  "text": "Coming back to my keyword question above.\nI'd like to do something like the following, but numba does not accept keyword args for overloads:\n```\nimport numba\nfrom numba.extending import overload\n\ndef ff(*args, **kwargs):\n    return 0\n\n@overload(ff)\ndef ol_ff(*args, **kwargs):\n    def ol_ff_impl(*args, **kwargs):\n       return 1\n    return ol_ff_impl\n\n@numba.jit(nopython=True)\ndef f():\n    return ff(3,b=4)\n\nprint(f())\n```\nMust I assume that https://github.com/numba/numba/issues/728 is about exactly this?\nAny idea how I can get this done when I have the set of valid keyword args (and their default) only in a dict (or similar)? I cannot provide them in \"static\" code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: ^^^",
  "id": "5b3a261ed99c896d64df50f8",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T13:18:22.427Z",
  "text": "@sklam: ^^^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fschlimb\" class=\"mention\">@fschlimb</span> maybe pysignature feature could help, e.g. here: <a href=\"https://github.com/numba/numba/blob/master/numba/typing/npydecl.py#L357\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/typing/npydecl.py#L357</a>",
  "id": "5b3a31c063042f2df34f78eb",
  "issues": [],
  "mentions": [
   {
    "screenName": "fschlimb",
    "userId": "5a8a99f7d73408ce4f8dbfb7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T14:08:00.311Z",
  "text": "@fschlimb maybe pysignature feature could help, e.g. here: https://github.com/numba/numba/blob/master/numba/typing/npydecl.py#L357",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/typing/npydecl.py#L357"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I can&#39;t find documentation for it though",
  "id": "5b3a322ce534eb69a5c1426f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T14:09:48.480Z",
  "text": "I can't find documentation for it though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fschlimb\" class=\"mention\">@fschlimb</span> the implementation of <code>np.random.choice</code> should serve as an example: <a href=\"https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py?utf8=%E2%9C%93#L1296-L1376\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py?utf8=%E2%9C%93#L1296-L1376</a>",
  "id": "5b3a3ef93572e970c16f3dbf",
  "issues": [],
  "mentions": [
   {
    "screenName": "fschlimb",
    "userId": "5a8a99f7d73408ce4f8dbfb7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T15:04:25.479Z",
  "text": "@fschlimb the implementation of `np.random.choice` should serve as an example: https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py?utf8=%E2%9C%93#L1296-L1376",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/targets/randomimpl.py?utf8=%E2%9C%93#L1296-L1376"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fschlimb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=60",
   "displayName": "Frank Schlimbach",
   "gv": "4",
   "id": "5a8a99f7d73408ce4f8dbfb7",
   "url": "/fschlimb",
   "username": "fschlimb",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I must be missing something - I don&#39;t see how this example addresses the kwarg issue. I have a set of arguments and their defaults (and types) available in a dict/list. I want to provide a <span data-link-type=\"mention\" data-screen-name=\"overload\" class=\"mention\">@overload</span> (or whatever lower level mechanism I can use) which has access to that dict/list. I cannot &quot;unfold&quot; the dict/list when I write the code, the code must work on that dict/list.<br>Basically I&#39;d like to write a generic mechanism to type and lower objects/classes/methods given some specification. From a pure python perspective the only way to do this seems to be the use of &#39;**kwargs&#39; as it is not possible to spell out the keyword arguments.",
  "id": "5b3a64fe9b82c6701b9c6276",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   },
   {
    "screenName": "overload",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T17:46:38.896Z",
  "text": "@sklam I must be missing something - I don't see how this example addresses the kwarg issue. I have a set of arguments and their defaults (and types) available in a dict/list. I want to provide a @overload (or whatever lower level mechanism I can use) which has access to that dict/list. I cannot \"unfold\" the dict/list when I write the code, the code must work on that dict/list. \nBasically I'd like to write a generic mechanism to type and lower objects/classes/methods given some specification. From a pure python perspective the only way to do this seems to be the use of '**kwargs' as it is not possible to spell out the keyword arguments.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T17:53:32.850Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I misunderstood ur question.  <code>**kwargs</code> within nopython mode is supported yet.",
  "id": "5b3a65a3e534eb69a5c1dd77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T17:49:23.369Z",
  "text": "I misunderstood ur question.  `**kwargs` within nopython mode is supported yet.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "With a list, you can do <code>*args</code>.",
  "id": "5b3a65ace534eb69a5c1dd93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T17:49:32.293Z",
  "text": "With a list, you can do `*args`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "now that I think about it, a list may not work either.  It may have to be a <code>tuple</code>",
  "id": "5b3a65e181816669a42a1a74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T17:50:25.038Z",
  "text": "now that I think about it, a list may not work either.  It may have to be a `tuple`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-02T18:47:25.778Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fschlimb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=60",
   "displayName": "Frank Schlimbach",
   "gv": "4",
   "id": "5a8a99f7d73408ce4f8dbfb7",
   "url": "/fschlimb",
   "username": "fschlimb",
   "v": 10
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>  The challenge is this: assume we have 2 functions in python for which I have a C function (e.g. with the same name but without kwargs, obviously) that I want to lower the python funcs down to</p><pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f1</span><span class=\"params\">(x, y=<span class=\"number\">3</span>)</span>:</span>\n    ...\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f2</span><span class=\"params\">(z, a=<span class=\"number\">1</span>, b=<span class=\"number\">2</span>, c=<span class=\"number\">3.3</span>)</span>:</span>\n   ...</code></pre><p>Because I have not only 2 but many of such functions I&#39;d like to write a generic function/class to deal with the typing/lowering. I have something like this for the 2 functions above</p><pre><code>spec = [(<span class=\"string\">'f1'</span>, <span class=\"typename\">float64</span>, {<span class=\"string\">'x'</span>: (<span class=\"typename\">float64</span>, None), <span class=\"string\">'y'</span>: (<span class=\"typename\">int64</span>, <span class=\"number\">3</span>)}),\n        (<span class=\"string\">'f2'</span>, <span class=\"typename\">int32</span>, {<span class=\"string\">'z'</span>: (<span class=\"typename\">int32</span>, None), <span class=\"string\">'a'</span>: (<span class=\"typename\">int32</span>, <span class=\"string\">'1'</span>), <span class=\"string\">'b'</span>: (<span class=\"typename\">int64</span>, <span class=\"number\">2</span>), <span class=\"string\">'c'</span>: (<span class=\"typename\">float64</span>, <span class=\"number\">3.3</span>)}))</code></pre><p>With kwargs it seems fairly straight-forward to generate the typing and lowering code with just one class/method (reacting of one such config). Without support for kwargs I have no idea how to do this.</p>",
  "id": "5b3a72ddf16644066113929a",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T18:45:49.839Z",
  "text": "@sklam  The challenge is this: assume we have 2 functions in python for which I have a C function (e.g. with the same name but without kwargs, obviously) that I want to lower the python funcs down to\n```\ndef f1(x, y=3):\n    ...\ndef f2(z, a=1, b=2, c=3.3):\n   ...\n```\nBecause I have not only 2 but many of such functions I'd like to write a generic function/class to deal with the typing/lowering. I have something like this for the 2 functions above\n```\nspec = [('f1', float64, {'x': (float64, None), 'y': (int64, 3)}),\n        ('f2', int32, {'z': (int32, None), 'a': (int32, '1'), 'b': (int64, 2), 'c': (float64, 3.3)}))\n```\nWith kwargs it seems fairly straight-forward to generate the typing and lowering code with just one class/method (reacting of one such config). Without support for kwargs I have no idea how to do this.\n",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fschlimb\" class=\"mention\">@fschlimb</span> , you can do that with <code>@overload</code>:<pre><code class=\"python\"><span class=\"decorator\">@overload(the_function)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">example</span><span class=\"params\">(*args, **kwargs)</span>:</span>\n    ...</code></pre>",
  "id": "5b3a741933b0282df4fa2aaf",
  "issues": [],
  "mentions": [
   {
    "screenName": "fschlimb",
    "userId": "5a8a99f7d73408ce4f8dbfb7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T18:51:05.158Z",
  "text": "@fschlimb , you can do that with `@overload`:\n\n```python\n@overload(the_function)\ndef example(*args, **kwargs):\n    ...\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>*args</code> and <code>**kwargs</code> would be the types in a tuple and in a dict, respectively",
  "id": "5b3a7432d99c896d64e040e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T18:51:30.871Z",
  "text": "the `*args` and `**kwargs` would be the types in a tuple and in a dict, respectively",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "try this:<pre><code><span class=\"keyword\">from</span> numba <span class=\"keyword\">import</span> njit\n<span class=\"keyword\">from</span> numba.extending <span class=\"keyword\">import</span> overload\n\n\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foofunc</span><span class=\"params\">(a, b, c)</span>:</span>\n    <span class=\"keyword\">return</span> a + b + c\n\n\n<span class=\"decorator\">@overload(foofunc)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_ov_foofunc</span><span class=\"params\">(*args, **kwargs)</span>:</span>\n    print(<span class=\"string\">\"args, kwargs\"</span>, args, kwargs)\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">imp</span><span class=\"params\">(a, b=<span class=\"number\">10</span>, c=<span class=\"number\">100</span>)</span>:</span>\n        <span class=\"keyword\">return</span> a + b + c\n    <span class=\"keyword\">return</span> imp\n\n\n\n<span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bar</span><span class=\"params\">()</span>:</span>\n    <span class=\"keyword\">return</span> foofunc(a=<span class=\"number\">1</span>, b=<span class=\"number\">20</span>), foofunc(a=<span class=\"number\">1</span>)\n\nr = bar()\nprint(r)</code></pre>",
  "id": "5b3a74f0f1664406611399be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T18:54:40.311Z",
  "text": "try this:\n\n```\nfrom numba import njit\nfrom numba.extending import overload\n\n\n\ndef foofunc(a, b, c):\n    return a + b + c\n\n\n@overload(foofunc)\ndef _ov_foofunc(*args, **kwargs):\n    print(\"args, kwargs\", args, kwargs)\n    def imp(a, b=10, c=100):\n        return a + b + c\n    return imp\n\n\n\n@njit\ndef bar():\n    return foofunc(a=1, b=20), foofunc(a=1)\n\nr = bar()\nprint(r)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fschlimb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=60",
   "displayName": "Frank Schlimbach",
   "gv": "4",
   "id": "5a8a99f7d73408ce4f8dbfb7",
   "url": "/fschlimb",
   "username": "fschlimb",
   "v": 10
  },
  "html": "Hm. I cannot write things like &#39;def imp(a, b=10, c=100)&#39; because I do not know if the argument-names are &#39;a&#39;, &#39;b&#39; and &#39;c&#39; or &#39;x&#39;, &#39;y&#39; and &#39;z&#39;. The argument names are provided in the &#39;spec&#39; only! I can write the equivalent to &#39;return a + b + c&#39; because I can extract missing values from the configuration &#39;spec&#39;. The issue is that I don&#39;t know the argument names when writing the generic typing/lowering code.<pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">generic_overloader</span><span class=\"params\">(thefunc, theargs)</span>:</span>\n    <span class=\"decorator\">@overload(thefunc)</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_ov_generic</span><span class=\"params\">(*args, **kwargs)</span>:</span>\n        <span class=\"comment\"># do some type checking etc</span>\n        my_kwargs = kwargs\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">imp</span><span class=\"params\">(*args, **kwargs)</span>:</span>\n            my_kwargs.update(kwargs)\n            r = call_c(func, *args, **my_kwargs)\n        <span class=\"keyword\">return</span> imp\n\n<span class=\"comment\"># now let's type/lower 2 funcs accepting different kwargs</span>\ngeneric_overloader(foo, {<span class=\"string\">'x'</span>: (int32, <span class=\"number\">2</span>)})\ngeneric_overloader(bar, {<span class=\"string\">'zoo'</span>: (float64, <span class=\"number\">3.3</span>), <span class=\"string\">'tiger'</span>: (bool, <span class=\"keyword\">True</span>)})</code></pre>",
  "id": "5b3a877689db5e701c9c0cd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T20:13:42.709Z",
  "text": "Hm. I cannot write things like 'def imp(a, b=10, c=100)' because I do not know if the argument-names are 'a', 'b' and 'c' or 'x', 'y' and 'z'. The argument names are provided in the 'spec' only! I can write the equivalent to 'return a + b + c' because I can extract missing values from the configuration 'spec'. The issue is that I don't know the argument names when writing the generic typing/lowering code.\n```\ndef generic_overloader(thefunc, theargs):\n    @overload(thefunc)\n    def _ov_generic(*args, **kwargs):\n        # do some type checking etc\n        my_kwargs = kwargs\n        def imp(*args, **kwargs):\n            my_kwargs.update(kwargs)\n            r = call_c(func, *args, **my_kwargs)\n        return imp\n\n# now let's type/lower 2 funcs accepting different kwargs\ngeneric_overloader(foo, {'x': (int32, 2)})\ngeneric_overloader(bar, {'zoo': (float64, 3.3), 'tiger': (bool, True)})\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fschlimb\" class=\"mention\">@fschlimb</span> I think you need to generate functions with strings (&quot;metaprogramming&quot;)",
  "id": "5b3a99adf16644066113f3ff",
  "issues": [],
  "mentions": [
   {
    "screenName": "fschlimb",
    "userId": "5a8a99f7d73408ce4f8dbfb7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T21:31:25.062Z",
  "text": "@fschlimb I think you need to generate functions with strings (\"metaprogramming\")",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "for example: <a href=\"https://github.com/IntelLabs/hpat/blob/master/hpat/distributed_api.py#L67-L85\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/IntelLabs/hpat/blob/master/hpat/distributed_api.py#L67-L85</a>",
  "id": "5b3a9a49a99e1e52b7107004",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-02T21:34:01.371Z",
  "text": "for example: https://github.com/IntelLabs/hpat/blob/master/hpat/distributed_api.py#L67-L85",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/IntelLabs/hpat/blob/master/hpat/distributed_api.py#L67-L85"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fschlimb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=60",
   "displayName": "Frank Schlimbach",
   "gv": "4",
   "id": "5a8a99f7d73408ce4f8dbfb7",
   "url": "/fschlimb",
   "username": "fschlimb",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> Looks like this is what I have to do then...Thanks.",
  "id": "5b3b207333b0282df4fb7825",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T07:06:27.972Z",
  "text": "@ehsantn Looks like this is what I have to do then...Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<p>There&#39;s a choice in implementing the fixed size process pool for testing:</p><pre><code>./runtests<span class=\"class\">.py</span> -m &lt;must specify nprocs&gt; SOME_TESTS</code></pre><p>or</p><pre><code>./runtests<span class=\"class\">.py</span> -m -- SOME_TESTS\n./runtests<span class=\"class\">.py</span> -m &lt;can specify nprocs too&gt; -- SOME_TESTS</code></pre>",
  "id": "5b3b93e389db5e701c9e586a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T15:18:59.662Z",
  "text": "There's a choice in implementing the fixed size process pool for testing:\n```\n./runtests.py -m <must specify nprocs> SOME_TESTS\n```\nor\n```\n./runtests.py -m -- SOME_TESTS\n./runtests.py -m <can specify nprocs too> -- SOME_TESTS\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "anyone have a preference ?",
  "id": "5b3b93e93c5abf52b6388eaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T15:19:05.549Z",
  "text": "anyone have a preference ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "optional is good",
  "id": "5b3b94153d8f71623d5915e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T15:19:49.734Z",
  "text": "optional is good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "beware of py2 unittest arg parsing though",
  "id": "5b3b942533b0282df4fca7bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T15:20:05.459Z",
  "text": "beware of py2 unittest arg parsing though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks, I&#39;ll try that",
  "id": "5b3b967381816669a42ce82e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T15:29:55.146Z",
  "text": "thanks, I'll try that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Any chance <span data-link-type=\"issue\" data-issue=\"3073\" class=\"issue\">#3073</span> could be reviewed/merged please ?",
  "id": "5b3ba2b933b0282df4fcd395",
  "issues": [
   {
    "number": "3073"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T16:22:17.452Z",
  "text": "Any chance #3073 could be reviewed/merged please ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Unblocks release blocking issue <span data-link-type=\"issue\" data-issue=\"3072\" class=\"issue\">#3072</span>",
  "id": "5b3ba2ddf1664406611651d0",
  "issues": [
   {
    "number": "3072"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T16:22:53.019Z",
  "text": "Unblocks release blocking issue #3072",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "merged",
  "id": "5b3ba69d3c5abf52b638c984",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T16:38:53.613Z",
  "text": "merged",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>",
  "id": "5b3ba74570efc60660a9e225",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-03T16:41:41.172Z",
  "text": "thanks @sklam",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "For cutting 0.39, I think we need to:",
  "id": "5b3e20a370efc60660af84dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-07-05T13:44:03.806Z",
  "text": "For cutting 0.39, I think we need to:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "address this <span data-link-type=\"issue\" data-issue=\"3062\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3062</span>",
  "id": "5b3e20a763042f2df358a9d6",
  "issues": [
   {
    "number": "3062",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-07-05T13:44:07.839Z",
  "text": "address this https://github.com/numba/numba/pull/3062",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"3062\" class=\"issue\">#3062</span> is fixed",
  "id": "5b3e2bf73c5abf52b63e6494",
  "issues": [
   {
    "number": "3062"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-05T14:32:23.032Z",
  "text": "#3062 is fixed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Is there anything we needed to do here: <span data-link-type=\"issue\" data-issue=\"362\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#362</span>",
  "id": "5b3e3abb7e23133ecb3453df",
  "issues": [
   {
    "number": "362",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-05T15:35:23.520Z",
  "text": "@sklam: Is there anything we needed to do here: https://github.com/numba/llvmlite/issues/362",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Or did we conclude that PyPI is behaving strangely because we have a prior release without a long description?",
  "id": "5b3e3ad133b0282df402d8e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-05T15:35:45.501Z",
  "text": "Or did we conclude that PyPI is behaving strangely because we have a prior release without a long description?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-05T17:11:43.485Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh right, we should  add the long description",
  "id": "5b3e514c3d8f71623d5f711a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-05T17:11:40.783Z",
  "text": "oh right, we should  add the long description",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> <span data-link-type=\"issue\" data-issue=\"373\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#373</span>",
  "id": "5b3e7a7c81816669a433e2f8",
  "issues": [
   {
    "number": "373",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-05T20:07:24.845Z",
  "text": "@seibert https://github.com/numba/llvmlite/pull/373",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Can I merge <span data-link-type=\"issue\" data-issue=\"373\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#373</span> without messing up any of the build testing?",
  "id": "5b3e7b129b82c6701ba5ca19",
  "issues": [
   {
    "number": "373",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-05T20:09:54.403Z",
  "text": "@stuartarchibald: Can I merge numba/llvmlite#373 without messing up any of the build testing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/bbermond73",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/40903050?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/40903050?v=4&s=60",
   "displayName": "bbermond73",
   "gv": "4",
   "id": "5b3ff630d73408ce4f9fe635",
   "url": "/bbermond73",
   "username": "bbermond73"
  },
  "html": "bbermond73<br><span data-link-type=\"mention\" data-screen-name=\"bbermond73\" class=\"mention\">@bbermond73</span><br>01:09<br>hello i have just one little question i use python for a very long time and i am currently descovering numba, on my algorithm compiling my code with <span data-link-type=\"mention\" data-screen-name=\"jit\" class=\"mention\">@jit</span> doesn&#39;t seem to ameliorate my code and it even became slower. Is it normal or just a misuse of this programm",
  "id": "5b3ff73560c38707836464d7",
  "issues": [],
  "mentions": [
   {
    "screenName": "bbermond73",
    "userId": "5b3ff630d73408ce4f9fe635",
    "userIds": []
   },
   {
    "screenName": "jit",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-06T23:11:49.165Z",
  "text": "\nbbermond73\n@bbermond73\n01:09\nhello i have just one little question i use python for a very long time and i am currently descovering numba, on my algorithm compiling my code with @jit doesn't seem to ameliorate my code and it even became slower. Is it normal or just a misuse of this programm\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Nice to see Numba get a mention here: <a href=\"https://voxeu.org/content/which-numerical-computing-language-best-julia-matlab-python-or-r\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://voxeu.org/content/which-numerical-computing-language-best-julia-matlab-python-or-r</a>",
  "id": "5b43847aa99e1e52b722e5db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-09T15:51:22.975Z",
  "text": "Nice to see Numba get a mention here: https://voxeu.org/content/which-numerical-computing-language-best-julia-matlab-python-or-r",
  "unread": false,
  "urls": [
   {
    "url": "https://voxeu.org/content/which-numerical-computing-language-best-julia-matlab-python-or-r"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-07-10T15:22:07.909Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/jdemeyer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3625785?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3625785?v=4&s=60",
   "displayName": "Jeroen Demeyer",
   "gv": "4",
   "id": "53eb9f28107e137846baa8c1",
   "url": "/jdemeyer",
   "username": "jdemeyer",
   "v": 5
  },
  "html": "<p>Dear Numba developers,</p><p>I want to draw your attention to PEP 576 [1] and 580 [2]. I&#39;m the author of PEP 580. The basic problem that these try to solve is that CPython has various optimizations for calling built-in functions/methods but that user-defined classes cannot benefit from these. Those PEPs define a protocol which every class can use. Since numba is all about creating fast functions, I think that it could benefit from a faster calling protocol. The two PEPs in question are two different solutions to this problem. I wrote a comparison in [3] between the two.</p><p>So my question to you is: does this look useful for Numba? If so, do you prefer PEP 576 or PEP 580?</p><p>[1] <a href=\"https://www.python.org/dev/peps/pep-0576/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.python.org/dev/peps/pep-0576/</a><br>[2] <a href=\"https://www.python.org/dev/peps/pep-0580/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.python.org/dev/peps/pep-0580/</a><br>[3] <a href=\"https://mail.python.org/pipermail/python-dev/2018-July/154238.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://mail.python.org/pipermail/python-dev/2018-July/154238.html</a></p>",
  "id": "5b44ceef7e23133ecb4183e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-10T15:21:19.867Z",
  "text": "Dear Numba developers,\n\nI want to draw your attention to PEP 576 [1] and 580 [2]. I'm the author of PEP 580. The basic problem that these try to solve is that CPython has various optimizations for calling built-in functions/methods but that user-defined classes cannot benefit from these. Those PEPs define a protocol which every class can use. Since numba is all about creating fast functions, I think that it could benefit from a faster calling protocol. The two PEPs in question are two different solutions to this problem. I wrote a comparison in [3] between the two.\n\nSo my question to you is: does this look useful for Numba? If so, do you prefer PEP 576 or PEP 580?\n\n[1] https://www.python.org/dev/peps/pep-0576/\n[2] https://www.python.org/dev/peps/pep-0580/\n[3] https://mail.python.org/pipermail/python-dev/2018-July/154238.html",
  "unread": false,
  "urls": [
   {
    "url": "https://www.python.org/dev/peps/pep-0576/"
   },
   {
    "url": "https://www.python.org/dev/peps/pep-0580/"
   },
   {
    "url": "https://mail.python.org/pipermail/python-dev/2018-July/154238.html"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Alright, time to start reviewing / merging some PRs...",
  "id": "5b44e0d93d8f71623d6c6fcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-10T16:37:45.337Z",
  "text": "Alright, time to start reviewing / merging some PRs...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> is there &#39;support_literals&#39; equivalent for <a href=\"mailto:&#39;@overload\" rel=\"nofollow\">&#39;@overload</a>&#39;?",
  "id": "5b478bc11c0f906b144c5a50",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T17:11:29.762Z",
  "text": "@stuartarchibald is there 'support_literals' equivalent for '@overload'?",
  "unread": false,
  "urls": [
   {
    "url": "mailto:&#39;@overload"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>, don&#39;t think so, there&#39;s a horrible hack to do it though",
  "id": "5b478c2fbd14e65d2f62998c",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T17:13:19.489Z",
  "text": "@ehsantn, don't think so, there's a horrible hack to do it though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if you refresh the typing context, then grab the template via <code>typing_context.resolve_value_type(&lt;overloaded thing&gt;)</code>, then then flip the <code>support_literals</code> bit on the template",
  "id": "5b478c86c2d95c60f4d3e948",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T17:14:46.903Z",
  "text": "if you refresh the typing context, then grab the template via `typing_context.resolve_value_type(<overloaded thing>)`, then then flip the `support_literals` bit on the template",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that might help?",
  "id": "5b478c946534bc5d2e54ad46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T17:15:00.852Z",
  "text": "that might help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "sorry my Gitter page didn&#39;t refresh for some reason",
  "id": "5b47a3771c0f906b144ca66b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:52:39.611Z",
  "text": "sorry my Gitter page didn't refresh for some reason",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I don&#39;t know where I can access <code>typing_context</code>",
  "id": "5b47a39dc2d95c60f4d43731",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:53:17.492Z",
  "text": "I don't know where I can access `typing_context`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I found an even worse hack for now...",
  "id": "5b47a3bcba5f154b3b98cbfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:53:48.397Z",
  "text": "I found an even worse hack for now...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "another problem I found is the fact that Jitclasses can&#39;t have ArrayCTypes",
  "id": "5b47a3db641ecc065f9cd865",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:54:19.805Z",
  "text": "another problem I found is the fact that Jitclasses can't have ArrayCTypes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it&#39;s dangling off <code>cpu_target</code> from <code>numba.targets.registry</code>",
  "id": "5b47a3e226aa91065e8deef4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:54:26.905Z",
  "text": "it's dangling off `cpu_target` from `numba.targets.registry`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "got it, thanks",
  "id": "5b47a4db641ecc065f9cdcbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:58:35.870Z",
  "text": "got it, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "looks like the registry is kind of lazy",
  "id": "5b47a4ef866e0c6b15a18bf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:58:55.592Z",
  "text": "looks like the registry is kind of lazy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "you can&#39;t update it right after <span data-link-type=\"mention\" data-screen-name=\"overload\" class=\"mention\">@overload</span> in global context",
  "id": "5b47a504641ecc065f9cdd46",
  "issues": [],
  "mentions": [
   {
    "screenName": "overload",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2018-07-12T18:59:16.352Z",
  "text": "you can't update it right after @overload in global context",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "I might find some time to get PR2983 up to date with 0.39 this week. After issue <span data-link-type=\"issue\" data-issue=\"3030\" class=\"issue\">#3030</span> (by <span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span> ) I am wondering if the scope should be extended. The originial issue <span data-link-type=\"issue\" data-issue=\"2983\" class=\"issue\">#2983</span> was about inverting the mapping of  functions in the <code>operator</code> module to builtin operators to make the builtin operators <a href=\"mailto:&#39;@overload\" rel=\"nofollow\">&#39;@overload</a>&#39;able. The example in <span data-link-type=\"issue\" data-issue=\"3030\" class=\"issue\">#3030</span> would be included if <span data-link-type=\"issue\" data-issue=\"2983\" class=\"issue\">#2983</span> was interpreted to cover anything existing in the operator module (not just inverting the existing mappings). There is another class of candidates like <code>set.copy</code> etc which probably cannot be <a href=\"mailto:&#39;@overload\" rel=\"nofollow\">&#39;@overload</a>&#39;ed but I am not sure there is a usecase. Any thoughts?",
  "id": "5b4c8ca0866e0c6b15b17a1e",
  "issues": [
   {
    "number": "3030"
   },
   {
    "number": "2983"
   },
   {
    "number": "3030"
   },
   {
    "number": "2983"
   }
  ],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-16T12:16:32.308Z",
  "text": "I might find some time to get PR2983 up to date with 0.39 this week. After issue #3030 (by @ehsantn ) I am wondering if the scope should be extended. The originial issue #2983 was about inverting the mapping of  functions in the `operator` module to builtin operators to make the builtin operators '@overload'able. The example in #3030 would be included if #2983 was interpreted to cover anything existing in the operator module (not just inverting the existing mappings). There is another class of candidates like `set.copy` etc which probably cannot be '@overload'ed but I am not sure there is a usecase. Any thoughts?",
  "unread": false,
  "urls": [
   {
    "url": "mailto:&#39;@overload"
   },
   {
    "url": "mailto:&#39;@overload"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: I&#39;m tagging you on some (mostly) short PRs on llvmlite that I think we can merge.",
  "id": "5b4e0ffa3187ca3ee8bb2203",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-17T15:49:14.519Z",
  "text": "@sklam: I'm tagging you on some (mostly) short PRs on llvmlite that I think we can merge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"3125\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3125</span> should fix the buildfarm cuda segfault",
  "id": "5b4e11e179f7236acb315047",
  "issues": [
   {
    "number": "3125",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-17T15:57:21.100Z",
  "text": "https://github.com/numba/numba/pull/3125 should fix the buildfarm cuda segfault",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "great!  Will merge as soon as Travis CI passes",
  "id": "5b4e122becc1f82e2fbf5080",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-17T15:58:35.322Z",
  "text": "great!  Will merge as soon as Travis CI passes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "we also ought to go kick all the other CI fails now the build is passing",
  "id": "5b4e134aecc1f82e2fbf53b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-17T16:03:22.955Z",
  "text": "we also ought to go kick all the other CI fails now the build is passing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "also np1.11 is now minimum",
  "id": "5b4e137dad8d085553a96c6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-17T16:04:13.639Z",
  "text": "also np1.11 is now minimum",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "seems reasonable",
  "id": "5b4e16ac1539a7040ce5319d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-17T16:17:48.671Z",
  "text": "seems reasonable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve rebuilt all the active PRs in the queue since the build was fixed.",
  "id": "5b4f4ab2a94c5255523e150a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-18T14:12:02.203Z",
  "text": "I've rebuilt all the active PRs in the queue since the build was fixed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Or rather, they are in the process of rebuilding, some are done, some are still queued.",
  "id": "5b4f4ade4b583a74a72620fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-18T14:12:46.005Z",
  "text": "Or rather, they are in the process of rebuilding, some are done, some are still queued.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: I think <span data-link-type=\"issue\" data-issue=\"3089\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3089</span> is ready to go now?",
  "id": "5b4f5ea2cad358639d633953",
  "issues": [
   {
    "number": "3089",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-18T15:37:06.106Z",
  "text": "@stuartarchibald: I think https://github.com/numba/numba/pull/3089 is ready to go now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yep, thanks <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>, merged.",
  "id": "5b4f5ff13187ca3ee8beba5f",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-18T15:42:41.128Z",
  "text": "yep, thanks @seibert, merged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>  did you say there are numba meetings every thursday? I would be interested in hearing the discussions.",
  "id": "5b509f7b4b583a74a729c4d6",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-19T14:26:03.221Z",
  "text": "@sklam  did you say there are numba meetings every thursday? I would be interested in hearing the discussions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> , i\u2019ve invited you.  let me kn if you can\u2019t find it",
  "id": "5b50a2391539a7040cec269a",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-19T14:37:45.420Z",
  "text": "@saulshanabrook , i\u2019ve invited you.  let me kn if you can\u2019t find it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I can&#39;t find it... Which email? On google calendar? <a href=\"mailto:s.shanabrook@gmail.com\" rel=\"nofollow\">s.shanabrook@gmail.com</a> should work or <a href=\"mailto:saul@quansight.com\" rel=\"nofollow\">saul@quansight.com</a>",
  "id": "5b50a5f1fd1b3474a69f558f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-19T14:53:37.207Z",
  "text": "I can't find it... Which email? On google calendar? s.shanabrook@gmail.com should work or saul@quansight.com",
  "unread": false,
  "urls": [
   {
    "url": "mailto:s.shanabrook@gmail.com"
   },
   {
    "url": "mailto:saul@quansight.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "work email",
  "id": "5b50a8d94b583a74a729e264",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-19T15:06:01.629Z",
  "text": "work email",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oops, I think I forgot to hit save",
  "id": "5b50a8ffecc1f82e2fc6502b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-19T15:06:39.588Z",
  "text": "oops, I think I forgot to hit save",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Thanks, got it.",
  "id": "5b50aa2e4b583a74a729e6d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-19T15:11:42.008Z",
  "text": "Thanks, got it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Check this out: <span data-link-type=\"issue\" data-issue=\"3134\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3134</span>",
  "id": "5b50b0a455a7e23c0152066c",
  "issues": [
   {
    "number": "3134",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-19T15:39:16.989Z",
  "text": "@sklam: Check this out: https://github.com/numba/numba/pull/3134",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/SabirAkhadov",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6911806?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6911806?v=4&s=60",
   "displayName": "Sabir",
   "gv": "4",
   "id": "58597299d73408ce4f3e5168",
   "url": "/SabirAkhadov",
   "username": "SabirAkhadov",
   "v": 2
  },
  "html": "Hey, I am trying to setup the dev environment. I keep getting this import error:   File &quot;/home/sabir/projects/numba/numba/extending.py&quot;, line 16, in &lt;module&gt;<br>    from ._helperlib import _import_cython_function<br>ImportError: cannot import name &#39;_import_cython_function&#39;",
  "id": "5b51a084f477e4664aae50f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-20T08:42:44.244Z",
  "text": "Hey, I am trying to setup the dev environment. I keep getting this import error:   File \"/home/sabir/projects/numba/numba/extending.py\", line 16, in <module>\n    from ._helperlib import _import_cython_function\nImportError: cannot import name '_import_cython_function'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/SabirAkhadov",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6911806?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6911806?v=4&s=60",
   "displayName": "Sabir",
   "gv": "4",
   "id": "58597299d73408ce4f3e5168",
   "url": "/SabirAkhadov",
   "username": "SabirAkhadov",
   "v": 2
  },
  "html": "_helperlib.py does not exist, only the _helperlib.c. What am I doing wrong?",
  "id": "5b51a0a832fa1b7408547941",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-20T08:43:20.898Z",
  "text": "_helperlib.py does not exist, only the _helperlib.c. What am I doing wrong?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<code>python setup.py build_ext --inplace</code>",
  "id": "5b51dd79f477e4664aaf051f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-20T13:02:49.152Z",
  "text": "`python setup.py build_ext --inplace`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "It looks like the shared libraries haven&#39;t been built yet.",
  "id": "5b51dd88f477e4664aaf0542",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-20T13:03:04.090Z",
  "text": "It looks like the shared libraries haven't been built yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Has <span data-link-type=\"issue\" data-issue=\"2491\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2491</span> been superseded by other error message updates you have been doing?",
  "id": "5b5631e64b880b3e6a43b595",
  "issues": [
   {
    "number": "2491",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-23T19:52:06.523Z",
  "text": "@stuartarchibald: Has https://github.com/numba/numba/pull/2491 been superseded by other error message updates you have been doing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> Just guessing from the diff, I think that&#39;s runtime error updates, so no. Will take a look tomorrow.",
  "id": "5b56572fee530e4aac9226b8",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-23T22:31:11.861Z",
  "text": "@seibert Just guessing from the diff, I think that's runtime error updates, so no. Will take a look tomorrow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"2491\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2491</span> is as I guessed... injection of location into runtime error message reportnig",
  "id": "5b57268d9ddf5f4aad05e46c",
  "issues": [
   {
    "number": "2491",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-24T13:15:57.805Z",
  "text": "https://github.com/numba/numba/issues/2491 is as I guessed... injection of location into runtime error message reportnig",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "e.g.<pre><code><span class=\"keyword\">from</span> numba <span class=\"keyword\">import</span> njit\n\n<span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(x, y)</span>:</span>\n    z = y - <span class=\"number\">1</span>\n    <span class=\"keyword\">return</span> x/z\n\nfoo(<span class=\"number\">1</span>, <span class=\"number\">1</span>)</code></pre>",
  "id": "5b572699c86c4f0b472ecdbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-24T13:16:09.743Z",
  "text": "e.g.\n```\nfrom numba import njit\n\n@njit\ndef foo(x, y):\n    z = y - 1\n    return x/z\n\nfoo(1, 1)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "currently gives:<pre><code>$ python test2491<span class=\"class\">.py</span>\nTraceback (most recent call last):\n  File <span class=\"string\">\"test2491.py\"</span>, line <span class=\"number\">8</span>, <span class=\"keyword\">in</span> &lt;module&gt;\n    <span class=\"function\"><span class=\"title\">foo</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span></span>\nZeroDivisionError: division by zero</code></pre>",
  "id": "5b5726a8f477e4664abbb020",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-24T13:16:24.956Z",
  "text": "currently gives:\n```\n$ python test2491.py\nTraceback (most recent call last):\n  File \"test2491.py\", line 8, in <module>\n    foo(1, 1)\nZeroDivisionError: division by zero\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which is fine, but  as the PR submitter pointed out, not wonderful in the case of a large function with a ton of places where a divby0 could happen",
  "id": "5b5726d126bfd636be4619ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T13:17:05.448Z",
  "text": "which is fine, but  as the PR submitter pointed out, not wonderful in the case of a large function with a ton of places where a divby0 could happen",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve augmented the original PR submission with the work on tracing errors and can now make it do:<pre><code>$ python test2491.py\nTraceback (most recent call last):\n  File <span class=\"string\">\"test2491.py\"</span>, line <span class=\"number\">8</span>, <span class=\"keyword\">in</span> &lt;module&gt;\n    foo(<span class=\"number\">1</span>, <span class=\"number\">1</span>)\nZeroDivisionError: division by zero\n\nFile <span class=\"string\">\"test2491.py\"</span>, line <span class=\"number\">6</span>:\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(x, y)</span>:</span>\n    &lt;source elided&gt;\n    z = y - <span class=\"number\">1</span>\n    <span class=\"keyword\">return</span> x/z\n    ^</code></pre>",
  "id": "5b572703c579673e6b8f9168",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T13:17:55.090Z",
  "text": "I've augmented the original PR submission with the work on tracing errors and can now make it do:\n```\n$ python test2491.py\nTraceback (most recent call last):\n  File \"test2491.py\", line 8, in <module>\n    foo(1, 1)\nZeroDivisionError: division by zero\n\nFile \"test2491.py\", line 6:\ndef foo(x, y):\n    <source elided>\n    z = y - 1\n    return x/z\n    ^\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It&#39;s also possible to make this happen:<pre><code><span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(x, y)</span>:</span>\n    a = x + y\n    <span class=\"keyword\">if</span> a &lt; <span class=\"number\">100</span>:\n        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">\"a &lt; 100\"</span>)\n    <span class=\"keyword\">else</span>:\n        <span class=\"keyword\">return</span> <span class=\"number\">10</span>\n\nfoo(<span class=\"number\">1</span>, <span class=\"number\">1</span>)</code></pre>",
  "id": "5b572762f9ffc4664bfbd723",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T13:19:30.137Z",
  "text": "It's also possible to make this happen:\n```\n@njit\ndef foo(x, y):\n    a = x + y\n    if a < 100:\n        raise ValueError(\"a < 100\")\n    else:\n        return 10\n\nfoo(1, 1)\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "gives:<pre><code>$ python test2491<span class=\"class\">.py</span>\nTraceback (most recent call last):\n  File <span class=\"string\">\"test2491.py\"</span>, line <span class=\"number\">18</span>, <span class=\"keyword\">in</span> &lt;module&gt;\n    <span class=\"function\"><span class=\"title\">foo</span><span class=\"params\">(<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span></span>\nValueError: <span class=\"tag\">a</span> &lt; <span class=\"number\">100</span>\n\nFile <span class=\"string\">\"test2491.py\"</span>, line <span class=\"number\">14</span>:\ndef <span class=\"function\"><span class=\"title\">foo</span><span class=\"params\">(x, y)</span></span>:\n    &lt;source elided&gt;\n    <span class=\"keyword\">if</span> <span class=\"tag\">a</span> &lt; <span class=\"number\">100</span>:\n        raise <span class=\"function\"><span class=\"title\">ValueError</span><span class=\"params\">(<span class=\"string\">\"a &lt; 100\"</span>)</span></span></code></pre>",
  "id": "5b57276d4b880b3e6a462ea2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T13:19:41.197Z",
  "text": "gives:\n```\n$ python test2491.py\nTraceback (most recent call last):\n  File \"test2491.py\", line 18, in <module>\n    foo(1, 1)\nValueError: a < 100\n\nFile \"test2491.py\", line 14:\ndef foo(x, y):\n    <source elided>\n    if a < 100:\n        raise ValueError(\"a < 100\")\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which I guess is useful in the case of people just raising <code>ValueError</code> with no message, or people reusing a canned selection of <code>ValueError</code> messages which potentially ends up with multiple locations as possible culprits.",
  "id": "5b5727b4f10ffa0b48ab5c9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T13:20:52.490Z",
  "text": "which I guess is useful in the case of people just raising `ValueError` with no message, or people reusing a canned selection of `ValueError` messages which potentially ends up with multiple locations as possible culprits.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "A fairly large number of tests will need updating to accommodate such a change, largely those which assertEqual() on error message strings opposed to searching for a known substring",
  "id": "5b57287ef02a0977a3f7ef17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T13:24:14.441Z",
  "text": "A fairly large number of tests will need updating to accommodate such a change, largely those which assertEqual() on error message strings opposed to searching for a known substring",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m of the view that it&#39;s going to mean a bit of bashing around in the test suite to make it pass, but the proposed behaviour is useful and more in line with what CPython produces.",
  "id": "5b57290ef9ffc4664bfbdd1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T13:26:38.038Z",
  "text": "I'm of the view that it's going to mean a bit of bashing around in the test suite to make it pass, but the proposed behaviour is useful and more in line with what CPython produces.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yeah, I think this is something we want to do.  Given the age of the PR, I don&#39;t know if you should push commits onto it, or open an new PR and pull over the commits.",
  "id": "5b57376626bfd636be465848",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T14:27:50.164Z",
  "text": "Yeah, I think this is something we want to do.  Given the age of the PR, I don't know if you should push commits onto it, or open an new PR and pull over the commits.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It rebases cleanly, but to do the above I&#39;ll need at least 0.39, so I guess just pull the patch across.",
  "id": "5b5737b7f9ffc4664bfc110a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T14:29:11.247Z",
  "text": "It rebases cleanly, but to do the above I'll need at least 0.39, so I guess just pull the patch across.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "compiling scipy takes a very long time on a Jetson TX2...",
  "id": "5b573d5d26bfd636be466c70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T14:53:17.208Z",
  "text": "compiling scipy takes a very long time on a Jetson TX2...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Are you building BLAS too ?",
  "id": "5b574054f9ffc4664bfc2d7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T15:05:56.208Z",
  "text": "Are you building BLAS too ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "IIRC OpenBLAS got a version bump a short while back",
  "id": "5b574066f477e4664abc10db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T15:06:14.483Z",
  "text": "IIRC OpenBLAS got a version bump a short while back",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ah, haven&#39;t bumped that",
  "id": "5b574076b2411177a26a61c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T15:06:30.189Z",
  "text": "ah, haven't bumped that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I have vague recollections (from perhaps NP IRC or mailing list) of it fixing some ARM problems.",
  "id": "5b57409ce06d7e74099c7eaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T15:07:08.651Z",
  "text": "I have vague recollections (from perhaps NP IRC or mailing list) of it fixing some ARM problems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "This slowdown issue is weird: <span data-link-type=\"issue\" data-issue=\"3157\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3157</span>",
  "id": "5b577922bd17b96159fec5f7",
  "issues": [
   {
    "number": "3157",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-24T19:08:18.550Z",
  "text": "This slowdown issue is weird: https://github.com/numba/numba/issues/3157",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "OK, working on sprucing up the Numba homepage to follow Dask&#39;s snazzy layout: <a href=\"https://dask.pydata.org/en/latest/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://dask.pydata.org/en/latest/</a>",
  "id": "5b58809f93395d1d9648f8d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T13:52:31.721Z",
  "text": "OK, working on sprucing up the Numba homepage to follow Dask's snazzy layout: https://dask.pydata.org/en/latest/",
  "unread": false,
  "urls": [
   {
    "url": "https://dask.pydata.org/en/latest/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Looking for ideas on what topics should go into the featurettes sections",
  "id": "5b5880cddb8bd24550b031bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T13:53:17.698Z",
  "text": "Looking for ideas on what topics should go into the featurettes sections",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Dask has:<ul>\n<li>Integrates with existing projects</li>\n<li>Familiar for Python users</li>\n<li>Scale up to clusters</li>\n<li>Customizable</li>\n</ul>\n",
  "id": "5b5880fba31e386158af6e1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T13:54:03.184Z",
  "text": "Dask has:\n* Integrates with existing projects\n* Familiar for Python users\n* Scale up to clusters\n* Customizable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I want to think of 4 items that make sense for Numba, and figure out what image should go with each...",
  "id": "5b5881445301255724c49e48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T13:55:16.738Z",
  "text": "I want to think of 4 items that make sense for Numba, and figure out what image should go with each...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-25T14:07:55.604Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "some ideas I&#39;ve had:<ul>\n<li>Generates fast machine code from Python =&gt; <code>@jit</code> decorated code fragment</li>\n<li>Supports many platforms =&gt; cloud of hardware logos?</li>\n<li>Works in the Jupyter Notebook =&gt; notebook screenshot with annotations?</li>\n<li>Add GPU acceleration to your programs =&gt; some CUDA thing </li>\n</ul>\n",
  "id": "5b5883b993395d1d96490359",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:05:45.461Z",
  "text": "some ideas I've had:\n* Generates fast machine code from Python => `@jit` decorated code fragment\n* Supports many platforms => cloud of hardware logos?\n* Works in the Jupyter Notebook => notebook screenshot with annotations?\n* Add GPU acceleration to your programs => some CUDA thing ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<ul>\n<li>Puts you in control =&gt; (Numba only compiles the functions you indicate, leaving the rest of your program unmodified) not sure what image?</li>\n<li>Designed for NumPy users =&gt; ??</li>\n<li>Parallelize your algorithms =&gt; stencil picture</li>\n</ul>\n",
  "id": "5b58850ea31e386158af7d11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:11:26.586Z",
  "text": "* Puts you in control => (Numba only compiles the functions you indicate, leaving the rest of your program unmodified) not sure what image?\n* Designed for NumPy users => ??\n* Parallelize your algorithms => stencil picture",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "for &quot;Puts you in control\u201d, the image can be a profile like pic, sth highlighting the bottleneck\u2026 pointing out amdahl\u2019s law",
  "id": "5b5885cdc0fa8016e7379c3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:14:37.202Z",
  "text": "for \"Puts you in control\u201d, the image can be a profile like pic, sth highlighting the bottleneck\u2026 pointing out amdahl\u2019s law",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "(did i spell it right?)",
  "id": "5b5885d6d2f0934551cea978",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:14:46.658Z",
  "text": "(did i spell it right?)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yeah, I like that idea",
  "id": "5b58869bd2f0934551ceac14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:18:03.254Z",
  "text": "Yeah, I like that idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "only 10% of the code needs to go 90x faster",
  "id": "5b5886d1db8bd24550b04b64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:18:57.080Z",
  "text": "only 10% of the code needs to go 90x faster",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so maybe something like:<ol>\n<li>Generates fast machine code from Python =&gt; <code>@jit</code> code snippet </li>\n<li>Puts you in control =&gt; code profiling pic</li>\n<li>Parallelize your algorithms =&gt; 3 sub points on ParallelAccelerator/SVML, CUDA, and maybe Dask support?</li>\n<li>Works (almost) everywhere =&gt; cloud of hardware / OS logos</li>\n</ol>\n",
  "id": "5b58874a93395d1d96490f41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:20:58.439Z",
  "text": "so maybe something like:\n1. Generates fast machine code from Python => `@jit` code snippet \n2. Puts you in control => code profiling pic\n3. Parallelize your algorithms => 3 sub points on ParallelAccelerator/SVML, CUDA, and maybe Dask support?\n4. Works (almost) everywhere => cloud of hardware / OS logos",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Probably ought to note that it is numerically orientated really high up ?",
  "id": "5b588904e5fc191d959bec99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-25T14:28:20.024Z",
  "text": "Probably ought to note that it is numerically orientated really high up ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I think I&#39;ll put that in the subtitle of 1",
  "id": "5b588d31a31e386158af9c57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-25T14:46:09.300Z",
  "text": "yeah, I think I'll put that in the subtitle of 1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"4\" class=\"issue\">#4</span> will require us to spell out our hardware support in the docs (so I can link to it), which I think is already an open issue",
  "id": "5b588d685301255724c4cabe",
  "issues": [
   {
    "number": "4"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-25T14:47:04.430Z",
  "text": "#4 will require us to spell out our hardware support in the docs (so I can link to it), which I think is already an open issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"3107\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3107</span>",
  "id": "5b588daae5fc191d959bfcb1",
  "issues": [
   {
    "number": "3107",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-25T14:48:10.038Z",
  "text": "https://github.com/numba/numba/issues/3107",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Got a cuda PR for the FMA intrinsic",
  "id": "5b59b89fdb8bd24550b3ad2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:03:43.531Z",
  "text": "Got a cuda PR for the FMA intrinsic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Also, the double atomic add is a numba polyfill?",
  "id": "5b59b8bdc0fa8016e73aeada",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:04:13.608Z",
  "text": "Also, the double atomic add is a numba polyfill?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Even on 5+ devices?",
  "id": "5b59b8cd93395d1d964c65af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:04:29.863Z",
  "text": "Even on 5+ devices?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "What&#39;s the best way in nvvmutils to work out the current device&#39;s compute?",
  "id": "5b59b90007be4357bdef70d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:05:20.898Z",
  "text": "What's the best way in nvvmutils to work out the current device's compute?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Can you use something based around <code>cuda.list_devices()[0].compute_capability</code> ?",
  "id": "5b59bacbbd17b9615905194f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:12:59.308Z",
  "text": "Can you use something based around `cuda.list_devices()[0].compute_capability` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Or do you specifically need something from nvvmutils ?",
  "id": "5b59bad85301255724c8271a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:13:12.932Z",
  "text": "Or do you specifically need something from nvvmutils ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Oh you could do: <code>cuda.current_context().device.compute_capability</code>",
  "id": "5b59bf80bd17b96159052b38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:33:04.180Z",
  "text": "Oh you could do: `cuda.current_context().device.compute_capability `",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which is probably what you want as it refers to the current context",
  "id": "5b59bf97bd17b96159052b5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T12:33:27.449Z",
  "text": "which is probably what you want as it refers to the current context",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Will raise PR for that, thanks !",
  "id": "5b59d1565301255724c87503",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T13:49:10.789Z",
  "text": "Will raise PR for that, thanks !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "I forget, are <code>@cuda.jit</code> functions compiled once per context?  So if I have a Kepler and a Pascal card, my kernel with double atomicAdd compiles appropriately for each one?",
  "id": "5b59d761a31e386158b33fec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T14:14:57.377Z",
  "text": "I forget, are `@cuda.jit` functions compiled once per context?  So if I have a Kepler and a Pascal card, my kernel with double atomicAdd compiles appropriately for each one?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-26T14:15:44.136Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "(btw, looks like the threshold for double atomicadd is compute capability 6.0)",
  "id": "5b59d77993395d1d964cce00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T14:15:21.928Z",
  "text": "(btw, looks like the threshold for double atomicadd is compute capability 6.0)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "When&#39;s the next release? Weekly minutes looking a bit threadbare :(",
  "id": "5b59fa2be5fc191d95a02f5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T16:43:23.378Z",
  "text": "When's the next release? Weekly minutes looking a bit threadbare :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> that&#39;s probably a result of not posting them :S apologies",
  "id": "5b59ffa746235249cd542347",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-26T17:06:47.534Z",
  "text": "@njwhite that's probably a result of not posting them :S apologies",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Yeah, I&#39;ve fallen behind on that.  Will fix shortly.",
  "id": "5b59ffb55301255724c92142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T17:07:01.801Z",
  "text": "Yeah, I've fallen behind on that.  Will fix shortly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "0.40 is RC 3rd Sept, Final 10th",
  "id": "5b59ffb83396495b333d8e83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T17:07:04.699Z",
  "text": "0.40 is RC 3rd Sept, Final 10th",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span>",
  "id": "5b5a0011d2f0934551d3351c",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T17:08:33.231Z",
  "text": "thanks @seibert",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "we do meet pretty much every week, occasional cancellation is due to e.g. holiday or conferences",
  "id": "5b5a01813396495b333d933e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T17:14:41.453Z",
  "text": "we do meet pretty much every week, occasional cancellation is due to e.g. holiday or conferences",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "ok, minutes page is now up to date",
  "id": "5b5a12bb46235249cd545fc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T18:28:11.611Z",
  "text": "ok, minutes page is now up to date",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "great, thanks :)",
  "id": "5b5a1f7da31e386158b44571",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T19:22:37.245Z",
  "text": "great, thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: Just noticed this older PR: <span data-link-type=\"issue\" data-issue=\"347\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#347</span>  Is this still valid to merge?",
  "id": "5b5a27ff1be9bb57bcc6d4c1",
  "issues": [
   {
    "number": "347",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T19:58:55.325Z",
  "text": "@sklam: Just noticed this older PR: https://github.com/numba/llvmlite/pull/347  Is this still valid to merge?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "It checks that wheels still build in Travis CI",
  "id": "5b5a280fe5fc191d95a0b998",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T19:59:11.777Z",
  "text": "It checks that wheels still build in Travis CI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> ",
  "id": "5b5a43f54d2e050b4558a4af",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T21:58:13.049Z",
  "text": "thanks @seibert ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "I raised <span data-link-type=\"issue\" data-issue=\"3172\" class=\"issue\">#3172</span> for the double atomic thing",
  "id": "5b5a4405e5fc191d95a10b07",
  "issues": [
   {
    "number": "3172"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-07-26T21:58:29.293Z",
  "text": "I raised #3172 for the double atomic thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "this is weird: <span data-link-type=\"issue\" data-issue=\"381\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#381</span>",
  "id": "5b5b2f6e3396495b3341bcbd",
  "issues": [
   {
    "number": "381",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-27T14:42:54.711Z",
  "text": "this is weird: https://github.com/numba/llvmlite/issues/381",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Looks like these folks have Zen architecture cloud servers by the hour: <a href=\"https://www.packet.net/bare-metal/servers/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.packet.net/bare-metal/servers/</a>",
  "id": "5b5b30583396495b3341c217",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-27T14:46:48.459Z",
  "text": "Looks like these folks have Zen architecture cloud servers by the hour: https://www.packet.net/bare-metal/servers/",
  "unread": false,
  "urls": [
   {
    "url": "https://www.packet.net/bare-metal/servers/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> , i now want to make <span data-link-type=\"issue\" data-issue=\"347\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#347</span> even better.  i.e use manylinux1 docker and upload the .whl",
  "id": "5b5b54a707be4357bdf55ab2",
  "issues": [
   {
    "number": "347",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-27T17:21:43.389Z",
  "text": "@seibert , i now want to make numba/llvmlite#347 even better.  i.e use manylinux1 docker and upload the .whl",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> , constants are currently being handled in an ad-hoc fashion",
  "id": "5b5b598ca31e386158b8ce94",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-27T17:42:36.607Z",
  "text": "@saulshanabrook , constants are currently being handled in an ad-hoc fashion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "See <a href=\"https://github.com/numba/numba/blob/master/numba/typeinfer.py?utf8=%E2%9C%93#L1111-L1112\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/typeinfer.py?utf8=%E2%9C%93#L1111-L1112</a>",
  "id": "5b5b598ed2f0934551d83685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-27T17:42:38.988Z",
  "text": "See https://github.com/numba/numba/blob/master/numba/typeinfer.py?utf8=%E2%9C%93#L1111-L1112",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/typeinfer.py?utf8=%E2%9C%93#L1111-L1112"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Phantom vs Dummy types: <ul>\n<li>Phantom: should not be materialized.  Never actually occur in the Numba IR.</li>\n<li>Dummy: anything that doesn\u2019t really have an representation and can be replaced w/ anything (for now, a <code>void*</code> w/ any value)</li>\n</ul>\n",
  "id": "5b5b5a133cc395660728990e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-27T17:44:51.648Z",
  "text": "Phantom vs Dummy types: \n* Phantom: should not be materialized.  Never actually occur in the Numba IR.\n* Dummy: anything that doesn\u2019t really have an representation and can be replaced w/ anything (for now, a `void*` w/ any value)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rjenc29",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=60",
   "displayName": "rjenc29",
   "gv": "4",
   "id": "5afc8df5d73408ce4f9997a7",
   "url": "/rjenc29",
   "username": "rjenc29",
   "v": 35
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> hi, I have added some comments to <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3145\" class=\"issue\">#3145</a> - if you get a mo, could you cast an eye over them - would be great to get your thoughts",
  "id": "5b5c1992cb4d5b036ca063d9",
  "issues": [
   {
    "number": "3145"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-28T07:21:54.807Z",
  "text": "@stuartarchibald hi, I have added some comments to #3145 - if you get a mo, could you cast an eye over them - would be great to get your thoughts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I see the special case there for the string. But ints can also be parsed as <code>Const</code> types, right? Is it possible for me to register my type somehow so it can interpreted as a <code>Const</code> type?",
  "id": "5b5c9527331546584576407a",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-28T16:09:11.808Z",
  "text": "@sklam I see the special case there for the string. But ints can also be parsed as `Const` types, right? Is it possible for me to register my type somehow so it can interpreted as a `Const` type?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Another question, is it possible to lookup a Numba type that has a datamodel of a certain LLVM type? I know with the <code>DataModelManager</code> you can go the other direction. My guess is maybe not, since there can be many LLVM representations in for one numba datamodel.",
  "id": "5b5cd13744812258443ce1a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-28T20:25:27.125Z",
  "text": "Another question, is it possible to lookup a Numba type that has a datamodel of a certain LLVM type? I know with the `DataModelManager` you can go the other direction. My guess is maybe not, since there can be many LLVM representations in for one numba datamodel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<blockquote>\n<p>Is it possible for me to register my type somehow so it can interpreted as a Const type?</p></blockquote>\n<p>Never mind, I will eventually create a <code>Dummy</code> type subclass so that to lower <code>ndtypes.ndt</code> objects as constants.</p>",
  "id": "5b5ddf2ed4527523f63c27b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-29T15:37:18.078Z",
  "text": "> Is it possible for me to register my type somehow so it can interpreted as a Const type?\n\nNever mind, I will eventually create a `Dummy` type subclass so that to lower `ndtypes.ndt` objects as constants.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-29T15:43:19.131Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<p>Is it possible to box a type just based on it&#39;s type instance and not in LLVM? For instance:</p><pre><code class=\"python\">t = ndtypes.ndt(<span class=\"string\">\"float64\"</span>)\n\n<span class=\"decorator\">@numba.njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hi</span><span class=\"params\">()</span>:</span>\n    <span class=\"keyword\">return</span> t</code></pre><p>Can I set this up someway so that Numba doesn&#39;t have to serialize <code>t</code> to LLVM? So that it is just stored on the type object as a python value and then returned? I can&#39;t find any examples like this in the codebase. They all seem to serialize to LLVM representation.</p><p>But I can see how that could get complicated, so I can make it work to serialize these types of things if that is what is necessary.</p>",
  "id": "5b5de0313cc39566072e0b57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-29T15:41:37.627Z",
  "text": "Is it possible to box a type just based on it's type instance and not in LLVM? For instance:\n\n```python\nt = ndtypes.ndt(\"float64\")\n\n@numba.njit\ndef hi():\n    return t\n```\n\nCan I set this up someway so that Numba doesn't have to serialize `t` to LLVM? So that it is just stored on the type object as a python value and then returned? I can't find any examples like this in the codebase. They all seem to serialize to LLVM representation.\n\nBut I can see how that could get complicated, so I can make it work to serialize these types of things if that is what is necessary.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<blockquote>\n<p> Is it possible for me to register my type somehow so it can interpreted as a Const type?</p></blockquote>\n<p>Possible technically but the current code regarding <code>Const</code> is ad-hoc</p>",
  "id": "5b5f1bf120d248394f66d40f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:08:49.676Z",
  "text": ">  Is it possible for me to register my type somehow so it can interpreted as a Const type?\n\nPossible technically but the current code regarding `Const` is ad-hoc\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "OK, makes sense.",
  "id": "5b5f1c23cb4d5b036ca7ed59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:09:39.218Z",
  "text": "OK, makes sense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<blockquote>\n<p> is it possible to lookup a Numba type that has a datamodel of a certain LLVM type? I know with the DataModelManager you can go the other direction. My guess is maybe not, since there can be many LLVM representations in for one numba datamodel.</p></blockquote>\n<p>The type-level should not have any knowledge of the low-level repr.  So, the type cannot know the datamodel.</p>",
  "id": "5b5f1c56d4527523f63ff797",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:10:30.583Z",
  "text": ">  is it possible to lookup a Numba type that has a datamodel of a certain LLVM type? I know with the DataModelManager you can go the other direction. My guess is maybe not, since there can be many LLVM representations in for one numba datamodel.\n\nThe type-level should not have any knowledge of the low-level repr.  So, the type cannot know the datamodel.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Going from numba type -&gt; datamodel -&gt; llvm type is possible though <a href=\"https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/extending.py#L196-L198\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/extending.py#L196-L198</a> but I was wondering it was possible to go the other direction, llvm type -&gt; datamodel -&gt; numba type. But I can see why that would not be possible since many datamodels can have the same LLVM type and many numba types can have the same datamodel. ",
  "id": "5b5f1cea854add6cee09eadf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:12:58.009Z",
  "text": "Going from numba type -> datamodel -> llvm type is possible though https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/extending.py#L196-L198 but I was wondering it was possible to go the other direction, llvm type -> datamodel -> numba type. But I can see why that would not be possible since many datamodels can have the same LLVM type and many numba types can have the same datamodel. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/extending.py#L196-L198"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Sorry for spamming, I think I have things working well enough from the numba side now.",
  "id": "5b5f1d30defc9823f526b4d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:14:08.387Z",
  "text": "Sorry for spamming, I think I have things working well enough from the numba side now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Oh, well, that&#39;s hard.  Once you are at llvm type, it&#39;s like it has gone through type-erasure.",
  "id": "5b5f1da6cb4d5b036ca7f478",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:16:06.493Z",
  "text": "Oh, well, that's hard.  Once you are at llvm type, it's like it has gone through type-erasure.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "All high-level info is gone.  But, why do you need to do that?",
  "id": "5b5f1dbe20d248394f66e0f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:16:30.075Z",
  "text": "All high-level info is gone.  But, why do you need to do that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "btw, ",
  "id": "5b5f1dc2966e8039502dc710",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:16:34.726Z",
  "text": "btw, ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<blockquote>\n<p>Can I set this up someway so that Numba doesn&#39;t have to serialize t to LLVM?</p></blockquote>\n<p>Holding on to a Python object breaks caching and potential ahead-of-time compilation.  </p>",
  "id": "5b5f1dc933154658457c9624",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:16:41.835Z",
  "text": "> Can I set this up someway so that Numba doesn't have to serialize t to LLVM?\n\nHolding on to a Python object breaks caching and potential ahead-of-time compilation.  \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "That makes sense, yeah. ",
  "id": "5b5f1de533154658457c9734",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:17:09.258Z",
  "text": "That makes sense, yeah. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Also, using Python object requires the GIL.  Bad for perf.",
  "id": "5b5f1df112f1be713767261d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:17:21.847Z",
  "text": "Also, using Python object requires the GIL.  Bad for perf.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Is it OK to hold onto a python object in the numba type though?",
  "id": "5b5f1df333154658457c974e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:17:23.340Z",
  "text": "Is it OK to hold onto a python object in the numba type though?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "totally fine",
  "id": "5b5f1dfc17c942036b827f85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:17:32.585Z",
  "text": "totally fine\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "For the other question, I don&#39;t <em>need it</em>, I just wrote a little helper function to grab an item from an LLVM array, and right now it&#39;s specific to integers: <a href=\"https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/numba.py#L159-L174\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/numba.py#L159-L174</a>",
  "id": "5b5f1e2895988830b08a6039",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:18:16.098Z",
  "text": "For the other question, I don't *need it*, I just wrote a little helper function to grab an item from an LLVM array, and right now it's specific to integers: https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/numba.py#L159-L174",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba_xnd/shared/numba.py#L159-L174"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "And I was curious if I could make it generic so that it returns the numba type for whatever is inside the lvvm array. But now that I think about it, if I really wanted to do that I could pass in the numba type as a constant, when I call it. ",
  "id": "5b5f1e62966e8039502dca02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:19:14.476Z",
  "text": "And I was curious if I could make it generic so that it returns the numba type for whatever is inside the lvvm array. But now that I think about it, if I really wanted to do that I could pass in the numba type as a constant, when I call it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>array_t</code> is the numba-type already",
  "id": "5b5f1f0a95988830b08a6599",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:22:02.064Z",
  "text": "`array_t` is the numba-type already",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "FYI how it is working now is that when you just <span data-link-type=\"mention\" data-screen-name=\"jit\" class=\"mention\">@jit</span> a function with xnd types, it uses the GIL in the function, because it has to keep track of some python level memory management things when doing slicing/etc. But if you create a gumath kernel from a jitted function, then it doesn&#39;t use the gil, because the function gets passed in C level <code>xnd_t</code> pointers instead of <code>XndObject</code> pointers. The python API for both is the same.",
  "id": "5b5f1f0f3e264c71384f2ce9",
  "issues": [],
  "mentions": [
   {
    "screenName": "jit",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:22:07.859Z",
  "text": "FYI how it is working now is that when you just @jit a function with xnd types, it uses the GIL in the function, because it has to keep track of some python level memory management things when doing slicing/etc. But if you create a gumath kernel from a jitted function, then it doesn't use the gil, because the function gets passed in C level `xnd_t` pointers instead of `XndObject` pointers. The python API for both is the same.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-30T14:23:35.560Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Is there plan to move the memory management things into C? so no GIL is required",
  "id": "5b5f1f63defc9823f526c232",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:23:31.055Z",
  "text": "Is there plan to move the memory management things into C? so no GIL is required",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I don&#39;t know, will have to talk to Stefan about it. There is some memory management in C, that is used when applying gumath functions. ",
  "id": "5b5f1fa733154658457ca296",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:24:39.762Z",
  "text": "I don't know, will have to talk to Stefan about it. There is some memory management in C, that is used when applying gumath functions. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "So, if you want to create something outside GIL, then create gumath functions using numba. ",
  "id": "5b5f1fd3448122584442c734",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-07-30T14:25:23.794Z",
  "text": "So, if you want to create something outside GIL, then create gumath functions using numba. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It&#39;s a good way to get started, but when it gets popular, folks will very likely ask for more performance (thus no GIL). ",
  "id": "5b5f22843cc395660731f561",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-30T14:36:52.023Z",
  "text": "It's a good way to get started, but when it gets popular, folks will very likely ask for more performance (thus no GIL). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "And if we tell all those people to create gumath kernels for that? Because the python API is the same for that, you treat the objects like <code>xnd</code> python objects (indexing, value, etc all supported), they should be able to use those.  Like this:<pre><code class=\"python\"><span class=\"decorator\">@numba_xnd.register_kernel(\"int64, int64 -&gt; int64\")</span>\n<span class=\"decorator\">@numba.njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">integer_const_add</span><span class=\"params\">(a, b, res)</span>:</span>\n    res[()] = a.value + b.value\n\ninteger_const_add(xnd(<span class=\"number\">1</span>), xnd(<span class=\"number\">2</span>)) == xnd(<span class=\"number\">3</span>)</code></pre>",
  "id": "5b5f233edefc9823f526d698",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-30T14:39:58.385Z",
  "text": "And if we tell all those people to create gumath kernels for that? Because the python API is the same for that, you treat the objects like `xnd` python objects (indexing, value, etc all supported), they should be able to use those.  Like this:\n\n```python\n@numba_xnd.register_kernel(\"int64, int64 -> int64\")\n@numba.njit\ndef integer_const_add(a, b, res):\n    res[()] = a.value + b.value\n\ninteger_const_add(xnd(1), xnd(2)) == xnd(3)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Then the gumath python api takes care of python based memory management, and the LLVM kernel takes care of c level memory management. So you can still create xnd objects, do whatever you like in the function body, but it gets lowered to <code>libxnd</code>  and no python xnd.",
  "id": "5b5f2460cb4d5b036ca81c91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-30T14:44:48.218Z",
  "text": "Then the gumath python api takes care of python based memory management, and the LLVM kernel takes care of c level memory management. So you can still create xnd objects, do whatever you like in the function body, but it gets lowered to `libxnd`  and no python xnd.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "If you exported this kernel from numba, then it would be able to run without python, if you had <code>libgumath</code>.",
  "id": "5b5f247dcb4d5b036ca81d3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-30T14:45:17.017Z",
  "text": "If you exported this kernel from numba, then it would be able to run without python, if you had `libgumath`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: I think this PR is ready to merge: <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"382\" href=\"https://github.com/numba/llvmlite/pull/382\" data-provider=\"github\" data-issue-repo=\"numba/llvmlite\" class=\"pr\">numba/llvmlite#382</a>",
  "id": "5b5f330295988830b08ae151",
  "issues": [
   {
    "number": "382",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-30T15:47:14.269Z",
  "text": "@sklam: I think this PR is ready to merge: https://github.com/numba/llvmlite/pull/382",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "as is this one: <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"378\" href=\"https://github.com/numba/llvmlite/pull/378\" data-provider=\"github\" data-issue-repo=\"numba/llvmlite\" class=\"pr\">numba/llvmlite#378</a>",
  "id": "5b5f330f966e8039502e49af",
  "issues": [
   {
    "number": "378",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-30T15:47:27.125Z",
  "text": "as is this one: https://github.com/numba/llvmlite/pull/378",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "And this one looks like they answered your review comments: <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"365\" href=\"https://github.com/numba/llvmlite/pull/365\" data-provider=\"github\" data-issue-repo=\"numba/llvmlite\" class=\"pr\">numba/llvmlite#365</a>",
  "id": "5b5f333395988830b08ae224",
  "issues": [
   {
    "number": "365",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-30T15:48:03.763Z",
  "text": "And this one looks like they answered your review comments: https://github.com/numba/llvmlite/pull/365",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "Is there a way to use <code>support_literals</code> in <code>AttributeTemplate</code>?",
  "id": "5b6062b63cc395660735d359",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T13:23:02.910Z",
  "text": "Is there a way to use `support_literals` in `AttributeTemplate`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "for the bound_functions in there",
  "id": "5b6062d23cc395660735d574",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T13:23:30.212Z",
  "text": "for the bound_functions in there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "never mind, I see what&#39;s going on. I&#39;ll open a PR to make it easier.",
  "id": "5b6067853e264c7138533d9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T13:43:33.547Z",
  "text": "never mind, I see what's going on. I'll open a PR to make it easier.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I opened <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3189\" class=\"issue\">#3189</a> and <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3190\" class=\"issue\">#3190</a> PRs but how to test them is not obvious. Any ideas?",
  "id": "5b60755120d248394f6b5408",
  "issues": [
   {
    "number": "3189"
   },
   {
    "number": "3190"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T14:42:25.640Z",
  "text": "I opened #3189 and #3190 PRs but how to test them is not obvious. Any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>: Does <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"3177\" href=\"https://github.com/numba/numba/pull/3177\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#3177</a> need to go through the build farm?",
  "id": "5b6086c2331546584581681d",
  "issues": [
   {
    "number": "3177",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T15:56:50.254Z",
  "text": "@stuartarchibald: Does https://github.com/numba/numba/pull/3177 need to go through the build farm?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "If anyone has pointers on where <code>numba.extending.overload</code> actually ends up calling <code>lower_builtin</code> that would be much appreciated. Trying to see how to extend it to lower <code>getattr</code> and friends.",
  "id": "5b60e57d20d248394f6d07a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T22:41:01.079Z",
  "text": "If anyone has pointers on where `numba.extending.overload` actually ends up calling `lower_builtin` that would be much appreciated. Trying to see how to extend it to lower `getattr` and friends.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> via typing templates?",
  "id": "5b60e874ac380e3f3a1113e6",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T22:53:40.240Z",
  "text": "@saulshanabrook via typing templates?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/innovate-invent",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1768820?v=4&s=60",
   "displayName": "Nolan Woods",
   "gv": "4",
   "id": "5ae7ccd1d73408ce4f97b27e",
   "url": "/innovate-invent",
   "username": "innovate-invent",
   "v": 26
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> &quot;Holding on to a Python object breaks caching and potential ahead-of-time compilation.&quot; Can you elaborate on this? Is this referring to using meminfo?",
  "id": "5b60f7383e264c7138556b75",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-07-31T23:56:40.771Z",
  "text": "@sklam \"Holding on to a Python object breaks caching and potential ahead-of-time compilation.\" Can you elaborate on this? Is this referring to using meminfo?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3191\" class=\"issue\">#3191</a> &amp; <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3186\" class=\"issue\">#3186</a> ready for review now!",
  "id": "5b615822331546584583b491",
  "issues": [
   {
    "number": "3191"
   },
   {
    "number": "3186"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T06:50:10.360Z",
  "text": "#3191 & #3186 ready for review now!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I thought templates were just for typing, do they provide lowering too? I almost have something working using <code>type_callable</code> and `lower_builtin.",
  "id": "5b61be45966e80395036b3c8",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:05:57.722Z",
  "text": "@stuartarchibald I thought templates were just for typing, do they provide lowering too? I almost have something working using `type_callable` and `lower_builtin.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> vaguely recall there being registration of lowering implementations in <code>typing/templates.py</code> for the high level extensions. Is that what you are after ?",
  "id": "5b61c23144812258444bccf2",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:22:41.815Z",
  "text": "@saulshanabrook vaguely recall there being registration of lowering implementations in `typing/templates.py` for the high level extensions. Is that what you are after ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> Yeah I saw the lowering in <code>_OverloadMethodTemplate</code> in that file, but couldn&#39;t find where <code>overload</code> does it&#39;s lowering. I just wanted to look at it for pointers.  I have something working though, so I think it&#39;s OK.</p><pre><code class=\"python\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">overload_any</span><span class=\"params\">(func, *types)</span>:</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">inner</span><span class=\"params\">(overload_func)</span>:</span>\n        dispatcher = numba.generated_jit(nopython=<span class=\"keyword\">True</span>)(overload_func)\n        disp_type = numba.types.Dispatcher(dispatcher)\n\n        <span class=\"decorator\">@numba.targets.imputils.lower_builtin(func, *types)</span>\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getitem_inner</span><span class=\"params\">(context, builder, sig, args)</span>:</span>\n            call = context.get_function(\n                disp_type, disp_type.get_call_type(context.typing_context, sig.args, {})\n            )\n            <span class=\"keyword\">return</span> call(builder, args)\n\n        <span class=\"decorator\">@numba.extending.type_callable(\"getitem\")</span>\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">type_inner</span><span class=\"params\">(context)</span>:</span>\n            <span class=\"comment\"># need to pass in `dispatcher` or get \"underlying object has vanished\"</span>\n            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">typer</span><span class=\"params\">(*args, dispatcher=dispatcher)</span>:</span>\n                sig = disp_type.get_call_type(context, args, {})\n                <span class=\"keyword\">if</span> sig:\n                    <span class=\"keyword\">return</span> sig.return_type\n\n            <span class=\"keyword\">return</span> typer\n\n    <span class=\"keyword\">return</span> inner</code></pre><p>It works like this:</p><pre><code class=\"python\"><span class=\"decorator\">@overload_any(\"getitem\", numba.types.Const, numba.types.Integer)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getitem_const</span><span class=\"params\">(val, i)</span>:</span>\n    <span class=\"keyword\">if</span> val.value == <span class=\"string\">\"hi\"</span>:\n        <span class=\"keyword\">return</span> <span class=\"keyword\">lambda</span> val, i: i\n    <span class=\"keyword\">elif</span> val.value == <span class=\"string\">\"there\"</span>:\n        <span class=\"keyword\">return</span> <span class=\"keyword\">lambda</span> val, i: -i\n\n\n<span class=\"decorator\">@numba.njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hi</span><span class=\"params\">(i)</span>:</span>\n    <span class=\"keyword\">return</span> <span class=\"string\">\"there\"</span>[i], <span class=\"string\">\"hi\"</span>[i]\n\n\n<span class=\"keyword\">assert</span> hi(<span class=\"number\">10</span>) == (-<span class=\"number\">10</span>, <span class=\"number\">10</span>)</code></pre>",
  "id": "5b61c49efe0be93f3b27710c",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:33:02.475Z",
  "text": "@stuartarchibald Yeah I saw the lowering in `_OverloadMethodTemplate` in that file, but couldn't find where `overload` does it's lowering. I just wanted to look at it for pointers.  I have something working though, so I think it's OK.\n\n```python\ndef overload_any(func, *types):\n    def inner(overload_func):\n        dispatcher = numba.generated_jit(nopython=True)(overload_func)\n        disp_type = numba.types.Dispatcher(dispatcher)\n\n        @numba.targets.imputils.lower_builtin(func, *types)\n        def getitem_inner(context, builder, sig, args):\n            call = context.get_function(\n                disp_type, disp_type.get_call_type(context.typing_context, sig.args, {})\n            )\n            return call(builder, args)\n\n        @numba.extending.type_callable(\"getitem\")\n        def type_inner(context):\n            # need to pass in `dispatcher` or get \"underlying object has vanished\"\n            def typer(*args, dispatcher=dispatcher):\n                sig = disp_type.get_call_type(context, args, {})\n                if sig:\n                    return sig.return_type\n\n            return typer\n\n    return inner\n```\n\nIt works like this:\n\n```python\n@overload_any(\"getitem\", numba.types.Const, numba.types.Integer)\ndef getitem_const(val, i):\n    if val.value == \"hi\":\n        return lambda val, i: i\n    elif val.value == \"there\":\n        return lambda val, i: -i\n\n\n@numba.njit\ndef hi(i):\n    return \"there\"[i], \"hi\"[i]\n\n\nassert hi(10) == (-10, 10)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "IIRC <span data-link-type=\"mention\" data-screen-name=\"overload\" class=\"mention\">@overload</span> itself jits the impl closure containing what is often referred to as <code>code_gen</code>",
  "id": "5b61c4ddcb4d5b036cb154f4",
  "issues": [],
  "mentions": [
   {
    "screenName": "overload",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:34:05.152Z",
  "text": "IIRC @overload itself jits the impl closure containing what is often referred to as `code_gen`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Ah yes, thank you: <a href=\"https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba/numba/typing/templates.py#L304-L327\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba/numba/typing/templates.py#L304-L327</a>",
  "id": "5b61c53ffe0be93f3b277591",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:35:43.694Z",
  "text": "Ah yes, thank you: https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba/numba/typing/templates.py#L304-L327",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/24a05a3be3d24294db56effd5ae40f03a2114806/numba/numba/typing/templates.py#L304-L327"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so there&#39;d be no explicit <span data-link-type=\"mention\" data-screen-name=\"lower_builtin\" class=\"mention\">@lower_builtin</span>",
  "id": "5b61c5493e264c7138586811",
  "issues": [],
  "mentions": [
   {
    "screenName": "lower_builtin",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:35:53.932Z",
  "text": "so there'd be no explicit @lower_builtin",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "some of the others do use the builtin registry though",
  "id": "5b61c55644812258444bde86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:36:06.804Z",
  "text": "some of the others do use the builtin registry though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "for e.g. getattr",
  "id": "5b61c55f95988830b093645d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T14:36:15.109Z",
  "text": "for e.g. getattr",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Woops, in above <code>type_callable(&quot;getitem&quot;)</code> should be <code>type_callable(func)</code>.",
  "id": "5b61d62f966e8039503740d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T15:47:59.836Z",
  "text": "Woops, in above `type_callable(\"getitem\")` should be `type_callable(func)`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-01T16:17:53.613Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"innovate-invent\" class=\"mention\">@innovate-invent</span> </p><blockquote>\n<p>&quot;Holding on to a Python object breaks caching and potential ahead-of-time compilation.&quot; Can you elaborate on this? </p></blockquote>\n<p>I&#39;m referring to holding on a Python object as a C <code>PyObject*</code>, which can be done by freezing a pointer value into the LLVM IR as a constant.  Thus, the pointer is only available for the duration of the running Python process.  Since caching and ahead-of-time compilation need to load in a new Python process and the latter can potentially load in w/o Python, holding on to a Python object will disable these features.  </p><blockquote>\n<p>Is this referring to using meminfo?</p></blockquote>\n<p>No, meminfo are created by the &quot;numba runtime&quot;, which has no Python depedency.</p>",
  "id": "5b61dd19defc9823f530b2d5",
  "issues": [],
  "mentions": [
   {
    "screenName": "innovate-invent",
    "userId": "5ae7ccd1d73408ce4f97b27e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T16:17:29.759Z",
  "text": "@innovate-invent \n> \"Holding on to a Python object breaks caching and potential ahead-of-time compilation.\" Can you elaborate on this? \n\nI'm referring to holding on a Python object as a C `PyObject*`, which can be done by freezing a pointer value into the LLVM IR as a constant.  Thus, the pointer is only available for the duration of the running Python process.  Since caching and ahead-of-time compilation need to load in a new Python process and the latter can potentially load in w/o Python, holding on to a Python object will disable these features.  \n\n> Is this referring to using meminfo?\n\nNo, meminfo are created by the \"numba runtime\", which has no Python depedency.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<blockquote>\n<p>I&#39;m referring to holding on a Python object as a C PyObject*, which can be done by freezing a pointer value into the LLVM IR as a constant. Thus, the pointer is only available for the duration of the running Python process. Since caching and ahead-of-time compilation need to load in a new Python process and the lat</p></blockquote>\n<p>Ah I see. But if you hold onto a Python object that is passed in to the function, will  still still work AoT compilation? Because it isn&#39;t freezing any python objects during compilation, just during invocation?</p>",
  "id": "5b61e4bfd4527523f64a35e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T16:50:07.285Z",
  "text": "> I'm referring to holding on a Python object as a C PyObject*, which can be done by freezing a pointer value into the LLVM IR as a constant. Thus, the pointer is only available for the duration of the running Python process. Since caching and ahead-of-time compilation need to load in a new Python process and the lat\n\nAh I see. But if you hold onto a Python object that is passed in to the function, will  still still work AoT compilation? Because it isn't freezing any python objects during compilation, just during invocation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "That will be fine.  Python objects passing thru are fine.  Just can&#39;t refer to a live pointer.",
  "id": "5b621b6dd4527523f64aebe3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-01T20:43:25.081Z",
  "text": "That will be fine.  Python objects passing thru are fine.  Just can't refer to a live pointer.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3172\" class=\"issue\">#3172</a> ready for review too",
  "id": "5b6410293bca002dcbb71631",
  "issues": [
   {
    "number": "3172"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-03T08:19:53.594Z",
  "text": "#3172 ready for review too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am having an issue maybe with GC/allocation where I have an overloaded builtin that is compiled into one LLVM module and them linked with another LLVM module of the parent function. I return a pointer to a struct that I <code>alloca</code> in the overloaded builtin. The pointer is passed correctly, but the bytes change when I exit one LLVM module and enter the other (I think). I tried wrapping the outputs with <code>numba.targets.imputils.impl_ret_new_ref</code> to see if that would help, but it didn&#39;t affect it. I will try to create a minimal reproducible example, but was curious if you have any general advice about if Numba should even be generating multiple LLVM modules in the first place and linking them, or if it should be combining everything into one LLVM module.",
  "id": "5b69cdd685278d705e98da44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-07T16:50:30.841Z",
  "text": "I am having an issue maybe with GC/allocation where I have an overloaded builtin that is compiled into one LLVM module and them linked with another LLVM module of the parent function. I return a pointer to a struct that I `alloca` in the overloaded builtin. The pointer is passed correctly, but the bytes change when I exit one LLVM module and enter the other (I think). I tried wrapping the outputs with `numba.targets.imputils.impl_ret_new_ref` to see if that would help, but it didn't affect it. I will try to create a minimal reproducible example, but was curious if you have any general advice about if Numba should even be generating multiple LLVM modules in the first place and linking them, or if it should be combining everything into one LLVM module.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am using this <a href=\"https://github.com/numba/numba/issues/3030#issuecomment-411054119\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/3030#issuecomment-411054119</a>",
  "id": "5b69cdde3a5a2d2f99069cfa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-07T16:50:38.888Z",
  "text": "I am using this https://github.com/numba/numba/issues/3030#issuecomment-411054119",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/3030#issuecomment-411054119"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Here is a minimal example: <a href=\"https://gist.github.com/saulshanabrook/7d845ad033464b1ff275412562f74378\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/saulshanabrook/7d845ad033464b1ff275412562f74378</a> The second example uses the overloaded funciton in another LLVM module, and produced the wrong result",
  "id": "5b69d957c917d40dc2559071",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-07T17:39:35.453Z",
  "text": "Here is a minimal example: https://gist.github.com/saulshanabrook/7d845ad033464b1ff275412562f74378 The second example uses the overloaded funciton in another LLVM module, and produced the wrong result",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/saulshanabrook/7d845ad033464b1ff275412562f74378"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "My <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3172\" class=\"issue\">#3172</a> &amp; <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3186\" class=\"issue\">#3186</a> PRs are ready for review!",
  "id": "5b6a1100a9426c705d3ddcfd",
  "issues": [
   {
    "number": "3172"
   },
   {
    "number": "3186"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-07T21:37:04.110Z",
  "text": "My #3172 & #3186 PRs are ready for review!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rjenc29",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=60",
   "displayName": "rjenc29",
   "gv": "4",
   "id": "5afc8df5d73408ce4f9997a7",
   "url": "/rjenc29",
   "username": "rjenc29",
   "v": 35
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> hi, I think <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3145\" class=\"issue\">#3145</a> is about ready for a review if you have a mo ",
  "id": "5b6a938b359c70045ca1d6e1",
  "issues": [
   {
    "number": "3145"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-08T06:54:03.709Z",
  "text": "@stuartarchibald hi, I think #3145 is about ready for a review if you have a mo ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> thanks for your contributions :) we&#39;ll get to them as soon as we can, rest assured they are tagged for review. They are also waiting for a small fix to the CUDA build farm machines, hope to do that today sometime.",
  "id": "5b6aaa49c79ebc1ae7c23ef0",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-08T08:31:05.419Z",
  "text": "@njwhite thanks for your contributions :) we'll get to them as soon as we can, rest assured they are tagged for review. They are also waiting for a small fix to the CUDA build farm machines, hope to do that today sometime.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Ok, thanks!",
  "id": "5b6aaa6dc917d40dc259bb90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-08T08:31:41.099Z",
  "text": "Ok, thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rjenc29\" class=\"mention\">@rjenc29</span> thanks very much, will take a look as soon as we can, seems like that segfault is gone :D",
  "id": "5b6aaa88a9426c705d40e52a",
  "issues": [],
  "mentions": [
   {
    "screenName": "rjenc29",
    "userId": "5afc8df5d73408ce4f9997a7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-08T08:32:08.873Z",
  "text": "@rjenc29 thanks very much, will take a look as soon as we can, seems like that segfault is gone :D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "How would I create something like calling a dispatcher but that inlines the code instead of creating a new LLVM function? So that it would conceptually act more like a macro than a function call. ",
  "id": "5b6d5ec9179f842c971afe0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T09:45:45.626Z",
  "text": "How would I create something like calling a dispatcher but that inlines the code instead of creating a new LLVM function? So that it would conceptually act more like a macro than a function call. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T09:47:25.934Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "It seems like it must be doable somehow, because Numba generates the function implementation. So instead, I would just want to pass the variables directly without any boxing/unboxing in the middle.",
  "id": "5b6d5f1b49932d4fe4c11f5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T09:47:07.742Z",
  "text": "It seems like it must be doable somehow, because Numba generates the function implementation. So instead, I would just want to pass the variables directly without any boxing/unboxing in the middle.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Is this asking how to inline a njit function directly at IR level?",
  "id": "5b6d6189937eee2423faa6ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T09:57:29.520Z",
  "text": "Is this asking how to inline a njit function directly at IR level?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Yeah. Or if there is something else that isn&#39;t <code>njit</code> but just provides a way to turn python code into a <code>def imp(context, builder, sig, args): ...</code> fn so that it can be added to the <code>_defns</code> in the context.",
  "id": "5b6d6222a6af14730b16fe21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:00:02.470Z",
  "text": "Yeah. Or if there is something else that isn't `njit` but just provides a way to turn python code into a `def imp(context, builder, sig, args): ...` fn so that it can be added to the `_defns` in the context.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and just backing up a bit, why do you want to do this explicitly? The LLVM inliner usually does ok?",
  "id": "5b6d63af67eb9f60febec8f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:06:39.903Z",
  "text": "and just backing up a bit, why do you want to do this explicitly? The LLVM inliner usually does ok?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am trying to allocate things on the stack (<code>alloca</code>) in an intrinsic, then create a high level  function over that and use that in other high level functions. So if it&#39;s up not inlining the function then the memory won&#39;t be available in the outer fn. This is a minimal example I tried to make <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3208\" href=\"https://github.com/numba/numba/issues/3208\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3208</a>",
  "id": "5b6d64292a8e6c6083a3efe4",
  "issues": [
   {
    "number": "3208",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:08:41.492Z",
  "text": "I am trying to allocate things on the stack (`alloca`) in an intrinsic, then create a high level  function over that and use that in other high level functions. So if it's up not inlining the function then the memory won't be available in the outer fn. This is a minimal example I tried to make https://github.com/numba/numba/issues/3208",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh i see, that makes sense",
  "id": "5b6d6462196bc60b6bad4c57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:09:38.110Z",
  "text": "oh i see, that makes sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "The real use case is about trying to compile Gumath kernels using numba. Where I add high level operations, like getitem/setittem (<a href=\"https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L140-L187\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L140-L187</a>), and then I want it all compiled into one LLVM function. ",
  "id": "5b6d6482196bc60b6bad4c8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:10:10.703Z",
  "text": "The real use case is about trying to compile Gumath kernels using numba. Where I add high level operations, like getitem/setittem (https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L140-L187), and then I want it all compiled into one LLVM function. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L140-L187"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Output types are passed into the gumath kernel, so I only need stack allocations inside of it, since the outer dispatch mechanism handles allocating those output types.",
  "id": "5b6d64a3179f842c971b1400",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:10:43.313Z",
  "text": "Output types are passed into the gumath kernel, so I only need stack allocations inside of it, since the outer dispatch mechanism handles allocating those output types.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I see",
  "id": "5b6d65fa26e68560fdd71db4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:16:26.258Z",
  "text": "I see",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Does adding to <code>_defns</code> solve this ?",
  "id": "5b6d66072a8e6c6083a3f6ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:16:39.302Z",
  "text": "Does adding to `_defns` solve this ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I assume that if I added something to <code>_defns</code> (which I guess is what <code>lower_builtin</code> does eventually?) that didn&#39;t call anotther function, it will be inlined. For dispatchers that are added to <code>_defns</code>, they end up calling the dispatcher&#39;s lowered function <a href=\"https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/targets/imputils.py#L183-L207\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/targets/imputils.py#L183-L207</a>",
  "id": "5b6d6678988005174ebcb944",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:18:32.430Z",
  "text": "I assume that if I added something to `_defns` (which I guess is what `lower_builtin` does eventually?) that didn't call anotther function, it will be inlined. For dispatchers that are added to `_defns`, they end up calling the dispatcher's lowered function https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/targets/imputils.py#L183-L207",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/targets/imputils.py#L183-L207"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I don&#39;t think it&#39;ll get inlined at IR level",
  "id": "5b6d66a126e68560fdd71f91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:19:13.909Z",
  "text": "I don't think it'll get inlined at IR level",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh hang on, it might manage to do that",
  "id": "5b6d6710937eee2423fab5f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:21:04.471Z",
  "text": "oh hang on, it might manage to do that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, I think I understand where this is going now :)",
  "id": "5b6d67d2a3a93d242245ccbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:24:18.869Z",
  "text": "hmmm, I think I understand where this is going now :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "probably easier than modifying the inlining pass too",
  "id": "5b6d67e4a3a93d242245cd4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:24:36.300Z",
  "text": "probably easier than modifying the inlining pass too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I think you are right that it doesn&#39;t inline it in the IR, I am trying out an example now.",
  "id": "5b6d681c49932d4fe4c13d22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:25:32.121Z",
  "text": "I think you are right that it doesn't inline it in the IR, I am trying out an example now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "But the unoptimized LLVM it produces seems to inline the functions",
  "id": "5b6d6844e9b96f2c98eb8367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:26:12.420Z",
  "text": "But the unoptimized LLVM it produces seems to inline the functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "think that may be by virtue of the lowering mech, in which case this may well work",
  "id": "5b6d688449932d4fe4c13df5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:27:16.780Z",
  "text": "think that may be by virtue of the lowering mech, in which case this may well work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "See <a href=\"https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-test-py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-test-py</a> ",
  "id": "5b6d6891637ee66082cf0de9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:27:29.472Z",
  "text": "See https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-test-py ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-test-py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "unoptimized llvm: <a href=\"https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-out-ll-L479-L607\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-out-ll-L479-L607</a>",
  "id": "5b6d68a449932d4fe4c13e31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:27:48.611Z",
  "text": "unoptimized llvm: https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-out-ll-L479-L607",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/saulshanabrook/f32454aff5c626cbbffbbf4fce674d85#file-out-ll-L479-L607"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, seems to work, neat :)",
  "id": "5b6d69c1937eee2423fabd79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:32:33.575Z",
  "text": "yeah, seems to work, neat :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "But do you think there is a way to get similar inlined LLVM but with high level/python abstractions?",
  "id": "5b6d69ecb3cbd23ffc217761",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-08-10T10:33:16.939Z",
  "text": "But do you think there is a way to get similar inlined LLVM but with high level/python abstractions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> said that it isn&#39;t possible (<a href=\"https://github.com/numba/numba/issues/3208#issuecomment-411834568\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/3208#issuecomment-411834568</a>):</p><blockquote>\n<p>But you cannot rely on things being inside a single LLVM function (except for caller of an intrinsic).</p></blockquote>\n<p>It seems it might be doable somehow if instead of lowering a call to the dispatcher, you instead lower the code in the dispatcher.</p>",
  "id": "5b6d6a455ec2bc174fdc38de",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-10T10:34:45.456Z",
  "text": "@sklam said that it isn't possible (https://github.com/numba/numba/issues/3208#issuecomment-411834568):\n\n> But you cannot rely on things being inside a single LLVM function (except for caller of an intrinsic).\n\nIt seems it might be doable somehow if instead of lowering a call to the dispatcher, you instead lower the code in the dispatcher.\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/3208#issuecomment-411834568"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm",
  "id": "5b6d6ae95762ee4fe5582730",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-10T10:37:29.350Z",
  "text": "hmmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m just adding some markers into the code gen to make sure its doing what we expect for the right reasons",
  "id": "5b6d6b015762ee4fe5582778",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-10T10:37:53.590Z",
  "text": "I'm just adding some markers into the code gen to make sure its doing what we expect for the right reasons",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<p>OK I am following the lowering code to see where it generates the function definition.</p><p>Do you know what &quot;We also register its library to allow for inlining.&quot; means? <a href=\"https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/compiler.py#L1014-L1016\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/compiler.py#L1014-L1016</a></p>",
  "id": "5b6d6c6e637ee66082cf18d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-10T10:43:58.435Z",
  "text": "OK I am following the lowering code to see where it generates the function definition.\n\nDo you know what \"We also register its library to allow for inlining.\" means? https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/compiler.py#L1014-L1016",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba/numba/compiler.py#L1014-L1016"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "think that&#39;s adding the code library associated with  the function",
  "id": "5b6d6ec75ec2bc174fdc47ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2018-08-10T10:53:59.558Z",
  "text": "think that's adding the code library associated with  the function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so that the llvm inliner can find it",
  "id": "5b6d6ed35762ee4fe558325f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-08-10T10:54:11.338Z",
  "text": "so that the llvm inliner can find it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Ah yeah. Well maybe you are right that LLVM can take care of the inling.",
  "id": "5b6d6ee126e68560fdd734d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-08-10T10:54:25.185Z",
  "text": "Ah yeah. Well maybe you are right that LLVM can take care of the inling.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "right, i think what&#39;s happening is that an already jitted function is wrapped and decalared <code>linkonce_odr</code> then its code lib is registered whilst jitting the calling function so that LLVM can inline the callee",
  "id": "5b6d6f99b3cbd23ffc2185a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-08-10T10:57:29.680Z",
  "text": "right, i think what's happening is that an already jitted function is wrapped and decalared `linkonce_odr` then its code lib is registered whilst jitting the calling function so that LLVM can inline the callee",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "*declared",
  "id": "5b6d6fb1988005174ebcd379",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-08-10T10:57:53.361Z",
  "text": "*declared",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so I think that it works is likely an illusion",
  "id": "5b6d6fbaa6af14730b17257e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2018-08-10T10:58:02.751Z",
  "text": "so I think that it works is likely an illusion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "as it is still reliant on the llvm inliner",
  "id": "5b6d6fe75762ee4fe5583592",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T10:58:47.754Z",
  "text": "as it is still reliant on the llvm inliner",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Yeah. In the example I posted, LLVM doesn&#39;t inline in the example that works: <a href=\"https://github.com/numba/numba/issues/3208#\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/3208#</a>",
  "id": "5b6d6ffa5762ee4fe55835df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T10:59:06.649Z",
  "text": "Yeah. In the example I posted, LLVM doesn't inline in the example that works: https://github.com/numba/numba/issues/3208#",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/3208#"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "And in the example that is broken, it doesn&#39;t even lower the inner function call at all (<a href=\"https://github.com/numba/numba/issues/3208#issuecomment-411754024\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues/3208#issuecomment-411754024</a>) which maybe is a bug?",
  "id": "5b6d7022e9b96f2c98eb9aa1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T10:59:46.393Z",
  "text": "And in the example that is broken, it doesn't even lower the inner function call at all (https://github.com/numba/numba/issues/3208#issuecomment-411754024) which maybe is a bug?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/3208#issuecomment-411754024"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm",
  "id": "5b6d70672a8e6c6083a41654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:00:55.144Z",
  "text": "hmmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Here is the full dump <a href=\"https://gist.github.com/saulshanabrook/a76d911ed987bff9bb8570ae7d7e9b3d\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/saulshanabrook/a76d911ed987bff9bb8570ae7d7e9b3d</a>",
  "id": "5b6d708967eb9f60febeee87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:01:29.870Z",
  "text": "Here is the full dump https://gist.github.com/saulshanabrook/a76d911ed987bff9bb8570ae7d7e9b3d",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/saulshanabrook/a76d911ed987bff9bb8570ae7d7e9b3d"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "might it have optimised it out ?",
  "id": "5b6d708c988005174ebcd73f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:01:32.029Z",
  "text": "might it have optimised it out ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Yeah that is likely",
  "id": "5b6d709ca3a93d242245e6a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:01:48.855Z",
  "text": "Yeah that is likely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think this means we are back to inlining at the IR level ?",
  "id": "5b6d70c0196bc60b6bad71d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:02:24.029Z",
  "text": "I think this means we are back to inlining at the IR level ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Can I get it not to do that though? Because in this case optimizing it out, just means not filling the allocated pointer with the right value, so it ends up breaking behavior.",
  "id": "5b6d70c72a8e6c6083a41862",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:02:31.778Z",
  "text": "Can I get it not to do that though? Because in this case optimizing it out, just means not filling the allocated pointer with the right value, so it ends up breaking behavior.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Let me look closer at that LLVM output, to see if it&#39;s optimized out in IR -&gt; LLVM or LLVM optimiztion.",
  "id": "5b6d70efb3cbd23ffc218b81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:03:11.441Z",
  "text": "Let me look closer at that LLVM output, to see if it's optimized out in IR -> LLVM or LLVM optimiztion.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If you <code>NUMBA_OPT=0</code> does it still exist ?",
  "id": "5b6d711fb3cbd23ffc218db2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:03:59.806Z",
  "text": "If you `NUMBA_OPT=0` does it still exist ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Then it works.",
  "id": "5b6d717f2a8e6c6083a41b6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:05:35.863Z",
  "text": "Then it works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "FWIW this is happening in the <code>codegen.CodeLibrary::finalize()</code>, you&#39;ll note that the <code>_linking_libraries</code> are registered CodeLibrarys of the &quot;inlined&quot; functions, these are linked in and then the optimiser is called",
  "id": "5b6d71c7179f842c971b3dc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:06:47.540Z",
  "text": "FWIW this is happening in the `codegen.CodeLibrary::finalize()`, you'll note that the `_linking_libraries` are registered CodeLibrarys of the \"inlined\" functions, these are linked in and then the optimiser is called",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that Siu is right and that if any of this happens to work its at the whim of theLLVM inliner magic?",
  "id": "5b6d71f1b3cbd23ffc219445",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-08-10T11:07:29.301Z",
  "text": "I think that Siu is right and that if any of this happens to work its at the whim of theLLVM inliner magic?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I also think doing a general &quot;inline this IR&quot; impl is possible if two parts are combined, the with/loop lifting is basically how to shove some IR in, and the inline closure pass would inline a shoved in function IR.",
  "id": "5b6d74d05762ee4fe5585393",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:19:44.586Z",
  "text": "I also think doing a general \"inline this IR\" impl is possible if two parts are combined, the with/loop lifting is basically how to shove some IR in, and the inline closure pass would inline a shoved in function IR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "How much work would that take? It would require changes to core numba? To allow dispatchers to be inlined?",
  "id": "5b6d75985b07ae730a9bdb87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:23:04.642Z",
  "text": "How much work would that take? It would require changes to core numba? To allow dispatchers to be inlined?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, would need to change Numba core, probably add a <code>@njit(inline=True)</code> or something too",
  "id": "5b6d75b726e68560fdd7600e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:23:35.348Z",
  "text": "yeah, would need to change Numba core, probably add a `@njit(inline=True)` or something too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think it&#39;s non-trivial, but doable.",
  "id": "5b6d75de637ee66082cf4777",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:24:14.576Z",
  "text": "I think it's non-trivial, but doable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Probably worth asking Siu if he can think of a better way around it. Though I do think a generic inliner would be really useful.",
  "id": "5b6d7609988005174ebcf63f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:24:57.874Z",
  "text": "Probably worth asking Siu if he can think of a better way around it. Though I do think a generic inliner would be really useful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Effort wise, probably hack something up in a day or so, but testing it will take way longer (assuming I&#39;ve guessed right about what#s needed in the first place).",
  "id": "5b6d763c2a8e6c6083a43728",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:25:48.515Z",
  "text": "Effort wise, probably hack something up in a day or so, but testing it will take way longer (assuming I've guessed right about what#s needed in the first place).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "So you would do the inlining in a later pass? Originally my first thought was an alternativie compilation pipeline for dispatchers that gives you a <code>imp(context, builder, sig, args)</code> function. So I guess this would require lowering slightly different numba IR than what is lowered for a function. This would be a different way about going about it, right? Basically avoid creating the function numba IR in first place. ",
  "id": "5b6d7740a6af14730b1752d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:30:08.271Z",
  "text": "So you would do the inlining in a later pass? Originally my first thought was an alternativie compilation pipeline for dispatchers that gives you a `imp(context, builder, sig, args)` function. So I guess this would require lowering slightly different numba IR than what is lowered for a function. This would be a different way about going about it, right? Basically avoid creating the function numba IR in first place. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "BTW thank you for working through this problem with me.",
  "id": "5b6d77605b07ae730a9be6df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:30:40.015Z",
  "text": "BTW thank you for working through this problem with me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh no worries, it&#39;s been good to refresh memory of this stuff, so thanks :)",
  "id": "5b6d7794b3cbd23ffc21b725",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:31:32.731Z",
  "text": "oh no worries, it's been good to refresh memory of this stuff, so thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, I think you could alter the lowering behaviour to do that, but off the top of my head I&#39;m not sure of the path to do it",
  "id": "5b6d7849a6af14730b1759b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T11:34:33.319Z",
  "text": "yeah, I think you could alter the lowering behaviour to do that, but off the top of my head I'm not sure of the path to do it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "We need to track <a href=\"https://bugs.python.org/issue16899\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://bugs.python.org/issue16899</a> for Complex_ support in ctypes",
  "id": "5b6da9e026e68560fdd89b36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:06:08.779Z",
  "text": "We need to track https://bugs.python.org/issue16899 for Complex_ support in ctypes",
  "unread": false,
  "urls": [
   {
    "url": "https://bugs.python.org/issue16899"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "can&#39;t bind to complex domain functions without it",
  "id": "5b6da9f95762ee4fe55997ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:06:33.952Z",
  "text": "can't bind to complex domain functions without it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> , getting inlined may not be enough for <code>alloca</code>\u2019ed pointer",
  "id": "5b6dad22637ee66082d09500",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:20:02.358Z",
  "text": "@saulshanabrook , getting inlined may not be enough for `alloca`\u2019ed pointer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "returning stack pointer is an undefined operation.  the optimizer may end up breaking the code",
  "id": "5b6dad3ba6af14730b18a7cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:20:27.327Z",
  "text": "returning stack pointer is an undefined operation.  the optimizer may end up breaking the code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i.e putting a software trap there",
  "id": "5b6dad4367eb9f60fec069a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:20:35.964Z",
  "text": "i.e putting a software trap there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Going back a bit, What kind of datastructure is being allocated?",
  "id": "5b6dad6a49932d4fe4c2c091",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:21:14.010Z",
  "text": "Going back a bit, What kind of datastructure is being allocated?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "what is its purpose and why does it need to be a stack-pointer?",
  "id": "5b6dadad5b07ae730a9d2851",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:22:21.595Z",
  "text": "what is its purpose and why does it need to be a stack-pointer?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<blockquote>\n<p>, getting inlined may not be enough for alloca\u2019ed pointer</p></blockquote>\n<p>So in the end I am not going to return a alloc-ed pointer from the jitted function. Like for example, if I am generating a gumath kernel where I do slicing in it then aggregate a sum, all the sliced <code>xnd_t</code> structs are just alive during the function and aren&#39;t used outside of it. So they allocating them on the stack should be OK.</p>",
  "id": "5b6daf5a67eb9f60fec075e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:29:30.730Z",
  "text": "> , getting inlined may not be enough for alloca\u2019ed pointer\n\nSo in the end I am not going to return a alloc-ed pointer from the jitted function. Like for example, if I am generating a gumath kernel where I do slicing in it then aggregate a sum, all the sliced `xnd_t` structs are just alive during the function and aren't used outside of it. So they allocating them on the stack should be OK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "is the xnd_t mutable?",
  "id": "5b6daf9949932d4fe4c2cf38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:30:33.087Z",
  "text": "is the xnd_t mutable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<blockquote>\n<p>Going back a bit, What kind of datastructure is being allocated?</p></blockquote>\n<p>It is just pointers to arrays of memory, untyped in llvm. For example, here it is conceptually an <code>xnd_t</code> struct I create: <a href=\"https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L148-L158\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L148-L158</a> and then return.</p>",
  "id": "5b6dafbbe9b96f2c98ed356b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:31:07.081Z",
  "text": "> Going back a bit, What kind of datastructure is being allocated?\n\nIt is just pointers to arrays of memory, untyped in llvm. For example, here it is conceptually an `xnd_t` struct I create: https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L148-L158 and then return.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/47f257d16dbd2d7793bf4d377084427ed8c2915c/numba_xnd/libxnd.py#L148-L158"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Similar to how this is implemented for native python: <a href=\"https://github.com/plures/xnd/blob/f81d6a4a6e41ed0e8c974b459db97b9448b6ecff/python/xnd/_xnd.c#L1980-L1999\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/plures/xnd/blob/f81d6a4a6e41ed0e8c974b459db97b9448b6ecff/python/xnd/_xnd.c#L1980-L1999</a>",
  "id": "5b6dafece9b96f2c98ed35e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:31:56.496Z",
  "text": "Similar to how this is implemented for native python: https://github.com/plures/xnd/blob/f81d6a4a6e41ed0e8c974b459db97b9448b6ecff/python/xnd/_xnd.c#L1980-L1999",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/plures/xnd/blob/f81d6a4a6e41ed0e8c974b459db97b9448b6ecff/python/xnd/_xnd.c#L1980-L1999"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "In that example, we allocate an <code>xnd_t</code> struct on the stack, but we don&#39;t return it from memory. If we are returning a <code>XndObject</code> we allocate that and copy it in. If we are creating a kernel, then we get in an already allocated <code>xnd_t</code> for return values.",
  "id": "5b6db0325ec2bc174fdde434",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:33:06.520Z",
  "text": "In that example, we allocate an `xnd_t` struct on the stack, but we don't return it from memory. If we are returning a `XndObject` we allocate that and copy it in. If we are creating a kernel, then we get in an already allocated `xnd_t` for return values.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<blockquote>\nis the xnd_t mutable?</blockquote>\n",
  "id": "5b6db03db3cbd23ffc232958",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:33:17.841Z",
  "text": "> is the xnd_t mutable?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "yes",
  "id": "5b6db03e5b07ae730a9d38f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:33:18.802Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "if you want it to be stack allocated, you need to make it caller-allocated.",
  "id": "5b6db08b937eee2423fc5696",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:34:35.506Z",
  "text": "if you want it to be stack allocated, you need to make it caller-allocated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "That&#39;s hard though when it&#39;s something like python level indexing. For example, the user writes:<pre><code class=\"python\"><span class=\"decorator\">@numba_xnd.gumath.register_kernel(</span>\n    [\n        <span class=\"string\">\"... * N * M * int64, ... * M * K * int64 -&gt; ... * N * K * int64\"</span>,\n        <span class=\"string\">\"... * N * M * float64, ... * M * K * float64 -&gt; ... * N * K * float64\"</span>,\n    ]\n)\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">simple_matrix_multiply</span><span class=\"params\">(a, b, c)</span>:</span>\n    n, m = a.type.shape\n    m_, p = b.type.shape\n    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):\n        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(p):\n            c[i, j] = <span class=\"number\">0</span>\n            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(m):\n                c[i, j] = c[i, j].value + a[i, k].value * b[k, j].value</code></pre>",
  "id": "5b6db0c649932d4fe4c2d58a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:35:34.961Z",
  "text": "That's hard though when it's something like python level indexing. For example, the user writes:\n\n```python\n@numba_xnd.gumath.register_kernel(\n    [\n        \"... * N * M * int64, ... * M * K * int64 -> ... * N * K * int64\",\n        \"... * N * M * float64, ... * M * K * float64 -> ... * N * K * float64\",\n    ]\n)\ndef simple_matrix_multiply(a, b, c):\n    n, m = a.type.shape\n    m_, p = b.type.shape\n    for i in range(n):\n        for j in range(p):\n            c[i, j] = 0\n            for k in range(m):\n                c[i, j] = c[i, j].value + a[i, k].value * b[k, j].value\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Doing <code>a[i, k]</code> triggers a getitem which returns a new <code>xnd_t</code>. ",
  "id": "5b6db0fc2a8e6c6083a5b8d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:36:28.961Z",
  "text": "Doing `a[i, k]` triggers a getitem which returns a new `xnd_t`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "So it&#39;s unclear to me how I would write a getitem implementation that allocates the value neccesary in the parent context. ",
  "id": "5b6db1182a8e6c6083a5b928",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:36:56.056Z",
  "text": "So it's unclear to me how I would write a getitem implementation that allocates the value neccesary in the parent context. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, it\u2019s user facing.  then, my suggestion won\u2019t work",
  "id": "5b6db140196bc60b6baf01ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:37:36.844Z",
  "text": "oh, it\u2019s user facing.  then, my suggestion won\u2019t work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "go for gc\u2019ed-heap-allocation is best",
  "id": "5b6db15626e68560fdd8cf52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:37:58.399Z",
  "text": "go for gc\u2019ed-heap-allocation is best",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "then, write a better heap-allocator and GC for numba =)",
  "id": "5b6db16249932d4fe4c2d724",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:38:10.853Z",
  "text": "then, write a better heap-allocator and GC for numba =)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "It seems like if I was able to inline a dispatcher, and use this as builtin, then this would solve my issue, no?",
  "id": "5b6db167196bc60b6baf02ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:38:15.893Z",
  "text": "It seems like if I was able to inline a dispatcher, and use this as builtin, then this would solve my issue, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "And then I do have to worry about heap allocation?",
  "id": "5b6db170637ee66082d0ae75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:38:24.229Z",
  "text": "And then I do have to worry about heap allocation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Because this is how the C python implementation ends up looking like, at the LLVM level.",
  "id": "5b6db185637ee66082d0aecb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:38:45.774Z",
  "text": "Because this is how the C python implementation ends up looking like, at the LLVM level.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the thing is that you can\u2019t let LLVM inline it w/ any optimization passes ",
  "id": "5b6db1e567eb9f60fec08426",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:40:21.273Z",
  "text": "the thing is that you can\u2019t let LLVM inline it w/ any optimization passes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "But what if I inline it myself? Like in the example above, if you do a <code>lower_builtin</code> this seems to get inlined before LLVM optimization kicks in.",
  "id": "5b6db212b3cbd23ffc233414",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:41:06.030Z",
  "text": "But what if I inline it myself? Like in the example above, if you do a `lower_builtin` this seems to get inlined before LLVM optimization kicks in.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T15:42:14.796Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "So if I can compile a dispatcher based on the <code>builder</code> and <code>context</code> passed in for <code>lower_builtin</code>, then it would like add all that LLVM code the module and function where it is being called, instead of making a new function.",
  "id": "5b6db250a3a93d2422478299",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:42:08.861Z",
  "text": "So if I can compile a dispatcher based on the `builder` and `context` passed in for `lower_builtin`, then it would like add all that LLVM code the module and function where it is being called, instead of making a new function.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that should work, but with a few gotchas",
  "id": "5b6db2585762ee4fe559d0ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:42:16.739Z",
  "text": "that should work, but with a few gotchas",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<ul>\n<li>don\u2019t <code>alloca</code> in branches</li>\n</ul>\n",
  "id": "5b6db264e9b96f2c98ed48b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:42:28.548Z",
  "text": "- don\u2019t `alloca` in branches",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<ul>\n<li>always stack allocate in the entry block</li>\n</ul>\n",
  "id": "5b6db2725ec2bc174fdded55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:42:42.133Z",
  "text": "- always stack allocate in the entry block",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T15:44:31.808Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "use <code>cgutils.alloca_once</code>",
  "id": "5b6db27b49932d4fe4c2dcf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:42:51.728Z",
  "text": "use `cgutils.alloca_once`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": " s/_one/_once/",
  "id": "5b6db2cf5b07ae730a9d4978",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:44:15.729Z",
  "text": " s/_one/_once/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":)",
  "id": "5b6db2e45762ee4fe559d40e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:44:36.016Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "heh",
  "id": "5b6db2e5179f842c971cdb32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-10T15:44:37.560Z",
  "text": "heh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "thanks :)",
  "id": "5b6db2ea196bc60b6baf0be4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:44:42.971Z",
  "text": "thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Why allocate only in entry block?",
  "id": "5b6db312a6af14730b18d0d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:45:22.362Z",
  "text": "Why allocate only in entry block?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "LLVM doesn\u2019t really support alloca in branches",
  "id": "5b6db31c988005174ebe8652",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:45:32.640Z",
  "text": "LLVM doesn\u2019t really support alloca in branches",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T15:45:49.315Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "a lot of the backends will blowup",
  "id": "5b6db3285762ee4fe559d635",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:45:44.109Z",
  "text": "a lot of the backends will blowup",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "oh interesting, ok.",
  "id": "5b6db32f637ee66082d0b91a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:45:51.406Z",
  "text": "oh interesting, ok.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T15:46:52.117Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so, is a <code>c[i, j]</code> going to return a stack-allocated <code>xnd_t*</code>?",
  "id": "5b6db36867eb9f60fec08c9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:46:48.321Z",
  "text": "so, is a `c[i, j]` going to return a stack-allocated `xnd_t*`?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Yeah.",
  "id": "5b6db3715762ee4fe559d795",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:46:57.015Z",
  "text": "Yeah.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Actually, I allocate and pass it in.",
  "id": "5b6db392a3a93d2422478acd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:47:30.462Z",
  "text": "Actually, I allocate and pass it in.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "as return value. In C, it is returning a stack allocated <code>xnd_t</code> (not pointer)",
  "id": "5b6db3a6988005174ebe88b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:47:50.204Z",
  "text": "as return value. In C, it is returning a stack allocated `xnd_t` (not pointer)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "but LLVM changes it so it passes one in, I think because it&#39;s over a certtain size or something.",
  "id": "5b6db3b7a6af14730b18d53e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:48:07.206Z",
  "text": "but LLVM changes it so it passes one in, I think because it's over a certtain size or something.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh, thats ABI",
  "id": "5b6db3c55ec2bc174fddf82f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:48:21.421Z",
  "text": "oh, thats ABI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so in C, it is copied by value",
  "id": "5b6db3d1179f842c971ce0b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:48:33.823Z",
  "text": "so in C, it is copied by value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "if that\u2019s the case, you may have a better time passing <code>xnd_t</code> by value like in C",
  "id": "5b6db3f6a3a93d2422478e20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:49:10.572Z",
  "text": "if that\u2019s the case, you may have a better time passing `xnd_t` by value like in C",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "That would be nice, but then some functions require pointers to it.",
  "id": "5b6db404196bc60b6baf1378",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:49:24.277Z",
  "text": "That would be nice, but then some functions require pointers to it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Some C functions, that I am calling.",
  "id": "5b6db408196bc60b6baf138e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:49:28.318Z",
  "text": "Some C functions, that I am calling.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "stack-allocate temporarily to get a pointer",
  "id": "5b6db41d637ee66082d0bf9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:49:49.842Z",
  "text": "stack-allocate temporarily to get a pointer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Mmk, so you would reccomend thatt?",
  "id": "5b6db429937eee2423fc6e3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:50:01.431Z",
  "text": "Mmk, so you would reccomend thatt?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i am trying to think through some problematic usecases",
  "id": "5b6db43b26e68560fdd8e1d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:50:19.412Z",
  "text": "i am trying to think through some problematic usecases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i.e ",
  "id": "5b6db43e26e68560fdd8e223",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:50:22.425Z",
  "text": "i.e ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I worried then there would be some unneccesary copies, but I guess that&#39;s not the end of the world. ",
  "id": "5b6db44a196bc60b6baf1624",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:50:34.218Z",
  "text": "I worried then there would be some unneccesary copies, but I guess that's not the end of the world. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>alist = [c[i, j] for i in range(N)]</code>",
  "id": "5b6db44a2a8e6c6083a5d03b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:50:34.803Z",
  "text": "`alist = [c[i, j] for i in range(N)]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "is the <code>alist</code> going to contain stack-allocated pointers?",
  "id": "5b6db462937eee2423fc6f4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:50:58.907Z",
  "text": "is the `alist` going to contain stack-allocated pointers?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T15:51:22.816Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<blockquote>\n<p>unneccesary copies</p></blockquote>\n<p>LLVM is good at pruning those</p>",
  "id": "5b6db478196bc60b6baf1829",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:51:20.101Z",
  "text": "> unneccesary copies\n\nLLVM is good at pruning those",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Are you saying this would be a problematic if I passed around <code>xnd_t</code> struct values or if I passed around stack allocated pointers? ",
  "id": "5b6db49db3cbd23ffc234309",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:51:57.609Z",
  "text": "Are you saying this would be a problematic if I passed around `xnd_t` struct values or if I passed around stack allocated pointers? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": " stack allocated pointers are problematic",
  "id": "5b6db4b2937eee2423fc71e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:52:18.466Z",
  "text": " stack allocated pointers are problematic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-10T15:52:28.252Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am coming around to the idea of just passing values, and doing the stack copy whenever I need a pointer. ",
  "id": "5b6db4b5b3cbd23ffc234378",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:52:21.172Z",
  "text": "I am coming around to the idea of just passing values, and doing the stack copy whenever I need a pointer. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I will try that then I think and see if I hit any snags. Then I wouldn&#39;t have to write a new pipeline to do inline compilation.",
  "id": "5b6db4e026e68560fdd8e641",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:53:04.348Z",
  "text": "I will try that then I think and see if I hit any snags. Then I wouldn't have to write a new pipeline to do inline compilation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": ":thumbsup: ",
  "id": "5b6db4f6e9b96f2c98ed572c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:53:26.037Z",
  "text": ":thumbsup: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Thank you for talking it through.",
  "id": "5b6db4fd5b07ae730a9d554d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:53:33.725Z",
  "text": "Thank you for talking it through.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "np",
  "id": "5b6db50a67eb9f60fec096f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-10T15:53:46.898Z",
  "text": "np",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-11T13:39:37.613Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<p>Is there a way to generate code to call a C function from LLVM that understand the ABI and calls it correctly?</p><p>For example, I have this C function:</p><pre><code class=\"c\"><span class=\"function\"><span class=\"keyword\">extern</span> xnd_index_t\n<span class=\"title\">set_xnd_index_t_tag</span><span class=\"params\">(xnd_index_t x, <span class=\"keyword\">enum</span> xnd_key t)</span> </span>{\n  x.tag = t;\n  <span class=\"keyword\">return</span> x;\n}</code></pre><p>Which is compiled into this llvm function type:</p><pre><code>define <span class=\"keyword\">void</span> <span class=\"keyword\">@set_xnd_index_t_tag</span>(%<span class=\"keyword\">struct</span>.xnd_index_t* noalias nocapture sret, %<span class=\"keyword\">struct</span>.xnd_index_t* byval nocapture <span class=\"keyword\">align</span> <span class=\"number\">8</span>, i32) local_unnamed_addr #<span class=\"number\">0</span> {</code></pre><p>I want to call this from Numba. I can do this if I specify that it takes in the return struct and a pointer to the first argument, but I am not sure this is how the function will end up being compiled. Like, clang must use some kind of heuristics to determine when to use <code>byval</code> and <code>sret</code>, and I would prefer not to hard code these. Also, it seems like it might depend on what machine I am on.  </p><p>So I wonder if there is a way to say &quot;I am calling this C function and it has this LLVM signature&quot; and generate the right LLVM code that deals with figuring out if what should be passed value or by pointer. </p>",
  "id": "5b6ee6e82a8e6c6083ac1ce8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-11T13:38:48.126Z",
  "text": "Is there a way to generate code to call a C function from LLVM that understand the ABI and calls it correctly?\n\nFor example, I have this C function:\n\n```c\nextern xnd_index_t\nset_xnd_index_t_tag(xnd_index_t x, enum xnd_key t) {\n  x.tag = t;\n  return x;\n}\n```\n\nWhich is compiled into this llvm function type:\n\n```llvm\ndefine void @set_xnd_index_t_tag(%struct.xnd_index_t* noalias nocapture sret, %struct.xnd_index_t* byval nocapture align 8, i32) local_unnamed_addr #0 {\n```\n\nI want to call this from Numba. I can do this if I specify that it takes in the return struct and a pointer to the first argument, but I am not sure this is how the function will end up being compiled. Like, clang must use some kind of heuristics to determine when to use `byval` and `sret`, and I would prefer not to hard code these. Also, it seems like it might depend on what machine I am on.  \n\nSo I wonder if there is a way to say \"I am calling this C function and it has this LLVM signature\" and generate the right LLVM code that deals with figuring out if what should be passed value or by pointer. \n\n",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I think that is similar to this stack overflow question (<a href=\"https://stackoverflow.com/a/25193367/907060\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/a/25193367/907060</a>), which recommends using <code>CodeGen:: CodeGenFunction</code>. ",
  "id": "5b6ee701a6af14730b1f1faa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-11T13:39:13.802Z",
  "text": "I think that is similar to this stack overflow question (https://stackoverflow.com/a/25193367/907060), which recommends using `CodeGen:: CodeGenFunction`. ",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/a/25193367/907060"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "BTW I am using these types of C function, to do all getting and setting on the C structs, because the C abstractions (unions, etc) don&#39;t map cleanly into pure LLVM so I let clang handle this mapping.",
  "id": "5b6ee74b5ec2bc174fe44af5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-11T13:40:27.974Z",
  "text": "BTW I am using these types of C function, to do all getting and setting on the C structs, because the C abstractions (unions, etc) don't map cleanly into pure LLVM so I let clang handle this mapping.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I opened up an llvmlite issue for this: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"385\" href=\"https://github.com/numba/llvmlite/issues/385\" data-provider=\"github\" data-issue-repo=\"numba/llvmlite\" class=\"issue\">numba/llvmlite#385</a>",
  "id": "5b6f03dda3a93d24224e5fd7",
  "issues": [
   {
    "number": "385",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-11T15:42:21.739Z",
  "text": "I opened up an llvmlite issue for this: https://github.com/numba/llvmlite/issues/385",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I think I will try to do all this from LLVM actually, using the offsets of the field to just manipulate the byte arrays. ",
  "id": "5b6f253a5ec2bc174fe598dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-11T18:04:42.537Z",
  "text": "I think I will try to do all this from LLVM actually, using the offsets of the field to just manipulate the byte arrays. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "If I am representing something as a LLVM array value, is it possible to define a setattr lowering that changes this llvm array? I would need to replace the value. It doesn&#39;t seem like with setitem I can replace the root value. ",
  "id": "5b6f2d6f637ee66082d86b9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-11T18:39:43.101Z",
  "text": "If I am representing something as a LLVM array value, is it possible to define a setattr lowering that changes this llvm array? I would need to replace the value. It doesn't seem like with setitem I can replace the root value. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I tried returning a new value from the setitem lowering, but it doesn&#39;t seem to do anything.",
  "id": "5b6f2d83a3a93d24224f3c55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-11T18:40:03.569Z",
  "text": "I tried returning a new value from the setitem lowering, but it doesn't seem to do anything.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> , llvm array value is immutable (SSA).  You can only mutate if the llvm array is stored in some memory and you reference it via a pointer.",
  "id": "5b71b0f45762ee4fe56ee994",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-13T16:25:24.223Z",
  "text": "@saulshanabrook , llvm array value is immutable (SSA).  You can only mutate if the llvm array is stored in some memory and you reference it via a pointer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "As for ABI callconv, see related PR: <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"3134\" href=\"https://github.com/numba/numba/pull/3134\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#3134</a>",
  "id": "5b71b12e937eee24231109ac",
  "issues": [
   {
    "number": "3134",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-13T16:26:22.369Z",
  "text": "As for ABI callconv, see related PR: https://github.com/numba/numba/pull/3134",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "FYI, how a struct is layout for C-function argument on x86 depends on it\u2019s members",
  "id": "5b71b1e4937eee2423110ebd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-13T16:29:24.243Z",
  "text": "FYI, how a struct is layout for C-function argument on x86 depends on it\u2019s members",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "If you are curious, you can use <code>clang -emit-llvm -S source.c</code> to see what it does to xnd_t.",
  "id": "5b71b23aa6af14730b2db8e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-13T16:30:50.403Z",
  "text": "If you are curious, you can use `clang -emit-llvm -S source.c` to see what it does to xnd_t.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "If all you need is just struct-type in the return value, it is a lot easier.  ",
  "id": "5b71b2ae5ec2bc174ff2eebb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-13T16:32:46.979Z",
  "text": "If all you need is just struct-type in the return value, it is a lot easier.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> I am trying now just copying by value when returning, so that if something is stack allocated in a function and returned, it will be re-allocated by the caller and copied. This fixes some error but introduces some new ones",
  "id": "5b727b768206fd2a46a5b801",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T06:49:26.079Z",
  "text": "@sklam I am trying now just copying by value when returning, so that if something is stack allocated in a function and returned, it will be re-allocated by the caller and copied. This fixes some error but introduces some new ones",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Basically doing this:<pre><code>            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">as_return</span><span class=\"params\">(self, builder, value)</span>:</span>\n                <span class=\"keyword\">return</span> builder.load(value)\n\n            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">from_return</span><span class=\"params\">(self, builder, value)</span>:</span>\n                <span class=\"keyword\">return</span> numba.cgutils.alloca_once_value(builder, value)</code></pre>",
  "id": "5b727b83e9b96f2c9806bee0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T06:49:39.865Z",
  "text": "Basically doing this:\n\n```\n            def as_return(self, builder, value):\n                return builder.load(value)\n\n            def from_return(self, builder, value):\n                return numba.cgutils.alloca_once_value(builder, value)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Do you see any obvious problems with this?",
  "id": "5b727b945b07ae730ab69946",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T06:49:56.336Z",
  "text": "Do you see any obvious problems with this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "should work",
  "id": "5b72ed4449932d4fe4ded7cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T14:55:00.370Z",
  "text": "should work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "oh wait, there\u2019s a problem in <code>from_return</code>",
  "id": "5b72ed64a37112689c1bd53d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T14:55:32.337Z",
  "text": "oh wait, there\u2019s a problem in `from_return`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s always the same stack allocation even in:<pre><code class=\"python\">objs = [some_calls_from_return(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>)]</code></pre>",
  "id": "5b72ed95637ee66082eca254",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T14:56:21.617Z",
  "text": "it\u2019s always the same stack allocation even in:\n```python\nobjs = [some_calls_from_return(i) for i in range(10)]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "every item in <code>objs</code> is referencing the same pointer",
  "id": "5b72edaf49932d4fe4ded9b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T14:56:47.382Z",
  "text": "every item in `objs` is referencing the same pointer",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Why is that?",
  "id": "5b730d3a5ec2bc174ffad158",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T17:11:22.224Z",
  "text": "Why is that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Won&#39;t it emit a new <code>alloca</code> for every different type that is returned?",
  "id": "5b730d5f5b07ae730ab9ff7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T17:11:59.181Z",
  "text": "Won't it emit a new `alloca` for every different type that is returned?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-14T17:12:54.137Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I also set the data representation to be a value:<pre><code class=\"python\">            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">as_data</span><span class=\"params\">(self, builder, value)</span>:</span>\n                <span class=\"keyword\">return</span> builder.load(value)\n\n            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">from_data</span><span class=\"params\">(self, builder, value)</span>:</span>\n                <span class=\"keyword\">return</span> numba.cgutils.alloca_once_value(builder, value)</code></pre>",
  "id": "5b730d8a26e68560fdf5fa83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T17:12:42.304Z",
  "text": "I also set the data representation to be a value:\n\n```python\n            def as_data(self, builder, value):\n                return builder.load(value)\n\n            def from_data(self, builder, value):\n                return numba.cgutils.alloca_once_value(builder, value)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>alloca_one*</code>will put a stack-allocation for each time <code>some_calls_from_return(i)</code> is lowered.",
  "id": "5b730fc45762ee4fe576c73a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T17:22:12.788Z",
  "text": "the `alloca_one*`will put a stack-allocation for each time `some_calls_from_return(i)` is lowered.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "but the compiler only lower <code>some_calls_from_return(i)</code> once in a loop like <code>[some_calls_from_return(i) for i in range(10)]</code>",
  "id": "5b730fdb5762ee4fe576c7c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T17:22:35.587Z",
  "text": "but the compiler only lower `some_calls_from_return(i)` once in a loop like `[some_calls_from_return(i) for i in range(10)]`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-14T17:24:56.669Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "thus it is equivalent to:<pre><code class=\"c++\">xnd_t result;\n<span class=\"built_in\">vector</span>&lt;xnd_t*&gt; alist;\n<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;N; ++i){\n    result = something(i);     <span class=\"comment\">// copy new xnd_t into result</span>\n    alist.append(&amp;result);   <span class=\"comment\">// the from_return gives the pointer to result</span>\n}</code></pre>",
  "id": "5b73102fa6af14730b359cf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T17:23:59.385Z",
  "text": "thus it is equivalent to:\n\n```c++\nxnd_t result;\nvector<xnd_t*> alist;\nfor (int i=0; i<N; ++i){\n    result = something(i);     // copy new xnd_t into result\n    alist.append(&result);   // the from_return gives the pointer to result\n}\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-08-14T17:26:17.561Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i think u can just do:<pre><code class=\"python\">            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">as_return</span><span class=\"params\">(self, builder, value)</span>:</span>\n                <span class=\"keyword\">return</span> builder.load(value)   <span class=\"comment\"># use xnd_t by value</span>\n\n            <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">from_return</span><span class=\"params\">(self, builder, value)</span>:</span>\n                <span class=\"keyword\">return</span> value  <span class=\"comment\"># return xnd_t by value</span></code></pre>",
  "id": "5b7310b08206fd2a46a9583e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-14T17:26:08.437Z",
  "text": "i think u can just do:\n```python\n            def as_return(self, builder, value):\n                return builder.load(value)   # use xnd_t by value\n\n            def from_return(self, builder, value):\n                return value  # return xnd_t by value\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I think I misunderstand when the <code>_return</code>  methods are called on the datamodel ",
  "id": "5b74183a196bc60b6bd1cdc5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-15T12:10:34.639Z",
  "text": "I think I misunderstand when the `_return`  methods are called on the datamodel ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "My understanding is that if a dispatcher returns a type who datamadek as a <code>as_return</code>, that will be called before returning, and then in the parent callers scope <code>from_return</code> will be called on the value.",
  "id": "5b74187ba6af14730b3b4abf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-15T12:11:39.834Z",
  "text": "My understanding is that if a dispatcher returns a type who datamadek as a `as_return`, that will be called before returning, and then in the parent callers scope `from_return` will be called on the value.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "But if you just have a function like <code>identity = njit(lambda x: x)</code>, then will the <code>as_return</code>/<code>from_return</code> be called?",
  "id": "5b74189d196bc60b6bd1d089",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-15T12:12:13.243Z",
  "text": "But if you just have a function like `identity = njit(lambda x: x)`, then will the `as_return`/`from_return` be called?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "And what about the boxing? My understanding here is that boxing is not used when a dispatcher is calling another dispatcher, only when calling a dispatcher from Python.",
  "id": "5b7418b85762ee4fe57c8ad3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-15T12:12:39.999Z",
  "text": "And what about the boxing? My understanding here is that boxing is not used when a dispatcher is calling another dispatcher, only when calling a dispatcher from Python.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "And that the &quot;return&quot; methods are only used when calling one dispatcher from another. But I don&#39;t think I have that right.",
  "id": "5b7418da196bc60b6bd1d17a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-15T12:13:14.438Z",
  "text": "And that the \"return\" methods are only used when calling one dispatcher from another. But I don't think I have that right.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<p>Also, a while back I mentioned some new LLVM loop vectorization plans, I finally found the link, from May <a href=\"https://groups.google.com/forum/#!topic/llvm-dev/nTZfffZMAU0\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://groups.google.com/forum/#!topic/llvm-dev/nTZfffZMAU0</a></p><p>&quot;This RFC is a joint effort by Intel and Saarland University to bring the divergence analysis of the Region Vectorizer [1,2,3,4,5] (dubbed the vectorization analysis of RV) to LLVM.&quot;</p>",
  "id": "5b7418ff196bc60b6bd1d1cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-15T12:13:51.057Z",
  "text": "Also, a while back I mentioned some new LLVM loop vectorization plans, I finally found the link, from May https://groups.google.com/forum/#!topic/llvm-dev/nTZfffZMAU0\n\n\"This RFC is a joint effort by Intel and Saarland University to bring the divergence analysis of the Region Vectorizer [1,2,3,4,5] (dubbed the vectorization analysis of RV) to LLVM.\"",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/forum/#!topic/llvm-dev/nTZfffZMAU0"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "It sound slike something that might be useful to Numba, if it get&#39;s merged in.",
  "id": "5b741923a3a93d24226a349e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-15T12:14:27.636Z",
  "text": "It sound slike something that might be useful to Numba, if it get's merged in.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I see what you mean now about how the from_return won&#39;t work. I&#39;m going to look into heap allocating instead, as you first recommended :)",
  "id": "5b753f82a37112689c290475",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-08-16T09:10:26.068Z",
  "text": "I see what you mean now about how the from_return won't work. I'm going to look into heap allocating instead, as you first recommended :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I went into some more detail here: <a href=\"https://gitter.im/Plures/xnd\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gitter.im/Plures/xnd</a>",
  "id": "5b754f578206fd2a46b5f96f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-08-16T10:17:59.220Z",
  "text": "I went into some more detail here: https://gitter.im/Plures/xnd",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/Plures/xnd"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "I am having trouble to understand how to use <code>NRTContext.decref</code> and <code>.incref</code> in a scenario with nested memory managed types. My naive expectation would have been <code>decref</code>/<code>incref</code> do not touch memory managed members contained in an outer memory manged type but they seem to walk the whole subtree. Is this intentional?  ",
  "id": "5b76ce51802bc42c5f315ba1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-17T13:32:01.927Z",
  "text": "I am having trouble to understand how to use `NRTContext.decref` and `.incref` in a scenario with nested memory managed types. My naive expectation would have been `decref`/`incref` do not touch memory managed members contained in an outer memory manged type but they seem to walk the whole subtree. Is this intentional?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>decref</code>/<code>incref</code> doesn\u2019t walk into memory managed objects.  you maybe seeing the walking logic for non-managed objects.",
  "id": "5b76dc5ca158fd0ea36fb906",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-17T14:31:56.560Z",
  "text": "`decref`/`incref` doesn\u2019t walk into memory managed objects.  you maybe seeing the walking logic for non-managed objects.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Ok, then I am probably calling the wrong function. For example, in the unboxer I am using <code>context.context.nrt.incref</code> which ends-up in <code>numba.runtime.context.NRTContext.incref</code>. Is that the one I am supposed to call on managed objects?",
  "id": "5b76e9b7a158fd0ea3700ee6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-08-17T15:28:55.968Z",
  "text": "Ok, then I am probably calling the wrong function. For example, in the unboxer I am using `context.context.nrt.incref` which ends-up in `numba.runtime.context.NRTContext.incref`. Is that the one I am supposed to call on managed objects?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that\u2019s the right function.  why do you think it is walking into objects inside memory managed object?<br>To be more specific,  using the ArrayModel as an example: <a href=\"https://github.com/numba/numba/blob/master/numba/datamodel/models.py?utf8=%E2%9C%93#L837-L843\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/datamodel/models.py?utf8=%E2%9C%93#L837-L843</a><br><code>incref</code> will never walk into data inside <code>.meminfo</code>.  but it will check every member of <code>ArrayModel</code> to see if there are any <code>MemInfoPointer</code> to incref.",
  "id": "5b774100070fa234ee79a4e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-17T21:41:20.031Z",
  "text": "that\u2019s the right function.  why do you think it is walking into objects inside memory managed object? \nTo be more specific,  using the ArrayModel as an example: https://github.com/numba/numba/blob/master/numba/datamodel/models.py?utf8=%E2%9C%93#L837-L843\n`incref` will never walk into data inside `.meminfo`.  but it will check every member of `ArrayModel` to see if there are any `MemInfoPointer` to incref.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/datamodel/models.py?utf8=%E2%9C%93#L837-L843"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "I see, I was assuming you turn <code>MyType</code> into a memory managed type by simply adding a member of type <code>MemInfoPointer</code>. However, the approach should have been to create a new type <code>MyMemoryManagedType</code> that contains a member of type <code>MemInfoPointer(dtype=MyType)</code>. (Non-memory managed members of  <code>MyType</code> could be hoisted to <code>MyMemoryManagedType</code>.) ",
  "id": "5b7a6503e026575f0f99fa3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-08-20T06:51:47.498Z",
  "text": "I see, I was assuming you turn `MyType` into a memory managed type by simply adding a member of type `MemInfoPointer`. However, the approach should have been to create a new type `MyMemoryManagedType` that contains a member of type `MemInfoPointer(dtype=MyType)`. (Non-memory managed members of  `MyType` could be hoisted to `MyMemoryManagedType`.) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes, it\u2019s like smart pointers in C++",
  "id": "5b7ac076157b9d34efb24cf5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-20T13:21:58.418Z",
  "text": "yes, it\u2019s like smart pointers in C++",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3172\" class=\"issue\">#3172</a> has fixes for the review comments, &amp; I was wondering <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> if you had a chance to get the error messages from the build farm for <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3186\" class=\"issue\">#3186</a>?",
  "id": "5b7b33ddf5402f32aa6a85e9",
  "issues": [
   {
    "number": "3172"
   },
   {
    "number": "3186"
   }
  ],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-20T21:34:21.110Z",
  "text": "#3172 has fixes for the review comments, & I was wondering @seibert if you had a chance to get the error messages from the build farm for #3186?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fschlimb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1215821?v=4&s=60",
   "displayName": "Frank Schlimbach",
   "gv": "4",
   "id": "5a8a99f7d73408ce4f8dbfb7",
   "url": "/fschlimb",
   "username": "fschlimb",
   "v": 10
  },
  "html": "I am trying to use <code>llvmlite.binding.add_symbol</code> to selectively bind symbols from a dynamic library. I tried using something like<br><code>dll = ctypes.cdll.LoadLibrary(os.path.join(path, dll_name))\nllvmlite.binding.add_symbol(&#39;foo&#39;, ctypes.addressof(getattr(dll, &#39;foo&#39;)))</code><br>but this leads to a crash when using it in something like <code>builder.module.get_or_insert_function</code>. If I use <code>llvmlite.binding.load_library_permanently(os.path.join(path, dll_name))</code> all works fine, though.<br>Is this supposed to work or am I doing something wrong?",
  "id": "5b7d724cf86b741b05a938e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-22T14:25:16.244Z",
  "text": "I am trying to use `llvmlite.binding.add_symbol` to selectively bind symbols from a dynamic library. I tried using something like\n`dll = ctypes.cdll.LoadLibrary(os.path.join(path, dll_name))\nllvmlite.binding.add_symbol('foo', ctypes.addressof(getattr(dll, 'foo')))`\nbut this leads to a crash when using it in something like `builder.module.get_or_insert_function`. If I use `llvmlite.binding.load_library_permanently(os.path.join(path, dll_name))` all works fine, though.\nIs this supposed to work or am I doing something wrong?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Played around with reflected types containing reflected types a little. There seem to be two things that need attention (1) decrefing the Python object when the <code>MemInfo</code> gets released and (2) clearing object private data iff the <code>MemInfoPointer</code> was stored there. Something like (1) is already implemented in<code>jitclass</code> and <code>runtime.rtsys.meminfo_new</code> where the <code>MemInfo-&gt;dtor</code> acquires the GIL and decrefs the owner object. I&#39;d say that (2) can be implemented along the same lines.   ",
  "id": "5b7faa6f58a3797aa3abe086",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-24T06:49:19.507Z",
  "text": "Played around with reflected types containing reflected types a little. There seem to be two things that need attention (1) decrefing the Python object when the `MemInfo` gets released and (2) clearing object private data iff the `MemInfoPointer` was stored there. Something like (1) is already implemented in`jitclass` and `runtime.rtsys.meminfo_new` where the `MemInfo->dtor` acquires the GIL and decrefs the owner object. I'd say that (2) can be implemented along the same lines.   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Would it make sense to add a member <code>MemInfo-&gt;ownerobj</code> to the struct in <code>nrt.c</code> and have <code>NRT_MemInfo_call_dtor</code> decref <code>ownerobj</code> and reset private data? This would add a dependency on the Python API  to <code>nrt.c</code>. I am not sure if <code>nrt.c</code> is used in contexts where the Python API is not available.  ",
  "id": "5b7fabaaac25fd11b5887c18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-24T06:54:34.548Z",
  "text": "Would it make sense to add a member `MemInfo->ownerobj` to the struct in `nrt.c` and have `NRT_MemInfo_call_dtor` decref `ownerobj` and reset private data? This would add a dependency on the Python API  to `nrt.c`. I am not sure if `nrt.c` is used in contexts where the Python API is not available.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "It is yeah. Or at least I am using it without python",
  "id": "5b800757c53ee54c189827f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-24T13:25:43.155Z",
  "text": "It is yeah. Or at least I am using it without python",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am curious how you all make those documents for your weekly meetings that show all open issues. I am looking for different ways JupyterLab can have systems around issue triaging and I liked your workflow. ",
  "id": "5b80079afd3c641b0602d101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-24T13:26:50.556Z",
  "text": "I am curious how you all make those documents for your weekly meetings that show all open issues. I am looking for different ways JupyterLab can have systems around issue triaging and I liked your workflow. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Manually at the moment... :)",
  "id": "5b8012e64be56c59188d5409",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-24T14:15:02.954Z",
  "text": "Manually at the moment... :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "We use <a href=\"https://hackmd.io/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://hackmd.io/</a> as the temporary place we can all view and edit the agenda in Markdown during the meeting, then I copy it into the wiki after the meeting to preserve it.",
  "id": "5b801328ff4451561630d86a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-24T14:16:08.138Z",
  "text": "We use https://hackmd.io/ as the temporary place we can all view and edit the agenda in Markdown during the meeting, then I copy it into the wiki after the meeting to preserve it.",
  "unread": false,
  "urls": [
   {
    "url": "https://hackmd.io/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "and I just copy paste all the new issues and PRs on Thursday morning, and put it the markdown links by hand.  I should write a script to do it, but never quite get around to it.",
  "id": "5b801351d8d36815e583a676",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-24T14:16:49.468Z",
  "text": "and I just copy paste all the new issues and PRs on Thursday morning, and put it the markdown links by hand.  I should write a script to do it, but never quite get around to it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Oh haha ",
  "id": "5b8145c44be56c591893be0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-25T12:04:20.895Z",
  "text": "Oh haha ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span>  so you have a use case where you are sure not to encounter jitclasses etc. Would it already be an issue if <code>nrt.c</code> would include <code>Python.h</code> and link against Python?  ",
  "id": "5b83b3a1f5402f32aa995333",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-27T08:17:37.691Z",
  "text": "@saulshanabrook  so you have a use case where you are sure not to encounter jitclasses etc. Would it already be an issue if `nrt.c` would include `Python.h` and link against Python?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I think so. I have started using NRT inside numba-xnd(<a href=\"https://github.com/Quansight/numba-xnd/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/</a>) for reference counting, and the plan is to be able to compile a kernel AOT and use it in another language that doesn&#39;t have python bindings. ",
  "id": "5b843664d8d36815e599b5fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T17:35:32.028Z",
  "text": "I think so. I have started using NRT inside numba-xnd(https://github.com/Quansight/numba-xnd/) for reference counting, and the plan is to be able to compile a kernel AOT and use it in another language that doesn't have python bindings. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I haven&#39;t looked into jitclasses, but are you saying that using them requires the python runtime? ",
  "id": "5b8437259c71d363c138f466",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T17:38:45.167Z",
  "text": "I haven't looked into jitclasses, but are you saying that using them requires the python runtime? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Python jitclasses use the Python runtime in the destructor for the meminfo. An implementation of a jitclasses in another language would probably use something from that languages runtime to clean up. ",
  "id": "5b845fd9c53ee54c18afd794",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-27T20:32:25.257Z",
  "text": "Python jitclasses use the Python runtime in the destructor for the meminfo. An implementation of a jitclasses in another language would probably use something from that languages runtime to clean up. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Using a Python jitclass in another language will probably not be easy. I&#39;ll keep anything Python specific in &#39;nrt_python.c&#39; then. T",
  "id": "5b84608ce5b40332ab086d79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-27T20:35:24.101Z",
  "text": "Using a Python jitclass in another language will probably not be easy. I'll keep anything Python specific in 'nrt_python.c' then. T",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Thank you!",
  "id": "5b84611058a3797aa3c57766",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T20:37:36.717Z",
  "text": "Thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Still, I&#39;d think introduction of something like an owner object on meminfo would make things easier as &#39;dtor_info&#39; is pretty crowded already. The owner object just must be a void pointer and implementation of the dtor goes into &#39;nrt_python.",
  "id": "5b84617b1d3a5711b6a84eec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-27T20:39:23.621Z",
  "text": "Still, I'd think introduction of something like an owner object on meminfo would make things easier as 'dtor_info' is pretty crowded already. The owner object just must be a void pointer and implementation of the dtor goes into 'nrt_python.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "c&#39;",
  "id": "5b8461831d3a5711b6a84ef0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-27T20:39:31.482Z",
  "text": "c'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "has anyone used a DeferredType recently? it looks broken (if I&#39;m using it correctly).",
  "id": "5b8461ee58a3797aa3c57d35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T20:41:18.508Z",
  "text": "has anyone used a DeferredType recently? it looks broken (if I'm using it correctly).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>: ^^^",
  "id": "5b8461fa7649b9063e11cd68",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T20:41:30.408Z",
  "text": "@sklam: ^^^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<pre><code>  File <span class=\"string\">\"/home/etotoni/pse-hpc/python/numba/numba/typeinfer.py\"</span>, line <span class=\"number\">463</span>, <span class=\"keyword\">in</span> resolve\n    typeinfer.<span class=\"function\"><span class=\"title\">add_type</span><span class=\"params\">(self.target, sig.return_type, loc=self.loc)</span></span>\n  File <span class=\"string\">\"/home/etotoni/pse-hpc/python/numba/numba/typeinfer.py\"</span>, line <span class=\"number\">870</span>, <span class=\"keyword\">in</span> add_type\n    unified = tv.<span class=\"function\"><span class=\"title\">add_type</span><span class=\"params\">(tp, loc=loc)</span></span>\n  File <span class=\"string\">\"/home/etotoni/pse-hpc/python/numba/numba/typeinfer.py\"</span>, line <span class=\"number\">46</span>, <span class=\"keyword\">in</span> add_type\n    assert <span class=\"function\"><span class=\"title\">isinstance</span><span class=\"params\">(tp, types.Type)</span></span>, <span class=\"function\"><span class=\"title\">type</span><span class=\"params\">(tp)</span></span>\nAssertionError: &lt;class <span class=\"string\">'numba.types.abstract._TypeMetaclass'</span>&gt;</code></pre>",
  "id": "5b8462b59c71d363c13a06bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T20:44:37.870Z",
  "text": "```\n  File \"/home/etotoni/pse-hpc/python/numba/numba/typeinfer.py\", line 463, in resolve\n    typeinfer.add_type(self.target, sig.return_type, loc=self.loc)\n  File \"/home/etotoni/pse-hpc/python/numba/numba/typeinfer.py\", line 870, in add_type\n    unified = tv.add_type(tp, loc=loc)\n  File \"/home/etotoni/pse-hpc/python/numba/numba/typeinfer.py\", line 46, in add_type\n    assert isinstance(tp, types.Type), type(tp)\nAssertionError: <class 'numba.types.abstract._TypeMetaclass'>\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>, the examples/{binarytree, linkedlist, stack}.py are using it and they runs fine on master",
  "id": "5b846331cff55e56176c6438",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T20:46:41.089Z",
  "text": "@ehsantn, the examples/{binarytree, linkedlist, stack}.py are using it and they runs fine on master",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "Thanks for the pointer to examples. I was using <code>deferred_type</code> instead of <code>deferred_type()</code>.",
  "id": "5b8464051d3a5711b6a85fd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-27T20:50:13.444Z",
  "text": "Thanks for the pointer to examples. I was using `deferred_type` instead of `deferred_type()`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "I&#39;m calling <code>NRT_MemInfo_alloc_safe_aligned</code> from C (similar to how _box.c does it). Looks like the allocated <code>NRT_MemInfo</code> struct is 56 byte in this case, but 104 bytes when Numba calls it. This results in crashes later. Any idea?",
  "id": "5b857b3acff55e561772c50e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T16:41:30.312Z",
  "text": "I'm calling `NRT_MemInfo_alloc_safe_aligned` from C (similar to how _box.c does it). Looks like the allocated `NRT_MemInfo` struct is 56 byte in this case, but 104 bytes when Numba calls it. This results in crashes later. Any idea?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "Sorry, alignment difference is taken in account here. But calling alloc from C still causes crashes even with the same alighment.",
  "id": "5b8581a21d3a5711b6aee36e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T17:08:50.820Z",
  "text": "Sorry, alignment difference is taken in account here. But calling alloc from C still causes crashes even with the same alighment.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "let me check",
  "id": "5b858ab49c71d363c140c6e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T17:47:32.985Z",
  "text": "let me check",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>, where is the crash happening?  During write to the buffer? During dtor?",
  "id": "5b858cd3ac25fd11b5a90f30",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T17:56:35.060Z",
  "text": "@ehsantn, where is the crash happening?  During write to the buffer? During dtor?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "calling <code>data = context.nrt.meminfo_data(builder, meminfo)</code>",
  "id": "5b858cfae5b40332ab0f3867",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T17:57:14.701Z",
  "text": "calling `data = context.nrt.meminfo_data(builder, meminfo)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "with meminfo allocated on the C side",
  "id": "5b858d089c71d363c140d543",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T17:57:28.568Z",
  "text": "with meminfo allocated on the C side",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "actually, if I don&#39;t use <code>NRT_MemInfo_data</code> on the C side it doesn&#39;t crash",
  "id": "5b858e5be5b40332ab0f4125",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:03:07.873Z",
  "text": "actually, if I don't use `NRT_MemInfo_data` on the C side it doesn't crash",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "which could mean that <code>NRT_MemInfo_data</code> and <code>NRT_MemInfo_data_fast</code> (used on LLVM side) are not consistent.",
  "id": "5b858e95f0123801799d3e0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:04:05.722Z",
  "text": "which could mean that `NRT_MemInfo_data` and `NRT_MemInfo_data_fast` (used on LLVM side) are not consistent.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I might have been hitting a similar bug.",
  "id": "5b858eab9c71d363c140dd68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:04:27.157Z",
  "text": "I might have been hitting a similar bug.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "the C side is using the former and overwriting MemInfo struct by mistake?",
  "id": "5b858eac58a3797aa3cc4ddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:04:28.331Z",
  "text": "the C side is using the former and overwriting MemInfo struct by mistake?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I noticed thtat it manually builds the LLVM struct type for MemInfo, which could lead to it being inconsistant with the C struct",
  "id": "5b858edc7649b9063e18b2fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:05:16.014Z",
  "text": "I noticed thtat it manually builds the LLVM struct type for MemInfo, which could lead to it being inconsistant with the C struct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "found a solution or workaround?",
  "id": "5b858edcac25fd11b5a919cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:05:16.426Z",
  "text": "found a solution or workaround?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "yes",
  "id": "5b858ee67649b9063e18b364",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:05:26.312Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "No, in the process it made me realize I need to rethink some memory management things more broadly so I am taking a step back",
  "id": "5b858ef49c71d363c140df2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2018-08-28T18:05:40.728Z",
  "text": "No, in the process it made me realize I need to rethink some memory management things more broadly so I am taking a step back",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "What we have luck with is generating a bunch of C functions that serve as getters for the C structs. <a href=\"https://github.com/Quansight/numba-xnd/blob/master/xnd_structinfo.c\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Quansight/numba-xnd/blob/master/xnd_structinfo.c</a> ",
  "id": "5b858f1a60f9ee7aa4a422e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-08-28T18:06:18.705Z",
  "text": "What we have luck with is generating a bunch of C functions that serve as getters for the C structs. https://github.com/Quansight/numba-xnd/blob/master/xnd_structinfo.c ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Quansight/numba-xnd/blob/master/xnd_structinfo.c"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Maybe you could take that approach instead of re-encoding struct in LLVM?",
  "id": "5b858f2af86b741b05d6ac16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-28T18:06:34.015Z",
  "text": "Maybe you could take that approach instead of re-encoding struct in LLVM?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "Found a solution. adding <code>declmethod(MemInfo_data);</code> in <code>_nrt_pythonnod.c</code>fixes the issue. The C compiler probably avoids messing with it.",
  "id": "5b85937560f9ee7aa4a44051",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-08-28T18:24:53.545Z",
  "text": "Found a solution. adding `declmethod(MemInfo_data);` in `_nrt_pythonnod.c`fixes the issue. The C compiler probably avoids messing with it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ehsantn\" class=\"mention\">@ehsantn</span>, It could be that the cpu_target is not initialized",
  "id": "5b85990a60f9ee7aa4a461bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "ehsantn",
    "userId": "56537ea416b6c7089cbbe080",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2018-08-28T18:48:42.964Z",
  "text": "@ehsantn, It could be that the cpu_target is not initialized",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "in <code>cpu.py</code> <code>CPUContext.init</code> is doing a <code>rtsys.initialize</code>",
  "id": "5b859920ac25fd11b5a96050",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T18:49:04.433Z",
  "text": "in `cpu.py` `CPUContext.init` is doing a `rtsys.initialize`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "to test that, you can add the following to the segfaulting case:<pre><code class=\"python\"><span class=\"keyword\">from</span> numba.targets.registry <span class=\"keyword\">import</span> cpu_target\nprint(cpu_target.target_context)</code></pre>",
  "id": "5b85994b94f8164c17b21bce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T18:49:47.968Z",
  "text": "to test that, you can add the following to the segfaulting case:\n```python\nfrom numba.targets.registry import cpu_target\nprint(cpu_target.target_context)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "^ that just initializes the cpu target context",
  "id": "5b859976d8d36815e5a1f45f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T18:50:30.659Z",
  "text": "^ that just initializes the cpu target context",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> this doesn&#39;t make any difference. The code is actually generated after a whole bunch of other stuff so initialization has happened.",
  "id": "5b859cdff86b741b05d70123",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:05:03.338Z",
  "text": "@sklam this doesn't make any difference. The code is actually generated after a whole bunch of other stuff so initialization has happened.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "ok, so this is interesting",
  "id": "5b859d574be56c5918ab8340",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:07:03.426Z",
  "text": "ok, so this is interesting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "only <code>declmethod(MemInfo_data);</code> solves it.",
  "id": "5b859d6aff445156164f348d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:07:22.499Z",
  "text": "only `declmethod(MemInfo_data);` solves it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "Without this line, the function wouldn&#39;t be declared in <code>c_helpers</code> so I was probably just calling some invalid pointer.",
  "id": "5b859e5d60f9ee7aa4a482b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:11:25.159Z",
  "text": "Without this line, the function wouldn't be declared in `c_helpers` so I was probably just calling some invalid pointer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "just double checked, the output was garbage.",
  "id": "5b859ebe1d3a5711b6af9b32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:13:02.950Z",
  "text": "just double checked, the output was garbage.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i am seeing a 8 bytes difference between the <code>NRT_MemInfo_data_fast</code> and <code>NRT_MemInfo_data</code>",
  "id": "5b85a13ccff55e561773b6fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:23:40.049Z",
  "text": "i am seeing a 8 bytes difference between the `NRT_MemInfo_data_fast` and `NRT_MemInfo_data`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "nvm, I checking the wrong thing.",
  "id": "5b85a48af5402f32aaa4ea36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:37:46.077Z",
  "text": "nvm, I checking the wrong thing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it looks like the 2 calls are consistent",
  "id": "5b85a542f0123801799dcca3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T19:40:50.951Z",
  "text": "it looks like the 2 calls are consistent",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ehsantn",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2333645?v=4&s=60",
   "displayName": "Ehsan Totoni",
   "gv": "4",
   "id": "56537ea416b6c7089cbbe080",
   "url": "/ehsantn",
   "username": "ehsantn",
   "v": 17
  },
  "html": "sounds good.",
  "id": "5b85aa10ff445156164f7bf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-08-28T20:01:20.344Z",
  "text": "sounds good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "I build a little (proof-of-concept)[<a target=\"_blank\" data-link-type=\"pr\" data-issue=\"3\" href=\"https://github.com/asodeur/numba/pull/3\" data-provider=\"github\" data-issue-repo=\"asodeur/numba\" class=\"pr\">asodeur/numba#3</a>] for nested reflected types. This works for my usecase but can the approach work for usecases where there is no Python runtime and/or aot compilation? Any ideas?  ",
  "id": "5b87daceac25fd11b5b697f2",
  "issues": [
   {
    "number": "3",
    "repo": "asodeur/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-08-30T11:53:50.707Z",
  "text": "I build a little (proof-of-concept)[https://github.com/asodeur/numba/pull/3] for nested reflected types. This works for my usecase but can the approach work for usecases where there is no Python runtime and/or aot compilation? Any ideas?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Hi - is <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3172\" class=\"issue\">#3172</a> ready to merge? Also - could I get the failing messages from the buildfarm for <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3186\" class=\"issue\">#3186</a>? Thanks -",
  "id": "5b8c551e11b41f69dbaeb0c5",
  "issues": [
   {
    "number": "3172"
   },
   {
    "number": "3186"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-02T21:24:46.348Z",
  "text": "Hi - is #3172 ready to merge? Also - could I get the failing messages from the buildfarm for #3186? Thanks -",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> thanks, just running <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3172\" class=\"issue\">#3172</a> though the farm as it was tagged to do so. Will also find the logs for <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3186\" class=\"issue\">#3186</a>.",
  "id": "5b8d6a1458a3797aa3f93b85",
  "issues": [
   {
    "number": "3172"
   },
   {
    "number": "3186"
   }
  ],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-03T17:06:28.794Z",
  "text": "@njwhite thanks, just running #3172 though the farm as it was tagged to do so. Will also find the logs for #3186.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Thanks for the logs @",
  "id": "5b8f09b1c9500b4bab824ff2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-04T22:39:45.807Z",
  "text": "Thanks for the logs @",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> ",
  "id": "5b8f09d51d3a5711b6e5d8b2",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-04T22:40:21.411Z",
  "text": "@seibert ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "I pushed some fixes",
  "id": "5b8f09e558a3797aa30344d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-04T22:40:37.619Z",
  "text": "I pushed some fixes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Don\u2019t like gitter\u2019s web interface on mobile though ",
  "id": "5b8f0a0c1d3a5711b6e5da1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-04T22:41:16.344Z",
  "text": "Don\u2019t like gitter\u2019s web interface on mobile though ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Has anyone had luck using valgrind to help when debugging numba? ",
  "id": "5b929cdc7ce5f5314f7948c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-07T15:44:28.719Z",
  "text": "Has anyone had luck using valgrind to help when debugging numba? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "depends what you are doing",
  "id": "5b929e4df3c26b08f641f8d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-07T15:50:37.095Z",
  "text": "depends what you are doing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and what you are breaking :)",
  "id": "5b929ea151a02e2a26f709a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-07T15:52:01.332Z",
  "text": "and what you are breaking :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "doing pointer math around meminfo nrt :)",
  "id": "5b92a64151a02e2a26f7433b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-07T16:24:33.269Z",
  "text": "doing pointer math around meminfo nrt :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it may be useful then",
  "id": "5b92a78051a02e2a26f74c62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-07T16:29:52.609Z",
  "text": "it may be useful then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if you compile the DSOs with -g",
  "id": "5b92a793728ddf0282747019",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-07T16:30:11.441Z",
  "text": "if you compile the DSOs with -g",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "you can also switch on the GCC sanitizers to help",
  "id": "5b92a7b1151b090281e08179",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-07T16:30:41.514Z",
  "text": "you can also switch on the GCC sanitizers to help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I have figured out that it is outputting too many NRT_decref calls",
  "id": "5b981b8251a02e2a2616d29d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-11T19:46:10.902Z",
  "text": "I have figured out that it is outputting too many NRT_decref calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "This is my model:<pre><code><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CStructModel</span><span class=\"params\">(numba.datamodel.models.OpaqueModel)</span>:</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">contains_nrt_meminfo</span><span class=\"params\">(self)</span>:</span>\n        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span>\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">has_nrt_meminfo</span><span class=\"params\">(self)</span>:</span>\n        <span class=\"keyword\">return</span> self.fe_type.nrt_allocated\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_nrt_meminfo</span><span class=\"params\">(self, builder: llvmlite.ir.IRBuilder, value)</span>:</span>\n        <span class=\"string\">\"\"\"\n        nrt meminfo pointer begins before the allocated data pointer. So we subtract size of meminfo to get to this pointer\n        \"\"\"</span>\n        <span class=\"keyword\">return</span> builder.gep(value, [index(-SIZEOF_MEMINFO)], inbounds=<span class=\"keyword\">True</span>)</code></pre>",
  "id": "5b981bca550f8808f595d1d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-11T19:47:22.497Z",
  "text": "This is my model:\n\n```\nclass CStructModel(numba.datamodel.models.OpaqueModel):\n    def contains_nrt_meminfo(self):\n        return False\n\n    def has_nrt_meminfo(self):\n        return self.fe_type.nrt_allocated\n\n    def get_nrt_meminfo(self, builder: llvmlite.ir.IRBuilder, value):\n        \"\"\"\n        nrt meminfo pointer begins before the allocated data pointer. So we subtract size of meminfo to get to this pointer\n        \"\"\"\n        return builder.gep(value, [index(-SIZEOF_MEMINFO)], inbounds=True)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "It&#39;s pretty weird, it is emitting the correct decref in the optimized LLVM, but also has all these other incorrect decrefs:<pre><code>  %.<span class=\"number\">24</span>.i = tail call <span class=\"keyword\">i8</span>* @NRT_MemInfo_alloc_safe(<span class=\"keyword\">i64</span> <span class=\"number\">24</span>), !noalias !<span class=\"number\">1</span>\n  tail call void @print_pointer(<span class=\"keyword\">i8</span>* %.<span class=\"number\">24</span>.i), !noalias !<span class=\"number\">1</span>\n  %.<span class=\"number\">5</span>.i.i = getelementptr <span class=\"keyword\">i8</span>, <span class=\"keyword\">i8</span>* %.<span class=\"number\">24</span>.i, <span class=\"keyword\">i64</span> <span class=\"number\">24</span>\n  %<span class=\"number\">0</span> = bitcast <span class=\"keyword\">i8</span>* %.<span class=\"number\">5</span>.i.i to <span class=\"keyword\">i8</span>**\n  %.<span class=\"number\">6</span>.i.i = load <span class=\"keyword\">i8</span>*, <span class=\"keyword\">i8</span>** %<span class=\"number\">0</span>, align <span class=\"number\">8</span>, !noalias !<span class=\"number\">1</span>\n  tail call void @print_pointer(<span class=\"keyword\">i8</span>* %.<span class=\"number\">6</span>.i.i), !noalias !<span class=\"number\">1</span>\n  %.<span class=\"number\">28</span>.i = getelementptr <span class=\"keyword\">i8</span>, <span class=\"keyword\">i8</span>* %.<span class=\"number\">24</span>.i, <span class=\"keyword\">i64</span> <span class=\"number\">40</span>\n  tail call void @print_pointer(<span class=\"keyword\">i8</span>* %.<span class=\"number\">28</span>.i), !noalias !<span class=\"number\">1</span>\n  %.<span class=\"number\">70</span>.i = tail call <span class=\"keyword\">i32</span>* @get_ndt_context_t_err(<span class=\"keyword\">i8</span>* %.<span class=\"number\">28</span>.i), !noalias !<span class=\"number\">1</span>\n  store <span class=\"keyword\">i32</span> <span class=\"number\">0</span>, <span class=\"keyword\">i32</span>* %.<span class=\"number\">70</span>.i, align <span class=\"number\">4</span>, !noalias !<span class=\"number\">1</span>\n  %.<span class=\"number\">103</span>.i = tail call <span class=\"keyword\">i32</span>* @get_ndt_context_t_err(<span class=\"keyword\">i8</span>* %.<span class=\"number\">28</span>.i), !noalias !<span class=\"number\">1</span>\n  %.<span class=\"number\">104</span>.i = load <span class=\"keyword\">i32</span>, <span class=\"keyword\">i32</span>* %.<span class=\"number\">103</span>.i, align <span class=\"number\">4</span>, !noalias !<span class=\"number\">1</span>\n  tail call void @NRT_decref(<span class=\"keyword\">i8</span>* inttoptr (<span class=\"keyword\">i64</span> -<span class=\"number\">40</span> to <span class=\"keyword\">i8</span>*)), !noalias !<span class=\"number\">1</span>\n  tail call void @NRT_decref(<span class=\"keyword\">i8</span>* inttoptr (<span class=\"keyword\">i64</span> -<span class=\"number\">40</span> to <span class=\"keyword\">i8</span>*)), !noalias !<span class=\"number\">1</span>\n  tail call void @NRT_decref(<span class=\"keyword\">i8</span>* inttoptr (<span class=\"keyword\">i64</span> -<span class=\"number\">40</span> to <span class=\"keyword\">i8</span>*)), !noalias !<span class=\"number\">1</span>\n  tail call void @NRT_decref(<span class=\"keyword\">i8</span>* inttoptr (<span class=\"keyword\">i64</span> -<span class=\"number\">40</span> to <span class=\"keyword\">i8</span>*)), !noalias !<span class=\"number\">1</span>\n  tail call void @NRT_decref(<span class=\"keyword\">i8</span>* %.<span class=\"number\">24</span>.i), !noalias !<span class=\"number\">1</span>\n  %.<span class=\"number\">36</span> = sext <span class=\"keyword\">i32</span> %.<span class=\"number\">104</span>.i to <span class=\"keyword\">i64</span>\n  %.<span class=\"number\">38</span> = tail call <span class=\"keyword\">i8</span>* @PyLong_FromLongLong(<span class=\"keyword\">i64</span> %.<span class=\"number\">36</span>)\n  ret <span class=\"keyword\">i8</span>* %.<span class=\"number\">38</span>\n}</code></pre>",
  "id": "5b981c4351a02e2a2616d67f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-11T19:49:23.550Z",
  "text": "It's pretty weird, it is emitting the correct decref in the optimized LLVM, but also has all these other incorrect decrefs:\n\n```\n  %.24.i = tail call i8* @NRT_MemInfo_alloc_safe(i64 24), !noalias !1\n  tail call void @print_pointer(i8* %.24.i), !noalias !1\n  %.5.i.i = getelementptr i8, i8* %.24.i, i64 24\n  %0 = bitcast i8* %.5.i.i to i8**\n  %.6.i.i = load i8*, i8** %0, align 8, !noalias !1\n  tail call void @print_pointer(i8* %.6.i.i), !noalias !1\n  %.28.i = getelementptr i8, i8* %.24.i, i64 40\n  tail call void @print_pointer(i8* %.28.i), !noalias !1\n  %.70.i = tail call i32* @get_ndt_context_t_err(i8* %.28.i), !noalias !1\n  store i32 0, i32* %.70.i, align 4, !noalias !1\n  %.103.i = tail call i32* @get_ndt_context_t_err(i8* %.28.i), !noalias !1\n  %.104.i = load i32, i32* %.103.i, align 4, !noalias !1\n  tail call void @NRT_decref(i8* inttoptr (i64 -40 to i8*)), !noalias !1\n  tail call void @NRT_decref(i8* inttoptr (i64 -40 to i8*)), !noalias !1\n  tail call void @NRT_decref(i8* inttoptr (i64 -40 to i8*)), !noalias !1\n  tail call void @NRT_decref(i8* inttoptr (i64 -40 to i8*)), !noalias !1\n  tail call void @NRT_decref(i8* %.24.i), !noalias !1\n  %.36 = sext i32 %.104.i to i64\n  %.38 = tail call i8* @PyLong_FromLongLong(i64 %.36)\n  ret i8* %.38\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "The last one is correct",
  "id": "5b981c4af59e0c1555e33e44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-11T19:49:30.704Z",
  "text": "The last one is correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "How would you go about debugging when incref/decref calls are added?",
  "id": "5b981cc51e2b442a25f97e88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-11T19:51:33.450Z",
  "text": "How would you go about debugging when incref/decref calls are added?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am not adding any manually",
  "id": "5b981cf57189ae6fddae2789",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-11T19:52:21.258Z",
  "text": "I am not adding any manually",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "As far as I understand your model should contain a meminfo member pointing to your data. Only <code>MemInfoPointer</code> implements <code>get_nrt_meminfo</code> and <code>has_nrt_meminfo</code>. <code>contains_nrt_meminfo</code> should be left as inherited from <code>DataModel</code>. If you have a meminfo member and implement <code>(get|has)_nrt_meminfo</code> you are going to get decrefed twice (or more). I fell into the same trap.",
  "id": "5b98f56be481f854a6a8b913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-09-12T11:15:55.736Z",
  "text": "As far as I understand your model should contain a meminfo member pointing to your data. Only `MemInfoPointer` implements `get_nrt_meminfo` and `has_nrt_meminfo`. `contains_nrt_meminfo` should be left as inherited from `DataModel`. If you have a meminfo member and implement `(get|has)_nrt_meminfo` you are going to get decrefed twice (or more). I fell into the same trap.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asodeur\" class=\"mention\">@asodeur</span> thanks for the feedback. I have seen how that&#39;s how the existing models work that use meminfo",
  "id": "5b990f61cddb292dff616d50",
  "issues": [],
  "mentions": [
   {
    "screenName": "asodeur",
    "userId": "5b39e8fbd73408ce4f9f4daf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2018-09-12T13:06:41.271Z",
  "text": "@asodeur thanks for the feedback. I have seen how that's how the existing models work that use meminfo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<code>CStructModel</code> should replace the need for <code>MemInfoPointer</code> though. I am registering my type directly with that model.",
  "id": "5b990f9b7189ae6fddb3cd5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:07:39.967Z",
  "text": "`CStructModel` should replace the need for `MemInfoPointer` though. I am registering my type directly with that model.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am trying to use the same model and type for objects allocated with nrt and those without. So they are represented as pointers to the data. Then if they were nrt allocated (which I store on the type) they can back to the start of the meminfo pointer by subtracting off the sizeof meminfo, since the data is allocated in the same chunk as the meminfo struct.",
  "id": "5b99104351a02e2a261c7681",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:10:27.871Z",
  "text": "I am trying to use the same model and type for objects allocated with nrt and those without. So they are represented as pointers to the data. Then if they were nrt allocated (which I store on the type) they can back to the start of the meminfo pointer by subtracting off the sizeof meminfo, since the data is allocated in the same chunk as the meminfo struct.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "So conceptually it seems OK to me, but I am getting all these extra decref&#39;s that seem to appear based on like old of the pointer or something? I notice in the un optimized LLVM, the object is stored as an <code>i8**</code> and then before each of the decref&#39;s it is loaded, then <code>gep</code> is called on it. ",
  "id": "5b9910c07189ae6fddb3d585",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:12:32.311Z",
  "text": "So conceptually it seems OK to me, but I am getting all these extra decref's that seem to appear based on like old of the pointer or something? I notice in the un optimized LLVM, the object is stored as an `i8**` and then before each of the decref's it is loaded, then `gep` is called on it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "This is the unoptimized: <a href=\"https://gist.github.com/saulshanabrook/099627eccbc6901cd7612ce1385e3ca6\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/saulshanabrook/099627eccbc6901cd7612ce1385e3ca6</a>",
  "id": "5b9910f07189ae6fddb3d6ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:13:20.211Z",
  "text": "This is the unoptimized: https://gist.github.com/saulshanabrook/099627eccbc6901cd7612ce1385e3ca6",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/saulshanabrook/099627eccbc6901cd7612ce1385e3ca6"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "This seems weird, this is right after it&#39;s allocated:<pre><code>  %<span class=\"string\">\".24\"</span> = call <span class=\"keyword\">i8</span>* @<span class=\"string\">\"NRT_MemInfo_alloc_safe\"</span>(<span class=\"keyword\">i64</span> %<span class=\"string\">\".23\"</span>)\n  %<span class=\"string\">\".25\"</span> = getelementptr <span class=\"keyword\">i8</span>, <span class=\"keyword\">i8</span>* %<span class=\"string\">\".24\"</span>, <span class=\"keyword\">i32</span> <span class=\"number\">40</span>\n  %<span class=\"string\">\".27\"</span> = load <span class=\"keyword\">i8</span>*, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.5\"</span>\n  %<span class=\"string\">\".28\"</span> = getelementptr inbounds <span class=\"keyword\">i8</span>, <span class=\"keyword\">i8</span>* %<span class=\"string\">\".27\"</span>, <span class=\"keyword\">i32</span> -<span class=\"number\">40</span>\n  call void @<span class=\"string\">\"NRT_decref\"</span>(<span class=\"keyword\">i8</span>* %<span class=\"string\">\".28\"</span>)\n  store <span class=\"keyword\">i8</span>* %<span class=\"string\">\".25\"</span>, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.5\"</span></code></pre>",
  "id": "5b99116745318b2dfe9a9908",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:15:19.564Z",
  "text": "This seems weird, this is right after it's allocated:\n\n```\n  %\".24\" = call i8* @\"NRT_MemInfo_alloc_safe\"(i64 %\".23\")\n  %\".25\" = getelementptr i8, i8* %\".24\", i32 40\n  %\".27\" = load i8*, i8** %\"$0.5\"\n  %\".28\" = getelementptr inbounds i8, i8* %\".27\", i32 -40\n  call void @\"NRT_decref\"(i8* %\".28\")\n  store i8* %\".25\", i8** %\"$0.5\"\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<code>NRT_decref</code> is called on the loaded value of <code>%&quot;$0.5&quot;</code> but this is before the pointer is actually stored there...",
  "id": "5b99118dcddb292dff617ebe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:15:57.425Z",
  "text": "`NRT_decref` is called on the loaded value of `%\"$0.5\"` but this is before the pointer is actually stored there...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<code>%&quot;.28&quot; = getelementptr inbounds i8, i8* %&quot;.27&quot;, i32 -40</code> is from the <code>get_nrt_meminfo</code> function, so that makes sense. It&#39;s just operating on a pointer value that&#39;s 0 because it hasn&#39;t been set yet",
  "id": "5b9911b2e481f854a6a971bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:16:34.977Z",
  "text": "`%\".28\" = getelementptr inbounds i8, i8* %\".27\", i32 -40` is from the `get_nrt_meminfo` function, so that makes sense. It's just operating on a pointer value that's 0 because it hasn't been set yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "No meminfo members anywhere? My suspicion was <code>runtime.context._call_incref_decref</code> finds a meminfo to decref somewhere  embedded in your type. There also is <code>runtime.nrtopt</code> that does optimizations on increfs/decrefs but that is way beyond my current understanding. Maybe that optimization makes assumptions that no longer hold with your code?   ",
  "id": "5b99132b550f8808f59ba924",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-09-12T13:22:51.755Z",
  "text": "No meminfo members anywhere? My suspicion was `runtime.context._call_incref_decref` finds a meminfo to decref somewhere  embedded in your type. There also is `runtime.nrtopt` that does optimizations on increfs/decrefs but that is way beyond my current understanding. Maybe that optimization makes assumptions that no longer hold with your code?   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-09-12T13:28:47.212Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<blockquote>\n<p>My suspicion was runtime.context._call_incref_decref finds a meminfo to decref somewhere embedded in your type.</p></blockquote>\n<p>Naw, the <code>members</code> there is empty, I think because <code>contains_nrt_meminfo</code> returns <code>False</code>. </p><blockquote>\n<p>There also is runtime.nrtopt that does optimizations on increfs/decrefs but that is way beyond my current understanding. Maybe that optimization makes assumptions that no longer hold with your code?</p></blockquote>\n<p>Yeah I was thinking that <code>runtime.nrtopt</code> was the issue at first as well, but it seems to produce incorrect incref/decref and tooo many decrefs anyway, before that is run</p>",
  "id": "5b99147bcddb292dff6193f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-09-12T13:28:27.054Z",
  "text": "> My suspicion was runtime.context._call_incref_decref finds a meminfo to decref somewhere embedded in your type.\n\nNaw, the `members` there is empty, I think because `contains_nrt_meminfo` returns `False`. \n\n> There also is runtime.nrtopt that does optimizations on increfs/decrefs but that is way beyond my current understanding. Maybe that optimization makes assumptions that no longer hold with your code?\n\nYeah I was thinking that `runtime.nrtopt` was the issue at first as well, but it seems to produce incorrect incref/decref and tooo many decrefs anyway, before that is run",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Curses, my const.array_like PR <em>does</em> have an alignment bug. <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3382\" class=\"issue\">#3382</a> ready for review",
  "id": "5bb7d142c08b8b3067dae8de",
  "issues": [
   {
    "number": "3382"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-10-05T21:01:54.770Z",
  "text": "Curses, my const.array_like PR *does* have an alignment bug. #3382 ready for review",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Ping <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3382\" class=\"issue\">#3382</a> please ",
  "id": "5bbe56b1384492366118ca61",
  "issues": [
   {
    "number": "3382"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-10-10T19:44:49.206Z",
  "text": "Ping #3382 please ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3399\" class=\"issue\">#3399</a> also ready for review",
  "id": "5bc08fa2ae7be9401644c726",
  "issues": [
   {
    "number": "3399"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-10-12T12:12:18.776Z",
  "text": "#3399 also ready for review",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> thanks, I&#39;ve marked them as ready.",
  "id": "5bc0d8daf659e67772a576d6",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-10-12T17:24:42.336Z",
  "text": "@njwhite thanks, I've marked them as ready.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "Thanks. Travis is being rather flakey this week",
  "id": "5bc0dad5c7bf7c3662fe19ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-10-12T17:33:09.695Z",
  "text": "Thanks. Travis is being rather flakey this week",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": ":(",
  "id": "5bc0dae0bbdc0b25052e4325",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-10-12T17:33:20.071Z",
  "text": ":(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "np. Yes, hopefully at least some of that got fixed in <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"3394\" href=\"https://github.com/numba/numba/pull/3394\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#3394</a> which should run for all new commits to PRs.",
  "id": "5bc0ed96bbdc0b25052ed443",
  "issues": [
   {
    "number": "3394",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-10-12T18:53:10.140Z",
  "text": "np. Yes, hopefully at least some of that got fixed in https://github.com/numba/numba/pull/3394 which should run for all new commits to PRs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": ".",
  "id": "5bf2dbcb2735965dfefe3da1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2018-11-19T15:50:35.354Z",
  "text": ".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rjenc29",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=60",
   "displayName": "rjenc29",
   "gv": "4",
   "id": "5afc8df5d73408ce4f9997a7",
   "url": "/rjenc29",
   "username": "rjenc29",
   "v": 35
  },
  "html": "Hi all.  I have two versions of the same algorithm over here: <a href=\"https://gist.github.com/rjenc29/e0b15089d10a2b9045c397793f22f35a\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/rjenc29/e0b15089d10a2b9045c397793f22f35a</a> - one is about x10 faster than the other.  After a bit of poking around, I am still not sure I understand why this is.  If you get a chance to take a look at some point, I would appreciate your feedback. ",
  "id": "5c28845893cce97d3bbc7179",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-12-30T08:39:52.790Z",
  "text": "Hi all.  I have two versions of the same algorithm over here: https://gist.github.com/rjenc29/e0b15089d10a2b9045c397793f22f35a - one is about x10 faster than the other.  After a bit of poking around, I am still not sure I understand why this is.  If you get a chance to take a look at some point, I would appreciate your feedback. ",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/rjenc29/e0b15089d10a2b9045c397793f22f35a"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rjenc29\" class=\"mention\">@rjenc29</span> expect that&#39;s because the first uses broadcasting which goes via a generic code-generation-for-broadcast path (code handles the n-dimensional array case opposed to just 2D) whereas in the second case bounds etc are explicitly set. Would have to dig around in the IR to see precisely what&#39;s going on.",
  "id": "5c29f7e9babbc178b205c5f2",
  "issues": [],
  "mentions": [
   {
    "screenName": "rjenc29",
    "userId": "5afc8df5d73408ce4f9997a7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-12-31T11:05:13.188Z",
  "text": "@rjenc29 expect that's because the first uses broadcasting which goes via a generic code-generation-for-broadcast path (code handles the n-dimensional array case opposed to just 2D) whereas in the second case bounds etc are explicitly set. Would have to dig around in the IR to see precisely what's going on.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/rjenc29",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13890854?v=4&s=60",
   "displayName": "rjenc29",
   "gv": "4",
   "id": "5afc8df5d73408ce4f9997a7",
   "url": "/rjenc29",
   "username": "rjenc29",
   "v": 35
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> OK cool, that sounds intuitively reasonable - I was just surprised by the delta in run times.  On the plus side, I sense I will be able to speed up a bunch of algos at work in the new year :)",
  "id": "5c29f8c7f6166a302798d02b",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-12-31T11:08:55.973Z",
  "text": "@stuartarchibald OK cool, that sounds intuitively reasonable - I was just surprised by the delta in run times.  On the plus side, I sense I will be able to speed up a bunch of algos at work in the new year :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":) makes me wonder if its possible to do something about it",
  "id": "5c29fa218dafa715c71d6a6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-12-31T11:14:41.606Z",
  "text": ":) makes me wonder if its possible to do something about it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the type information of the ndarray contains that it&#39;s 2d",
  "id": "5c29fa9f09b806684990f56d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-12-31T11:16:47.559Z",
  "text": "the type information of the ndarray contains that it's 2d",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so it ought to be possible to specialize",
  "id": "5c29faad0b7fc97caac83875",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-12-31T11:17:01.294Z",
  "text": "so it ought to be possible to specialize",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Hi all, looks like the timeout on Travis CI is a little tight. Jobs including coverage seem to take around 50min now (which happens to be the timeout). ",
  "id": "5c3373fc3cf6c35a84a5d614",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-01-07T15:45:00.888Z",
  "text": "Hi all, looks like the timeout on Travis CI is a little tight. Jobs including coverage seem to take around 50min now (which happens to be the timeout). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I think we are going to drop the code coverage test from Travis CI",
  "id": "5c3374171491b27876d5b76e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-01-07T15:45:27.004Z",
  "text": "yeah, I think we are going to drop the code coverage test from Travis CI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "so that it stops giving us false positive failures",
  "id": "5c33741f1d1c2c3f9cd75045",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-01-07T15:45:35.173Z",
  "text": "so that it stops giving us false positive failures",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "we&#39;ll have to move code coverage tracking to Azure where the timeouts are longer and the machines are faster",
  "id": "5c3374308b6399655e206612",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-01-07T15:45:52.572Z",
  "text": "we'll have to move code coverage tracking to Azure where the timeouts are longer and the machines are faster",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Hi, I got a first version of pass through types in PR <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3640\" class=\"issue\">#3640</a>  but I am very indecisive on how to manage ownership. Tried to write-up the possible solutions at the bottom the PR. Any opinions?",
  "id": "5c3456c06370df0b91a9af1f",
  "issues": [
   {
    "number": "3640"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-01-08T07:52:32.066Z",
  "text": "Hi, I got a first version of pass through types in PR #3640  but I am very indecisive on how to manage ownership. Tried to write-up the possible solutions at the bottom the PR. Any opinions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Rewrote <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3640\" class=\"issue\">#3640</a> based on <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>&#39;s comments. Looks a lot cleaner now. Besides the pass through type to ferry python object through nopython mode, it still contains tools to create pass through types on the native side that box to a single Python object even if returned more than once (see <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3639\" class=\"issue\">#3639</a>). Not sure there is a use-case for this in the first place and even if there is it should probably be kept separate from pass through types. Thoughts?",
  "id": "5c419fec20b78635b641a3f8",
  "issues": [
   {
    "number": "3640"
   },
   {
    "number": "3639"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-01-18T09:44:12.671Z",
  "text": "Rewrote #3640 based on @sklam's comments. Looks a lot cleaner now. Besides the pass through type to ferry python object through nopython mode, it still contains tools to create pass through types on the native side that box to a single Python object even if returned more than once (see #3639). Not sure there is a use-case for this in the first place and even if there is it should probably be kept separate from pass through types. Thoughts?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Finished the next make-over of <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3640\" class=\"issue\">#3640</a>. I&#39;d think the pass through functionality should be ok now. The PR still implements some functions for <code>Opaque</code> (<code>int</code>, <code>is_</code>, ...) in <code>passthru.py</code> that should probably move in the long-term (if considered generally useful) or be more narrowly typed.",
  "id": "5c74f13a53efa9120379a420",
  "issues": [
   {
    "number": "3640"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-02-26T07:56:42.310Z",
  "text": "Finished the next make-over of #3640. I'd think the pass through functionality should be ok now. The PR still implements some functions for `Opaque` (`int`, `is_`, ...) in `passthru.py` that should probably move in the long-term (if considered generally useful) or be more narrowly typed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "&#39;ello",
  "id": "5c782f92b1503b3d705ab3b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-02-28T18:59:30.300Z",
  "text": "'ello",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "howdy!",
  "id": "5c78332547276019e9945121",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-02-28T19:14:45.304Z",
  "text": "howdy!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> and others,<br>I would like to make the first micro release of the project Remote Backend Compiler, see <a href=\"https://github.com/plures/rbc\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/plures/rbc</a>, that is about compiling Python functions to machine code remotely: the LLVM IR of a Python function is generated in local host, the IR is sent to remote host where it is compiled to machine code. When local host calls the function, then the arguments are sent to the remote host where the function will be executed, finally, the results are returned to local host. See the following notebook for an example: <a href=\"https://github.com/plures/rbc/blob/master/notebooks/rbc-simple.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/plures/rbc/blob/master/notebooks/rbc-simple.ipynb</a> .<br>The rbc package uses numba and llvmlite for LLVM IR generation and compilation, thriftpy2 for RPC tasks.<br>Any feedback is greatly appreciated. Thanks!",
  "id": "5c7b0868b1503b3d706d718c",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   },
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-03-02T22:49:12.433Z",
  "text": "Hi @seibert @stuartarchibald @sklam and others,\nI would like to make the first micro release of the project Remote Backend Compiler, see https://github.com/plures/rbc, that is about compiling Python functions to machine code remotely: the LLVM IR of a Python function is generated in local host, the IR is sent to remote host where it is compiled to machine code. When local host calls the function, then the arguments are sent to the remote host where the function will be executed, finally, the results are returned to local host. See the following notebook for an example: https://github.com/plures/rbc/blob/master/notebooks/rbc-simple.ipynb .\nThe rbc package uses numba and llvmlite for LLVM IR generation and compilation, thriftpy2 for RPC tasks.\nAny feedback is greatly appreciated. Thanks!",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/plures/rbc"
   },
   {
    "url": "https://github.com/plures/rbc/blob/master/notebooks/rbc-simple.ipynb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pearu\" class=\"mention\">@pearu</span> it looks interesting!",
  "id": "5c7c8180cbebcf784a362c50",
  "issues": [],
  "mentions": [
   {
    "screenName": "pearu",
    "userId": "54f9b3c315522ed4b3dce583",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-04T01:38:08.135Z",
  "text": "@pearu it looks interesting!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"pearu\" class=\"mention\">@pearu</span>, does it  assume all remotes to be the same architecture?  A weird thing about LLVM is that the frontend often emits  ABI-specific and arch-specific LLVM-IR",
  "id": "5c7d47d6e8ea143737af1ff1",
  "issues": [],
  "mentions": [
   {
    "screenName": "pearu",
    "userId": "54f9b3c315522ed4b3dce583",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-04T15:44:22.987Z",
  "text": " @pearu, does it  assume all remotes to be the same architecture?  A weird thing about LLVM is that the frontend often emits  ABI-specific and arch-specific LLVM-IR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "no, the plan is to make it work for different remote architectures. In particular, the application of rbc would generate NVVM IR locally for remote execution.",
  "id": "5c7d4aebb1503b3d707bae3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-04T15:57:31.635Z",
  "text": "no, the plan is to make it work for different remote architectures. In particular, the application of rbc would generate NVVM IR locally for remote execution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "llvmlite.binding.ModuleRef provides a <code>functions</code>iterator, is there also an iterator of basic blocks and an iterator of instructions in a basic block?",
  "id": "5c7e9aaa65ffa019ea902be0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-05T15:50:02.647Z",
  "text": "llvmlite.binding.ModuleRef provides a `functions`iterator, is there also an iterator of basic blocks and an iterator of instructions in a basic block?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the llvmlite.binding is very minimal, just enough for numba.  There are C-API for iterating BB and insts but there are not exposed",
  "id": "5c7ee77ce1446a6ebe8ab3a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-05T21:17:48.800Z",
  "text": "the llvmlite.binding is very minimal, just enough for numba.  There are C-API for iterating BB and insts but there are not exposed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>functions</code> iterator is giving the <code>ValueRef</code>(<a href=\"https://llvmlite.readthedocs.io/en/latest/user-guide/binding/value-references.html#llvmlite.binding.ValueRef\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://llvmlite.readthedocs.io/en/latest/user-guide/binding/value-references.html#llvmlite.binding.ValueRef</a>)",
  "id": "5c7ee7878a7def07521c938e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-05T21:17:59.712Z",
  "text": "the `functions` iterator is giving the `ValueRef`(https://llvmlite.readthedocs.io/en/latest/user-guide/binding/value-references.html#llvmlite.binding.ValueRef)",
  "unread": false,
  "urls": [
   {
    "url": "https://llvmlite.readthedocs.io/en/latest/user-guide/binding/value-references.html#llvmlite.binding.ValueRef"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "It\u2019s not hard to add those however",
  "id": "5c7ee7b90966d912042b80bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-05T21:18:49.030Z",
  "text": "It\u2019s not hard to add those however",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Since BB and instructions are also Values, does it mean that one should just add a new attribute to ValueRef, say <code>values</code>, that would be an iterator over function BB-s or BB instructions?",
  "id": "5c7f9c51bf7990126e5a64ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-06T10:09:21.642Z",
  "text": "Since BB and instructions are also Values, does it mean that one should just add a new attribute to ValueRef, say `values`, that would be an iterator over function BB-s or BB instructions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> , could you take a look at <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"466\" href=\"https://github.com/numba/llvmlite/pull/466\" data-provider=\"github\" data-issue-repo=\"numba/llvmlite\" class=\"pr\">numba/llvmlite#466</a> that implements iterators for function blocks and block instructions. The blocks iterator seems to work (see examples/llvmir_iter.py) but instructions iterator fails. I am not sure why yet.",
  "id": "5c7ffdb50a6b915163e6795d",
  "issues": [
   {
    "number": "466",
    "repo": "numba/llvmlite"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-06T17:04:53.193Z",
  "text": "@sklam , could you take a look at https://github.com/numba/llvmlite/pull/466 that implements iterators for function blocks and block instructions. The blocks iterator seems to work (see examples/llvmir_iter.py) but instructions iterator fails. I am not sure why yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pearu\" class=\"mention\">@pearu</span>, i have just left some comments in the PR.  Btw, that\u2019s the right approach.",
  "id": "5c8027d5293ac75db564493d",
  "issues": [],
  "mentions": [
   {
    "screenName": "pearu",
    "userId": "54f9b3c315522ed4b3dce583",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-06T20:04:37.308Z",
  "text": "@pearu, i have just left some comments in the PR.  Btw, that\u2019s the right approach.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Thanks for the comments! Now the iterators work fine.<br>Btw, functions, blocks, and instructions are all ValueRef instances. Would it make sense to subclass ValueRef to make these instances distinct (as they are with respect to a number of methods). That is, introduce <code>FunctionRef</code>, <code>BlockRef</code>, <code>InstructionRef</code> derived from <code>ValueRef</code>?",
  "id": "5c802c253162ec7bc72cb23f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-06T20:23:01.357Z",
  "text": "Thanks for the comments! Now the iterators work fine.\nBtw, functions, blocks, and instructions are all ValueRef instances. Would it make sense to subclass ValueRef to make these instances distinct (as they are with respect to a number of methods). That is, introduce `FunctionRef`, `BlockRef`, `InstructionRef` derived from `ValueRef`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "I implemented another approach instead where <code>ValueRef</code> defines <code>is_function</code>, <code>is_block</code>, <code>is_instruction</code> properties to make the distinction.",
  "id": "5c8037b01fae6423ca41b3f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-06T21:12:16.277Z",
  "text": "I implemented another approach instead where `ValueRef` defines `is_function`, `is_block`, `is_instruction` properties to make the distinction.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hi all, is it possible to test a single test and not the entire file? ",
  "id": "5c8fbff42fb6800d803e697c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-03-18T15:57:40.966Z",
  "text": "Hi all, is it possible to test a single test and not the entire file? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> yes, either of these:",
  "id": "5c8fc94efcaf7b5f73d560d9",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-03-18T16:37:34.243Z",
  "text": "@guilhermeleobas yes, either of these:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>./runtests<span class=\"class\">.py</span> numba<span class=\"class\">.tests</span><span class=\"class\">.test_tuples</span><span class=\"class\">.TestOperations</span><span class=\"class\">.test_add</span></code></pre>or<pre><code>python -m numba<span class=\"class\">.runtests</span> numba<span class=\"class\">.tests</span><span class=\"class\">.test_tuples</span><span class=\"class\">.TestOperations</span><span class=\"class\">.test_add</span></code></pre>",
  "id": "5c8fc966dfc69a1454b54f4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-03-18T16:37:58.257Z",
  "text": "```\n./runtests.py numba.tests.test_tuples.TestOperations.test_add\n```\nor\n```\npython -m numba.runtests numba.tests.test_tuples.TestOperations.test_add\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "do the same thing",
  "id": "5c8fc96c52c7a91455b65cdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-03-18T16:38:04.163Z",
  "text": "do the same thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "general pattern is <code>module &lt;dot&gt; testclass &lt;dot&gt; testname</code>",
  "id": "5c8fc9826a3d2e230de5a453",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-03-18T16:38:26.520Z",
  "text": "general pattern is `module <dot> testclass <dot> testname`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>",
  "id": "5c91236f9d9cc8114ae8ece3",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-03-19T17:14:23.674Z",
  "text": "thanks @stuartarchibald",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> no problem",
  "id": "5c91258d2f6ded0abb0caad9",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-03-19T17:23:25.249Z",
  "text": "@guilhermeleobas no problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<p>Hi all, I am implementing numpy.delete for Numba. </p><p>In the code below, numba fails to infer the type because of the usage of <code>bool</code> and I don\u2019t know why. </p><pre><code><span class=\"decorator\">@overload(np.delete)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">np_delete</span><span class=\"params\">(a, obj)</span>:</span>\n\n    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isinstance(a, types.Array):\n        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">\"'arr' must be an array\"</span>)\n\n    <span class=\"keyword\">if</span> isinstance(obj, types.Array):\n        ...\n\n    <span class=\"keyword\">elif</span> isinstance(obj, types.Sequence):\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">np_delete_impl</span><span class=\"params\">(a, obj)</span>:</span>\n            keep = np.ones(len(a), dtype=bool) <span class=\"comment\"># &lt;\u2014 Type inference fails here because of bool</span>\n            keep[obj] = <span class=\"keyword\">False</span>\n            <span class=\"keyword\">return</span> a[obj]\n\n    <span class=\"keyword\">else</span>: <span class=\"comment\"># scalar value</span>\n        ...\n\n    <span class=\"keyword\">return</span> np_delete_impl</code></pre>",
  "id": "5c9147afd0133e21e5e00372",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-03-19T19:49:03.511Z",
  "text": "Hi all, I am implementing numpy.delete for Numba. \n\nIn the code below, numba fails to infer the type because of the usage of `bool` and I don\u2019t know why. \n\n```\n@overload(np.delete)\ndef np_delete(a, obj):\n\n    if not isinstance(a, types.Array):\n        raise ValueError(\"'arr' must be an array\")\n\n    if isinstance(obj, types.Array):\n        ...\n\n    elif isinstance(obj, types.Sequence):\n        def np_delete_impl(a, obj):\n            keep = np.ones(len(a), dtype=bool) # <\u2014 Type inference fails here because of bool\n            keep[obj] = False\n            return a[obj]\n\n    else: # scalar value\n        ...\n\n    return np_delete_impl\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> you probably want the type <code>np.bool_</code>",
  "id": "5c9206f5d0133e21e5e4ab85",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-20T09:25:09.863Z",
  "text": "@guilhermeleobas you probably want the type `np.bool_`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I assume the error you are seeing is along the lines of &quot;bool is a function, expected a type&quot; ?",
  "id": "5c920712dfc69a1454c46db1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-20T09:25:38.007Z",
  "text": "I assume the error you are seeing is along the lines of \"bool is a function, expected a type\" ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> the error was different",
  "id": "5c92e49d2fb6800d8053e8da",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-21T01:10:53.020Z",
  "text": "@stuartarchibald the error was different",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "but <code>np.bool_</code> solved the problem",
  "id": "5c92e4a3dfc69a1454ca9061",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-21T01:10:59.032Z",
  "text": "but `np.bool_` solved the problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/grej",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=60",
   "displayName": "Greg",
   "gv": "4",
   "id": "56ef6d2985d51f252ab9e6d2",
   "url": "/grej",
   "username": "grej",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> - I submitted a PR for the bug report I submitted yesterday on np.random.choice (<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3888\" class=\"issue\">#3888</a>). You were correct that it was an implementation difference. After looking at the NumPy source, it uses <code>np.random.permutation</code> in the implementation of <code>choice</code> when <code>replace=False</code>. I created a PR to reproduce that same implementation, which matches the output and tests out fine locally. However, it failed tests on submission with <code>Bash exited with code &#39;1&#39;.</code> I would be happy to have a code review on it. I&#39;m unsure why it failed. It&#39;s a very simple modification.",
  "id": "5c95a51d6a3d2e230d0d6d3f",
  "issues": [
   {
    "number": "3888"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-23T03:16:45.301Z",
  "text": "@stuartarchibald - I submitted a PR for the bug report I submitted yesterday on np.random.choice (#3888). You were correct that it was an implementation difference. After looking at the NumPy source, it uses `np.random.permutation` in the implementation of `choice` when `replace=False`. I created a PR to reproduce that same implementation, which matches the output and tests out fine locally. However, it failed tests on submission with `Bash exited with code '1'.` I would be happy to have a code review on it. I'm unsure why it failed. It's a very simple modification.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/grej",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=60",
   "displayName": "Greg",
   "gv": "4",
   "id": "56ef6d2985d51f252ab9e6d2",
   "url": "/grej",
   "username": "grej",
   "v": 8
  },
  "html": "I see now - I was never aware that that size given to random.choice could be a tuple",
  "id": "5c9647655547f7744851cd06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-23T14:49:09.414Z",
  "text": "I see now - I was never aware that that size given to random.choice could be a tuple",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/grej",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=60",
   "displayName": "Greg",
   "gv": "4",
   "id": "56ef6d2985d51f252ab9e6d2",
   "url": "/grej",
   "username": "grej",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> - <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"3897\" href=\"https://github.com/numba/numba/pull/3897\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#3897</a> should hopefully be ok now, if you&#39;d like to give it a review.",
  "id": "5c97e7af3dd817114945cf02",
  "issues": [
   {
    "number": "3897",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-24T20:25:19.934Z",
  "text": "@stuartarchibald - https://github.com/numba/numba/pull/3897 should hopefully be ok now, if you'd like to give it a review.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/grej",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=60",
   "displayName": "Greg",
   "gv": "4",
   "id": "56ef6d2985d51f252ab9e6d2",
   "url": "/grej",
   "username": "grej",
   "v": 8
  },
  "html": "I also have code that addresses this issue: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2539\" href=\"https://github.com/numba/numba/issues/2539\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2539</a><br>However, my code uses the Vose / Walker alias sampling method and the current numpy implementation does not, so it will not give the same results that numpy gives under seeded conditions. I am still happy to prep it and submit a PR for that issue anyway, if you and the numba team can live with that",
  "id": "5c97e86c6a3d2e230d1ba3fd",
  "issues": [
   {
    "number": "2539",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-03-24T20:28:28.081Z",
  "text": "I also have code that addresses this issue: https://github.com/numba/numba/issues/2539\nHowever, my code uses the Vose / Walker alias sampling method and the current numpy implementation does not, so it will not give the same results that numpy gives under seeded conditions. I am still happy to prep it and submit a PR for that issue anyway, if you and the numba team can live with that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/grej",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=60",
   "displayName": "Greg",
   "gv": "4",
   "id": "56ef6d2985d51f252ab9e6d2",
   "url": "/grej",
   "username": "grej",
   "v": 8
  },
  "html": "PS - there is one test that&#39;s listed as failing for the PR,  but it failed due to &quot;The job exceeded the maximum time limit for jobs, and has been terminated.&quot;",
  "id": "5c97eb3d8126720abc38f149",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-24T20:40:29.858Z",
  "text": "PS - there is one test that's listed as failing for the PR,  but it failed due to \"The job exceeded the maximum time limit for jobs, and has been terminated.\"\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"grej\" class=\"mention\">@grej</span> thanks for looking into this and submitting a PR. I think first let&#39;s get the basic behaviour working, and then look at other issues?",
  "id": "5c98a9f649fdaa0d8111824b",
  "issues": [],
  "mentions": [
   {
    "screenName": "grej",
    "userId": "56ef6d2985d51f252ab9e6d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-25T10:14:14.396Z",
  "text": "@grej thanks for looking into this and submitting a PR. I think first let's get the basic behaviour working, and then look at other issues?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The CI logs should have reasons for test failures included (as  I expect you have now found), you can also run tests locally with <code>./runtests.py</code>, e.g. <code>./runtests.py numba.tests.test_random.TestRandomChoice.test_choice_array_1</code>",
  "id": "5c98aa4d0d7190505760e0f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-25T10:15:41.318Z",
  "text": "The CI logs should have reasons for test failures included (as  I expect you have now found), you can also run tests locally with `./runtests.py`, e.g. `./runtests.py numba.tests.test_random.TestRandomChoice.test_choice_array_1`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and don&#39;t worry about the job timeout, that&#39;s not your problem :)",
  "id": "5c98aa5e3dd81711494a9934",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-25T10:15:58.401Z",
  "text": "and don't worry about the job timeout, that's not your problem :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/grej",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1704466?v=4&s=60",
   "displayName": "Greg",
   "gv": "4",
   "id": "56ef6d2985d51f252ab9e6d2",
   "url": "/grej",
   "username": "grej",
   "v": 8
  },
  "html": "Agree that it makes sense to fix the bug issue first before adding the feature. I\u2019ll add a few tests for the appropriate behavior and ping you again.",
  "id": "5c98cfcc9d9cc8114a1b9938",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-03-25T12:55:40.556Z",
  "text": "Agree that it makes sense to fix the bug issue first before adding the feature. I\u2019ll add a few tests for the appropriate behavior and ping you again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "Morning!",
  "id": "5ca44759f851ee043d52666c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-04-03T05:40:41.998Z",
  "text": "Morning!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/mukundm19",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/26772174?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/26772174?v=4&s=60",
   "displayName": "mukundm19",
   "gv": "4",
   "id": "5cab6a8cd73408ce4fbd23fe",
   "url": "/mukundm19",
   "username": "mukundm19",
   "v": 3
  },
  "html": "Hello, My name is Mukund and I am a senior at the University of Michigan currently. I came across the Numbas repo while looking for an open source project I could make some contributions to for a class I&#39;m enrolled in. I have a  lot of experience with python and a little bit of other languages and was hoping to find some tasks/bugs I could jump on and resolve in the next few weeks. I was wondering if you recommend starting with any specific bug (i&#39;ve looked at <a href=\"https://github.com/numbas/editor/labels/good%20first%20issue\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numbas/editor/labels/good%20first%20issue</a>). Thanks for the help. Looking forward to making some contributions!",
  "id": "5cab6cbe25686a7dc3f7fe34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-08T15:46:06.330Z",
  "text": "Hello, My name is Mukund and I am a senior at the University of Michigan currently. I came across the Numbas repo while looking for an open source project I could make some contributions to for a class I'm enrolled in. I have a  lot of experience with python and a little bit of other languages and was hoping to find some tasks/bugs I could jump on and resolve in the next few weeks. I was wondering if you recommend starting with any specific bug (i've looked at https://github.com/numbas/editor/labels/good%20first%20issue). Thanks for the help. Looking forward to making some contributions!",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numbas/editor/labels/good%20first%20issue"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mukundm19\" class=\"mention\">@mukundm19</span> Thanks for the interest. First, just to clarify, this is the Numba project (NumPy aware dynamic Python compiler using LLVM) <a href=\"https://github.com/numba/numba\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba</a>, whereas you mention &quot;Numbas&quot;? ",
  "id": "5cab7e32b34ccd69e785a4e1",
  "issues": [],
  "mentions": [
   {
    "screenName": "mukundm19",
    "userId": "5cab6a8cd73408ce4fbd23fe",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-08T17:00:34.503Z",
  "text": "@mukundm19 Thanks for the interest. First, just to clarify, this is the Numba project (NumPy aware dynamic Python compiler using LLVM) https://github.com/numba/numba, whereas you mention \"Numbas\"? ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Some good first issues can be found here: <a href=\"https://github.com/numba/numba/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22</a>",
  "id": "5cab7f180aad6350194d15ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-08T17:04:24.198Z",
  "text": "Some good first issues can be found here: https://github.com/numba/numba/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It&#39;s best to comment on an issue that you find interesting and then someone can offer advice/check that someone else isn&#39;t halfway through doing it etc.",
  "id": "5cab7f59a0790b29c9823a3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-08T17:05:29.916Z",
  "text": "It's best to comment on an issue that you find interesting and then someone can offer advice/check that someone else isn't halfway through doing it etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/machineko",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=60",
   "displayName": "machineko",
   "gv": "4",
   "id": "5cb79b22d73408ce4fbe0460",
   "url": "/machineko",
   "username": "machineko",
   "v": 5
  },
  "html": "Hello guys did u know why numba numpy.sort() version is a lot slower (~15-25%) slower on medium to large arrays then pure numpy version?",
  "id": "5cb9e39f1cd0b8307d3b3b42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-19T15:05:03.644Z",
  "text": "Hello guys did u know why numba numpy.sort() version is a lot slower (~15-25%) slower on medium to large arrays then pure numpy version?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-19T15:11:22.281Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/machineko",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=60",
   "displayName": "machineko",
   "gv": "4",
   "id": "5cb79b22d73408ce4fbe0460",
   "url": "/machineko",
   "username": "machineko",
   "v": 5
  },
  "html": "np.random.randint(10, 2000, (2000000)) -&gt; sorting this is 2 times slower on njit version then pure numpy argsort. On njit np.sort vs pure numpy.sort() is  about  50%  slower",
  "id": "5cb9e49f990feb4518cafd64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-19T15:09:19.294Z",
  "text": "np.random.randint(10, 2000, (2000000)) -> sorting this is 2 times slower on njit version then pure numpy argsort. On njit np.sort vs pure numpy.sort() is  about  50%  slower",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"machineko\" class=\"mention\">@machineko</span> IIRC Numba uses a different alg",
  "id": "5cb9f26e3b6cb0686a1c457d",
  "issues": [],
  "mentions": [
   {
    "screenName": "machineko",
    "userId": "5cb79b22d73408ce4fbe0460",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-19T16:08:14.800Z",
  "text": "@machineko IIRC Numba uses a different alg",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "there&#39;s a warning in the docs <a href=\"http://numba.pydata.org/numba-doc/dev/reference/numpysupported.html#other-methods\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/dev/reference/numpysupported.html#other-methods</a>",
  "id": "5cb9f27b6a84d76ed8be11c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-19T16:08:27.201Z",
  "text": "there's a warning in the docs http://numba.pydata.org/numba-doc/dev/reference/numpysupported.html#other-methods",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/dev/reference/numpysupported.html#other-methods"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "though, looking at the code,  the alg differences shouldn&#39;t cause that size difference",
  "id": "5cb9f2ee5b3f941aa55a172b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-19T16:10:22.767Z",
  "text": "though, looking at the code,  the alg differences shouldn't cause that size difference",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "feel free to open a ticket in the issue tracker",
  "id": "5cb9f3cb990feb4518cb6553",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-04-19T16:14:03.006Z",
  "text": "feel free to open a ticket in the issue tracker",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/machineko",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=60",
   "displayName": "machineko",
   "gv": "4",
   "id": "5cb79b22d73408ce4fbe0460",
   "url": "/machineko",
   "username": "machineko",
   "v": 5
  },
  "html": "Sure ill open it with my pull request for isin and fixed np.unique",
  "id": "5cb9f4cb375bac7470cf27d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-19T16:18:19.134Z",
  "text": "Sure ill open it with my pull request for isin and fixed np.unique",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Is there a ticket tracking what&#39;s wrong with <code>np.unique</code>? ",
  "id": "5cb9f7fca4ef097471c624d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-19T16:31:56.676Z",
  "text": "Is there a ticket tracking what's wrong with `np.unique`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and thanks for making these contributions :)",
  "id": "5cb9f8505b3f941aa55a3a61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-19T16:33:20.870Z",
  "text": "and thanks for making these contributions :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/machineko",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/42299606?v=4&s=60",
   "displayName": "machineko",
   "gv": "4",
   "id": "5cb79b22d73408ce4fbe0460",
   "url": "/machineko",
   "username": "machineko",
   "v": 5
  },
  "html": "Hey nope but will be  (maybe this wont be a fix but just extension) cause right now is done without any arguments and working on python lists :D",
  "id": "5cba0de3990feb4518cc0f6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-04-19T18:05:23.160Z",
  "text": "Hey nope but will be  (maybe this wont be a fix but just extension) cause right now is done without any arguments and working on python lists :D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/cdeil",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/852409?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/852409?v=4&s=60",
   "displayName": "Christoph Deil",
   "gv": "4",
   "id": "53638060048862e761fa0383",
   "url": "/cdeil",
   "username": "cdeil",
   "v": 14
  },
  "html": "<p>Is someone from the Numba devs going to EuroPython or PyConDE&amp;PyData this year to give a presentation or training on Numba?</p><p><a href=\"https://ep2019.europython.eu/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://ep2019.europython.eu/</a><br><a href=\"https://de.pycon.org/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://de.pycon.org/</a></p><p>I want to go to one or both of those, and present or teach something. But I don&#39;t want to compete if others want to present on Numba, since I&#39;m not a Numba dev, just a user &amp; fan. So if one of you will present on Numba there,  I&#39;d pick a different topic to propose in the CfP (which just opened and already will close in 2 weeks for EuroPython), or if it&#39;s a training session I could help out as a teaching assistent if you think it&#39;s useful. I&#39;m  new to Numba, but I have many years experience with scientific Python and have given talks &amp; tutorials before.</p>",
  "id": "5cc2f1a8b4700e023dd6b20b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-04-26T11:55:20.846Z",
  "text": "Is someone from the Numba devs going to EuroPython or PyConDE&PyData this year to give a presentation or training on Numba?\n\nhttps://ep2019.europython.eu/\nhttps://de.pycon.org/\n\nI want to go to one or both of those, and present or teach something. But I don't want to compete if others want to present on Numba, since I'm not a Numba dev, just a user & fan. So if one of you will present on Numba there,  I'd pick a different topic to propose in the CfP (which just opened and already will close in 2 weeks for EuroPython), or if it's a training session I could help out as a teaching assistent if you think it's useful. I'm  new to Numba, but I have many years experience with scientific Python and have given talks & tutorials before.",
  "unread": false,
  "urls": [
   {
    "url": "https://ep2019.europython.eu/"
   },
   {
    "url": "https://de.pycon.org/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cdeil\" class=\"mention\">@cdeil</span> I will be going an presenting hopefully at PyConDe/PyDataBerlin",
  "id": "5cc305875b3f941aa59649c5",
  "issues": [],
  "mentions": [
   {
    "screenName": "cdeil",
    "userId": "53638060048862e761fa0383",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:20:07.731Z",
  "text": "@cdeil I will be going an presenting hopefully at PyConDe/PyDataBerlin",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "europython conflicts with scipy in Austin",
  "id": "5cc3059997dcb371d818d638",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:20:25.371Z",
  "text": "europython conflicts with scipy in Austin",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "so I can&#39;t go there",
  "id": "5cc305c81cd0b8307d77c696",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:21:12.625Z",
  "text": "so I can't go there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "if my tutorial for PyConDe is accepted, help would be very nice",
  "id": "5cc305ebb4700e023dd753a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:21:47.849Z",
  "text": "if my tutorial for PyConDe is accepted, help would be very nice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cdeil\" class=\"mention\">@cdeil</span> if you present at EuroPython, we may be able to send you some Numba stickers",
  "id": "5cc306076a84d76ed8fab137",
  "issues": [],
  "mentions": [
   {
    "screenName": "cdeil",
    "userId": "53638060048862e761fa0383",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:22:15.703Z",
  "text": "@cdeil if you present at EuroPython, we may be able to send you some Numba stickers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "but please ask <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> ",
  "id": "5cc30616990feb4518074ee0",
  "issues": [],
  "mentions": [
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:22:30.461Z",
  "text": "but please ask @seibert ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cdeil\" class=\"mention\">@cdeil</span> in fact, it would be pretty cool, if you present at EuroPython!!",
  "id": "5cc306b4b489bb6ed7cb45eb",
  "issues": [],
  "mentions": [
   {
    "screenName": "cdeil",
    "userId": "53638060048862e761fa0383",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:25:08.528Z",
  "text": "@cdeil in fact, it would be pretty cool, if you present at EuroPython!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "yeah, I think we can get stickers out, possibly by way of our Berlin office",
  "id": "5cc30d6f5b3f941aa5968c0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:53:51.074Z",
  "text": "yeah, I think we can get stickers out, possibly by way of our Berlin office",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cdeil\" class=\"mention\">@cdeil</span> yes! We do have a Berlin office now, if you are ever in the area, please do let me know and we can have lunch or coffee.",
  "id": "5cc30ecf3d78aa6c039b4b4e",
  "issues": [],
  "mentions": [
   {
    "screenName": "cdeil",
    "userId": "53638060048862e761fa0383",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-26T13:59:43.854Z",
  "text": "@cdeil yes! We do have a Berlin office now, if you are ever in the area, please do let me know and we can have lunch or coffee.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/cdeil",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/852409?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/852409?v=4&s=60",
   "displayName": "Christoph Deil",
   "gv": "4",
   "id": "53638060048862e761fa0383",
   "url": "/cdeil",
   "username": "cdeil",
   "v": 14
  },
  "html": "<p>Thanks for the replies: in this case, I&#39;ll submit a talk proposal for EuroPython, and try with some other topic at PyConDe/PyDataBerlin.</p><p><span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> - Good luck with your tutorial proposal for PyConDe/PyDataBerlin.<br>I&#39;ll join - if there&#39;s anything I can help with (e.g. try out / review materials before) - feel free to contact me any time at <a href=\"mailto:Deil.Christoph@gmail.com\" rel=\"nofollow\">Deil.Christoph@gmail.com</a></p>",
  "id": "5cc6e53aa4ef0974711bac27",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-04-29T11:51:22.214Z",
  "text": "Thanks for the replies: in this case, I'll submit a talk proposal for EuroPython, and try with some other topic at PyConDe/PyDataBerlin.\n\n@esc - Good luck with your tutorial proposal for PyConDe/PyDataBerlin.\nI'll join - if there's anything I can help with (e.g. try out / review materials before) - feel free to contact me any time at Deil.Christoph@gmail.com",
  "unread": false,
  "urls": [
   {
    "url": "mailto:Deil.Christoph@gmail.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cdeil\" class=\"mention\">@cdeil</span> :+1:",
  "id": "5cc6edb24b4cb471d978f86a",
  "issues": [],
  "mentions": [
   {
    "screenName": "cdeil",
    "userId": "53638060048862e761fa0383",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-04-29T12:27:30.385Z",
  "text": "@cdeil :+1:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jpivarski\" class=\"mention\">@jpivarski</span> welcome!!",
  "id": "5ccc86101cd0b8307db8dfeb",
  "issues": [],
  "mentions": [
   {
    "screenName": "jpivarski",
    "userId": "5a4e9793d73408ce4f862a26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-05-03T18:18:56.714Z",
  "text": "@jpivarski welcome!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> Hi!",
  "id": "5ccc95b54b4cb471d9a106a9",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-05-03T19:25:41.650Z",
  "text": "@esc Hi!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/cdeil",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/852409?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/852409?v=4&s=60",
   "displayName": "Christoph Deil",
   "gv": "4",
   "id": "53638060048862e761fa0383",
   "url": "/cdeil",
   "username": "cdeil",
   "v": 14
  },
  "html": "<p>Does anyone have other good examples of  &quot;numpy haikus&quot;? At <a href=\"https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy&#39;s-limitations?\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy&#39;s-limitations?</a> there&#39;s Game of Life as example, but really <a href=\"https://github.com/rougier/numpy-100/blob/master/100_Numpy_exercises.md#88-how-to-implement-the-game-of-life-using-numpy-arrays-\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/rougier/numpy-100/blob/master/100_Numpy_exercises.md#88-how-to-implement-the-game-of-life-using-numpy-arrays-</a> is not so bad. And there&#39;s Mandelbrot as a nice example of an iterative algorithm which really can&#39;t be done in Numpy, but one can just do maxiter for all pixels - so again the code with Numpy is very clean, just inefficient.</p><p>I&#39;m looking for 1-2 simple examples (fit on a slide at a talk) for algorithms that really can&#39;t be written in Numpy at all, or that are even more haiku than the one at <a href=\"https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy&#39;s-limitations?\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy&#39;s-limitations?</a><br>Actually that one is pretty good - I&#39;ll use that for a Numba introduction presentation on Friday, unless someone here has a better suggestion.</p>",
  "id": "5cd19c8ea4ef0974716573fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-07T14:56:14.318Z",
  "text": "Does anyone have other good examples of  \"numpy haikus\"? At https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy's-limitations? there's Game of Life as example, but really https://github.com/rougier/numpy-100/blob/master/100_Numpy_exercises.md#88-how-to-implement-the-game-of-life-using-numpy-arrays- is not so bad. And there's Mandelbrot as a nice example of an iterative algorithm which really can't be done in Numpy, but one can just do maxiter for all pixels - so again the code with Numpy is very clean, just inefficient.\n\nI'm looking for 1-2 simple examples (fit on a slide at a talk) for algorithms that really can't be written in Numpy at all, or that are even more haiku than the one at https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy's-limitations?\nActually that one is pretty good - I'll use that for a Numba introduction presentation on Friday, unless someone here has a better suggestion.",
  "unread": false,
  "urls": [
   {
    "url": "https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy&#39;s-limitations?"
   },
   {
    "url": "https://github.com/rougier/numpy-100/blob/master/100_Numpy_exercises.md#88-how-to-implement-the-game-of-life-using-numpy-arrays-"
   },
   {
    "url": "https://nbviewer.jupyter.org/github/ContinuumIO/pydata-amsterdam2019-numba/blob/master/1%20-%20NumPy%20and%20Numba%20on%20the%20CPU.ipynb#What-are-NumPy&#39;s-limitations?"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jpivarski\" class=\"mention\">@jpivarski</span> we will probably not get around to discusssing your request today, because half of the core-dev team aren&#39;t in the meeting. Hopefully next week!",
  "id": "5cd1a2ad3b6cb0686abbb153",
  "issues": [],
  "mentions": [
   {
    "screenName": "jpivarski",
    "userId": "5a4e9793d73408ce4f862a26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-05-07T15:22:21.960Z",
  "text": "@jpivarski we will probably not get around to discusssing your request today, because half of the core-dev team aren't in the meeting. Hopefully next week!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cdeil\" class=\"mention\">@cdeil</span> Curiously, I independently developed that game of life example for a tutorial I gave on Numpy (<a href=\"https://nbviewer.jupyter.org/github/jpivarski/2019-04-08-picscie-numpy/blob/master/01-why-python.ipynb#APL-pioneered-conciseness;-discovered-the-mistake-of-being-too-concise\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Game of Life in APL and Numpy</a>). I used the same <code>roll</code> trick (without the Python for loops), suggesting that there really is (nearly) just one way to do it. On the next day of the same tutorial, I did a Mandelbrot example (<a href=\"https://nbviewer.jupyter.org/github/jpivarski/2019-04-08-picscie-numpy/blob/master/07-coding-fast-and-fast-code.ipynb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Coding fast and fast code</a>) as an example of something to optimize. Additionally, that optimization story ended up having a very favorable message for Numba. Numba was the easiest way to make the Mandelbrot calculation fastest (<a href=\"https://mybinder.org/v2/gh/jpivarski/2019-04-08-picscie-numpy/1.1?urlpath=lab\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">run on Binder</a>).",
  "id": "5cd1a90fe416b845194798b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "cdeil",
    "userId": "53638060048862e761fa0383",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-05-07T15:49:35.304Z",
  "text": "@cdeil Curiously, I independently developed that game of life example for a tutorial I gave on Numpy ([Game of Life in APL and Numpy](https://nbviewer.jupyter.org/github/jpivarski/2019-04-08-picscie-numpy/blob/master/01-why-python.ipynb#APL-pioneered-conciseness;-discovered-the-mistake-of-being-too-concise)). I used the same `roll` trick (without the Python for loops), suggesting that there really is (nearly) just one way to do it. On the next day of the same tutorial, I did a Mandelbrot example ([Coding fast and fast code](https://nbviewer.jupyter.org/github/jpivarski/2019-04-08-picscie-numpy/blob/master/07-coding-fast-and-fast-code.ipynb)) as an example of something to optimize. Additionally, that optimization story ended up having a very favorable message for Numba. Numba was the easiest way to make the Mandelbrot calculation fastest ([run on Binder](https://mybinder.org/v2/gh/jpivarski/2019-04-08-picscie-numpy/1.1?urlpath=lab)).",
  "unread": false,
  "urls": [
   {
    "url": "https://nbviewer.jupyter.org/github/jpivarski/2019-04-08-picscie-numpy/blob/master/01-why-python.ipynb#APL-pioneered-conciseness;-discovered-the-mistake-of-being-too-concise"
   },
   {
    "url": "https://nbviewer.jupyter.org/github/jpivarski/2019-04-08-picscie-numpy/blob/master/07-coding-fast-and-fast-code.ipynb"
   },
   {
    "url": "https://mybinder.org/v2/gh/jpivarski/2019-04-08-picscie-numpy/1.1?urlpath=lab"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/cdeil",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/852409?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/852409?v=4&s=60",
   "displayName": "Christoph Deil",
   "gv": "4",
   "id": "53638060048862e761fa0383",
   "url": "/cdeil",
   "username": "cdeil",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jpivarski\" class=\"mention\">@jpivarski</span> - Thanks for the links! I&#39;ll go with the Mandelbrot example, and possibly in addition Game of Life for my talk.",
  "id": "5cd276dd8fcdb05d479a961e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jpivarski",
    "userId": "5a4e9793d73408ce4f862a26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-05-08T06:27:41.837Z",
  "text": "@jpivarski - Thanks for the links! I'll go with the Mandelbrot example, and possibly in addition Game of Life for my talk.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jpivarski\" class=\"mention\">@jpivarski</span> we did discuss your request yesterday after all, it seems like we are tending to keeping the new API and will probably propose a <code>lowlevel.extending</code> API.",
  "id": "5cd2870b0f381d0a767bc295",
  "issues": [],
  "mentions": [
   {
    "screenName": "jpivarski",
    "userId": "5a4e9793d73408ce4f862a26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-05-08T07:36:43.202Z",
  "text": "@jpivarski we did discuss your request yesterday after all, it seems like we are tending to keeping the new API and will probably propose a `lowlevel.extending` API.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> If I&#39;ll need to use the new form of the decorator (and possibly from new <code>lowlevel.extending</code> functions), then I&#39;ll just need to pin the minimum required Numba version at the next one that comes out. There&#39;s about a dozen people (that I know of) using the Numbafied awkward-array, so I can give them a heads-up.",
  "id": "5cd460a26fd7c11cd88c8599",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-05-09T17:17:22.096Z",
  "text": "@esc If I'll need to use the new form of the decorator (and possibly from new `lowlevel.extending` functions), then I'll just need to pin the minimum required Numba version at the next one that comes out. There's about a dozen people (that I know of) using the Numbafied awkward-array, so I can give them a heads-up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hi, is it possible to measure the runtime of a single funcion call? I\u2019d like to know how long <code>@PyArg_UnpackTuple</code> takes to execute",
  "id": "5cde378b75d9a575a6f5a7cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-17T04:24:43.611Z",
  "text": "Hi, is it possible to measure the runtime of a single funcion call? I\u2019d like to know how long `@PyArg_UnpackTuple` takes to execute",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> that&#39;s a CPython internal. One way would be to stage a call to it in a loop from  some compiled C code and time that.",
  "id": "5cde835bd22ba766a2aff439",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-17T09:48:11.752Z",
  "text": "@guilhermeleobas that's a CPython internal. One way would be to stage a call to it in a loop from  some compiled C code and time that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-24T13:22:32.134Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shssf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19515906?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19515906?v=4&s=60",
   "displayName": "Sergey Shalnov",
   "gv": "4",
   "id": "5cd17906d73408ce4fbf9c8e",
   "url": "/shssf",
   "username": "shssf",
   "v": 5
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> Could you please help me a bit with PR <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3937\" class=\"issue\">#3937</a> to follow recommendation in <a href=\"https://github.com/numba/numba/pull/3937#pullrequestreview-230621874\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/3937#pullrequestreview-230621874</a><br>In following code I&#39;m confused where types and where values.<br>in file &quot;unicode.py&quot; I implemented:</p><pre><code><span class=\"decorator\">@intrinsic</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_str2int_unicode</span><span class=\"params\">(typingctx, stringty, basety)</span>:</span>\n    <span class=\"string\">\"\"\"Wrap numba_str2int_unicode\n\n    Returns number from converted string.\n    \"\"\"</span>\n    resty = types.int64\n    sig = resty(stringty, basety)\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">codegen</span><span class=\"params\">(context, builder, sig, args)</span>:</span>\n        [string, base] = args\n        fnty = ir.FunctionType(ir.IntType(<span class=\"number\">64</span>), [ir.IntType(<span class=\"number\">8</span>).as_pointer(), ir.IntType(<span class=\"number\">32</span>)])\n        print(<span class=\"string\">\"_str2int_unicode fnty:\"</span>, fnty._to_string())\n        print(<span class=\"string\">\"_str2int_unicode string:\"</span>, string)\n        print(<span class=\"string\">\"_str2int_unicode base:\"</span>, base)\n        print(<span class=\"string\">\"_str2int_unicode stringty:\"</span>, stringty)\n        print(<span class=\"string\">\"_str2int_unicode basety:\"</span>, basety)\n        fn = builder.module.get_or_insert_function(fnty, name=<span class=\"string\">'numba_str2int_unicode'</span>)\n        n = builder.call(fn, [string, cgutils.int32_t(<span class=\"number\">32</span>)])\n        <span class=\"keyword\">return</span> n\n\n    <span class=\"keyword\">return</span> sig, codegen\n\n<span class=\"decorator\">@overload(int)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">int_overload</span><span class=\"params\">(string, base)</span>:</span>\n    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isinstance(string, types.UnicodeType):\n        <span class=\"keyword\">return</span>\n\n    stringty, basety = string, base\n\n    print(<span class=\"string\">\"int_overload:\"</span>, stringty, basety, string, base)\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">impl</span><span class=\"params\">(string, base)</span>:</span>\n        <span class=\"keyword\">return</span> _str2int_unicode(stringty, basety)\n\n    <span class=\"keyword\">return</span> impl</code></pre><p>But if call test &quot; python -m numba.runtests numba.tests.test_builtins.TestBuiltins.test_int_npm&quot; the output:</p><pre><code>int_overload: unicode_type int32 unicode_type int32\n_str2int_unicode fnty: i64 (i8*, i32)\n_str2int_unicode <span class=\"built_in\">string</span>: %<span class=\"string\">\".38\"</span> = load i8*, i8** %<span class=\"string\">\"$0.2\"</span>\n_str2int_unicode base: %<span class=\"string\">\".39\"</span> = load i8*, i8** %<span class=\"string\">\"$0.3\"</span>\n_str2int_unicode stringty: typeref[unicode_type]\n_str2int_unicode basety: <span class=\"keyword\">class</span>(int32)\n<span class=\"function\">helperlib C calls <span class=\"title\">numba_str2int_unicode</span><span class=\"params\">(<span class=\"number\">0x0</span>, <span class=\"number\">0</span>, <span class=\"number\">32</span>)</span>\nF\n</span>======================================================================\nFAIL: test_int_npm (numba.tests.test_builtins.TestBuiltins)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File <span class=\"string\">\"/opt/work/Numba/numba_shssf/numba/numba/tests/test_builtins.py\"</span>, line <span class=\"number\">560</span>, in test_int_npm\n    self.test_int(flags=no_pyobj_flags)\n  File <span class=\"string\">\"/opt/work/Numba/numba_shssf/numba/numba/tests/test_builtins.py\"</span>, line <span class=\"number\">556</span>, in test_int\n    self.assertPreciseEqual(cfunc(x, y), pyfunc(x, y))\n  File <span class=\"string\">\"/opt/work/Numba/numba_shssf/numba/numba/tests/support.py\"</span>, line <span class=\"number\">265</span>, in assertPreciseEqual\n    self.fail(<span class=\"string\">\"when comparing %s and %s: %s\"</span> % (first, second, failure_msg))\nAssertionError: when comparing <span class=\"number\">0</span> and -<span class=\"number\">1</span>: <span class=\"number\">0</span> != -<span class=\"number\">1</span>\n\n----------------------------------------------------------------------\nRan <span class=\"number\">1</span> test in <span class=\"number\">0.096</span><span class=\"function\">s\n\n<span class=\"title\">FAILED</span> <span class=\"params\">(failures=<span class=\"number\">1</span>)</span></span></code></pre><p>it looks like real values are not passed to the function in C.</p>",
  "id": "5ce7f001ef853135c81643a3",
  "issues": [
   {
    "number": "3937"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-05-24T13:22:09.218Z",
  "text": "@stuartarchibald Could you please help me a bit with PR #3937 to follow recommendation in https://github.com/numba/numba/pull/3937#pullrequestreview-230621874\nIn following code I'm confused where types and where values.\nin file \"unicode.py\" I implemented:\n```\n@intrinsic\ndef _str2int_unicode(typingctx, stringty, basety):\n    \"\"\"Wrap numba_str2int_unicode\n\n    Returns number from converted string.\n    \"\"\"\n    resty = types.int64\n    sig = resty(stringty, basety)\n\n    def codegen(context, builder, sig, args):\n        [string, base] = args\n        fnty = ir.FunctionType(ir.IntType(64), [ir.IntType(8).as_pointer(), ir.IntType(32)])\n        print(\"_str2int_unicode fnty:\", fnty._to_string())\n        print(\"_str2int_unicode string:\", string)\n        print(\"_str2int_unicode base:\", base)\n        print(\"_str2int_unicode stringty:\", stringty)\n        print(\"_str2int_unicode basety:\", basety)\n        fn = builder.module.get_or_insert_function(fnty, name='numba_str2int_unicode')\n        n = builder.call(fn, [string, cgutils.int32_t(32)])\n        return n\n\n    return sig, codegen\n\n@overload(int)\ndef int_overload(string, base):\n    if not isinstance(string, types.UnicodeType):\n        return\n\n    stringty, basety = string, base\n\n    print(\"int_overload:\", stringty, basety, string, base)\n\n    def impl(string, base):\n        return _str2int_unicode(stringty, basety)\n\n    return impl\n```\n\nBut if call test \" python -m numba.runtests numba.tests.test_builtins.TestBuiltins.test_int_npm\" the output:\n```\nint_overload: unicode_type int32 unicode_type int32\n_str2int_unicode fnty: i64 (i8*, i32)\n_str2int_unicode string: %\".38\" = load i8*, i8** %\"$0.2\"\n_str2int_unicode base: %\".39\" = load i8*, i8** %\"$0.3\"\n_str2int_unicode stringty: typeref[unicode_type]\n_str2int_unicode basety: class(int32)\nhelperlib C calls numba_str2int_unicode(0x0, 0, 32)\nF\n======================================================================\nFAIL: test_int_npm (numba.tests.test_builtins.TestBuiltins)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/work/Numba/numba_shssf/numba/numba/tests/test_builtins.py\", line 560, in test_int_npm\n    self.test_int(flags=no_pyobj_flags)\n  File \"/opt/work/Numba/numba_shssf/numba/numba/tests/test_builtins.py\", line 556, in test_int\n    self.assertPreciseEqual(cfunc(x, y), pyfunc(x, y))\n  File \"/opt/work/Numba/numba_shssf/numba/numba/tests/support.py\", line 265, in assertPreciseEqual\n    self.fail(\"when comparing %s and %s: %s\" % (first, second, failure_msg))\nAssertionError: when comparing 0 and -1: 0 != -1\n\n----------------------------------------------------------------------\nRan 1 test in 0.096s\n\nFAILED (failures=1)\n```\nit looks like real values are not passed to the function in C.\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/3937#pullrequestreview-230621874"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shssf\" class=\"mention\">@shssf</span> hey, I can give you a hand... any chance you can please push up what you&#39;ve got,  even if it&#39;s not working (feel free to create a new branch and put it there if you want)? Makes it easier to work out what&#39;s going on if I can see all the changes, thanks :)",
  "id": "5ce7f1486366992a9413a838",
  "issues": [],
  "mentions": [
   {
    "screenName": "shssf",
    "userId": "5cd17906d73408ce4fbf9c8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-05-24T13:27:36.551Z",
  "text": "@shssf hey, I can give you a hand... any chance you can please push up what you've got,  even if it's not working (feel free to create a new branch and put it there if you want)? Makes it easier to work out what's going on if I can see all the changes, thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shssf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19515906?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19515906?v=4&s=60",
   "displayName": "Sergey Shalnov",
   "gv": "4",
   "id": "5cd17906d73408ce4fbf9c8e",
   "url": "/shssf",
   "username": "shssf",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> ok, I will put my changes as an extra commit to the PR",
  "id": "5ce7f2e163dea422b4d9b52f",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-05-24T13:34:25.772Z",
  "text": "@stuartarchibald ok, I will put my changes as an extra commit to the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shssf\" class=\"mention\">@shssf</span> great, thanks",
  "id": "5ce804a08f019114aeac2d26",
  "issues": [],
  "mentions": [
   {
    "screenName": "shssf",
    "userId": "5cd17906d73408ce4fbf9c8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-05-24T14:50:08.037Z",
  "text": "@shssf great, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it&#39;ll be a lot easier to discuss if we can both see the same code :)",
  "id": "5ce804ac8f019114aeac2e06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-05-24T14:50:20.437Z",
  "text": "it'll be a lot easier to discuss if we can both see the same code :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shssf\" class=\"mention\">@shssf</span> I&#39;ve taken a look at the code, thanks for pushing it up",
  "id": "5ce823f575d9a575a63a15fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "shssf",
    "userId": "5cd17906d73408ce4fbf9c8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-24T17:03:49.380Z",
  "text": "@shssf I've taken a look at the code, thanks for pushing it up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think there&#39;s going to be a couple of main themes in the problems 1) trying to overload <code>int</code>, not quite sure how that&#39;s going to work out, but more fundamentally, the code assumes the &quot;string&quot; is a <code>char *</code> when in fact it is a) unicode and b) a large struct <a href=\"https://github.com/numba/numba/blob/8e145fe924c48fc778000b4d398104442a451471/numba/unicode.py#L40-L52\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/8e145fe924c48fc778000b4d398104442a451471/numba/unicode.py#L40-L52</a>",
  "id": "5ce824768f019114aead3651",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-24T17:05:58.530Z",
  "text": "I think there's going to be a couple of main themes in the problems 1) trying to overload `int`, not quite sure how that's going to work out, but more fundamentally, the code assumes the \"string\" is a `char *` when in fact it is a) unicode and b) a large struct https://github.com/numba/numba/blob/8e145fe924c48fc778000b4d398104442a451471/numba/unicode.py#L40-L52",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/8e145fe924c48fc778000b4d398104442a451471/numba/unicode.py#L40-L52"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "For now, I would not worry about the int overload, just define a pointless function like <code>def myint(string, base): pass</code> and <code>@overload</code> that instead, we can work out how to deal with the typing of <code>int</code> later.",
  "id": "5ce8260575d9a575a63a24d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-24T17:12:37.286Z",
  "text": "For now, I would not worry about the int overload, just define a pointless function like `def myint(string, base): pass` and `@overload` that instead, we can work out how to deal with the typing of `int` later.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "in general for both <code>@overload</code> and  <code>@instrinsic</code> the first scope in the function is the typing scope, the second, inner scope, is the code gen scope",
  "id": "5ce826389d64e537bc04c4a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-24T17:13:28.719Z",
  "text": "in general for both `@overload` and  `@instrinsic` the first scope in the function is the typing scope, the second, inner scope, is the code gen scope",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "e.g.",
  "id": "5ce8263b9d64e537bc04c4a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-24T17:13:31.254Z",
  "text": "e.g.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code><span class=\"decorator\">@overload</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(a, b)</span>:</span>\n  <span class=\"comment\"># typing scope, if you inspect a or b, you'll see their type</span>\n  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">impl</span><span class=\"params\">(a, b)</span>:</span>\n    <span class=\"comment\"># code gen scope, this is where a and b's values/data are used</span>\n  <span class=\"keyword\">return</span> impl</code></pre>",
  "id": "5ce8267f8f019114aead4584",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-24T17:14:39.109Z",
  "text": "```\n@overload\ndef foo(a, b):\n  # typing scope, if you inspect a or b, you'll see their type\n  def impl(a, b):\n    # code gen scope, this is where a and b's values/data are used\n  return impl\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the <code>@intrinsic</code> is the same in terms of scope, apart from the typing scope signature has the typing context as the first arg, and the codegen scope function always has args <code>(codegen_context, builder, signature, llvm_ir_args)</code>",
  "id": "5ce826dd75d9a575a63a2ad2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-24T17:16:13.297Z",
  "text": "the `@intrinsic` is the same in terms of scope, apart from the typing scope signature has the typing context as the first arg, and the codegen scope function always has args `(codegen_context, builder, signature, llvm_ir_args)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/rdesai16",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=60",
   "displayName": "rdesai16",
   "gv": "4",
   "id": "5ce7f667d73408ce4fc13b3e",
   "url": "/rdesai16",
   "username": "rdesai16",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> Hi! I am stuck at one error in my string method implementation. Here&#39;s the PR for it:<br><a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4049\" href=\"https://github.com/numba/numba/pull/4049\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4049</a><br>it&#39;s Iower() method for string. haven&#39;t pushed the changes yet but I made the changes to use helperlib instead of creating a top module and the issue I am facing is that when I try to test the changes, it&#39;s not able to find the function. Here&#39;s a screenshot:</p><pre><code><span class=\"decorator\">@intrinsic</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_strlower</span><span class=\"params\">(typingctx, src)</span>:</span>\n    resty = types.int64\n    sig = resty(src)\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">codegen</span><span class=\"params\">(context, builder, sig, args)</span>:</span>\n        [src] = args\n        fnty = ir.FunctionType(types.intc, [types.UnicodeType])\n        fn = builder.module.get_or_insert_function(fnty, name=<span class=\"string\">'numba_str_lower'</span>)\n        n = builder.call(fn, src)\n        <span class=\"keyword\">return</span> n\n    <span class=\"keyword\">return</span> sig, codegen\n\n<span class=\"decorator\">@overload_method(types.UnicodeType, 'lower')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">unicode_lower</span><span class=\"params\">(a)</span>:</span>\n    <span class=\"keyword\">if</span> isinstance(a, types.UnicodeType):\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lower_impl</span><span class=\"params\">(a)</span>:</span>\n            _strlower(a)\n            <span class=\"keyword\">return</span> a\n        <span class=\"keyword\">return</span> lower_impl</code></pre><p>When I run the tests it shows me following error:</p><pre><code><span class=\"attribute\">numba.errors.LoweringError</span>: <span class=\"string\">Failed in nopython mode pipeline (step: nopython mode backend)</span>\n\n<span class=\"bash\">\nFile <span class=\"string\">\"numba/unicode.py\"</span>, line <span class=\"number\">621</span>:\n        def lower_impl(a):\n            _strlower(a)\n            ^\n\n[<span class=\"number\">1</span>] During: lowering <span class=\"string\">\"<span class=\"variable\">$0</span>.3 = call <span class=\"variable\">$0</span>.1(a, func=<span class=\"variable\">$0</span>.1, args=[Var(a, /localdisk/work/rujaldes/my_work/numba/numba/unicode.py (621))], kws=(), vararg=None)\"</span> at /localdisk/work/rujaldes/my_work/numba/numba/unicode.py (<span class=\"number\">621</span>)\n[<span class=\"number\">2</span>] During: resolving callee <span class=\"built_in\">type</span>: BoundFunction((&lt;class <span class=\"string\">'numba.types.misc.UnicodeType'</span>&gt;, <span class=\"string\">'lower'</span>) <span class=\"keyword\">for</span> unicode_<span class=\"built_in\">type</span>)\n[<span class=\"number\">3</span>] During: typing of call at <span class=\"built_in\">test</span>_lower.py (<span class=\"number\">6</span>)\n\n--%&lt;----------------------------------------------------------------------------\n\n\nFile <span class=\"string\">\"test_lower.py\"</span>, line <span class=\"number\">6</span>:\ndef fun(s):\n    a = s.lower()</span></code></pre><p>This shows that it is not able to detect the function _strlower which is defined right above it. </p>",
  "id": "5ce8d12e7c363c75a73c4f0e",
  "issues": [
   {
    "number": "4049",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-05-25T05:22:54.162Z",
  "text": "@stuartarchibald Hi! I am stuck at one error in my string method implementation. Here's the PR for it:\nhttps://github.com/numba/numba/pull/4049\nit's Iower() method for string. haven't pushed the changes yet but I made the changes to use helperlib instead of creating a top module and the issue I am facing is that when I try to test the changes, it's not able to find the function. Here's a screenshot:\n```\n@intrinsic\ndef _strlower(typingctx, src):\n    resty = types.int64\n    sig = resty(src)\n    def codegen(context, builder, sig, args):\n        [src] = args\n        fnty = ir.FunctionType(types.intc, [types.UnicodeType])\n        fn = builder.module.get_or_insert_function(fnty, name='numba_str_lower')\n        n = builder.call(fn, src)\n        return n\n    return sig, codegen\n\n@overload_method(types.UnicodeType, 'lower')\ndef unicode_lower(a):\n    if isinstance(a, types.UnicodeType):\n        def lower_impl(a):\n            _strlower(a)\n            return a\n        return lower_impl\n```\nWhen I run the tests it shows me following error:\n```\nnumba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend)\n\n\nFile \"numba/unicode.py\", line 621:\n        def lower_impl(a):\n            _strlower(a)\n            ^\n\n[1] During: lowering \"$0.3 = call $0.1(a, func=$0.1, args=[Var(a, /localdisk/work/rujaldes/my_work/numba/numba/unicode.py (621))], kws=(), vararg=None)\" at /localdisk/work/rujaldes/my_work/numba/numba/unicode.py (621)\n[2] During: resolving callee type: BoundFunction((<class 'numba.types.misc.UnicodeType'>, 'lower') for unicode_type)\n[3] During: typing of call at test_lower.py (6)\n\n--%<----------------------------------------------------------------------------\n\n\nFile \"test_lower.py\", line 6:\ndef fun(s):\n    a = s.lower()\n\n```\nThis shows that it is not able to detect the function _strlower which is defined right above it. \n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hi, I was looking into <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4121\" class=\"issue\">#4121</a> to see if I could help, but looking into the implementation of <code>np.mean</code>I was confused by this comment in the code &quot;# Can&#39;t use the naive <code>arr.sum() / arr.size</code>, as it would return a wrong result on integer sum overflow.&quot;. Could anyone explain this to me? I would have expected <code>arr.sum() / arr.size</code> to always work. ",
  "id": "5cecffc0879f4478c7f603b4",
  "issues": [
   {
    "number": "4121"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-05-28T09:30:40.954Z",
  "text": "hi, I was looking into #4121 to see if I could help, but looking into the implementation of `np.mean`I was confused by this comment in the code \"# Can't use the naive `arr.sum() / arr.size`, as it would return a wrong result on integer sum overflow.\". Could anyone explain this to me? I would have expected `arr.sum() / arr.size` to always work. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> <code>arr.sum()</code> will accumulate in the <code>dtype</code> of <code>arr</code>(e.g. <code>arr</code> is <code>int64</code>, accumulator is <code>int64</code>), hence the explicit loop accumulating in <code>sig.return_type</code> type for <code>ndarray.mean()</code> as that leads to the use of a floating point accumulator which doesn&#39;t overflow.",
  "id": "5ced080c9d64e537bc25213a",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-05-28T10:06:04.123Z",
  "text": "@luk-f-a `arr.sum()` will accumulate in the `dtype` of `arr`(e.g. `arr` is `int64`, accumulator is `int64`), hence the explicit loop accumulating in `sig.return_type` type for `ndarray.mean()` as that leads to the use of a floating point accumulator which doesn't overflow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rdesai16\" class=\"mention\">@rdesai16</span> Hi! Without only a small amount of the code it&#39;s really hard to tell what&#39;s going on. I recommend pushing up what you have (on a temporary branch if you like, or the current PR, I don&#39;t mind either way!) and then I can take a look. Was that all the traceback you got? Typically if lowering fails you get a bunch of nested exceptions. Thanks.",
  "id": "5ced09aa83ae782aeee46311",
  "issues": [],
  "mentions": [
   {
    "screenName": "rdesai16",
    "userId": "5ce7f667d73408ce4fc13b3e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-05-28T10:12:58.460Z",
  "text": "@rdesai16 Hi! Without only a small amount of the code it's really hard to tell what's going on. I recommend pushing up what you have (on a temporary branch if you like, or the current PR, I don't mind either way!) and then I can take a look. Was that all the traceback you got? Typically if lowering fails you get a bunch of nested exceptions. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , so <code>arr.sum()</code>on <code>int32</code> will overflow rather than return <code>int64</code>?",
  "id": "5ced0b839d64e537bc2538f4",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-05-28T10:20:51.496Z",
  "text": "@stuartarchibald , so `arr.sum()`on `int32` will overflow rather than return `int64`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> yes, Numba has to statically type everything, overflow is a runtime feature, Numba cannot dynamically promote a return type based on a value overflowing.",
  "id": "5ced0c31ef853135c838c090",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-05-28T10:23:45.891Z",
  "text": "@luk-f-a yes, Numba has to statically type everything, overflow is a runtime feature, Numba cannot dynamically promote a return type based on a value overflowing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "A canonical example of this problem is <code>np.linalg.eig*</code>, it&#39;s not possible to tell at compile time if the result is in the real or complex domain...",
  "id": "5ced0cac879f4478c7f65dc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-05-28T10:25:48.958Z",
  "text": "A canonical example of this problem is `np.linalg.eig*`, it's not possible to tell at compile time if the result is in the real or complex domain...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<p>ok, got it, but then, looking back at the overload of <code>np.mean</code></p><pre><code>        c = zero\n        <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> np.<span class=\"function\"><span class=\"title\">nditer</span><span class=\"params\">(arr)</span></span>:\n            c += v.<span class=\"function\"><span class=\"title\">item</span><span class=\"params\">()</span></span></code></pre><p>each <code>v.item</code> is being casted to a floating point accumulator. What if first we cast the entire input array to float and then sum? That would avoid the overflow, wouldn&#39;t it? There would be a memory penalty for sure, unfortunately. But it would allow to easily implement <code>np.mean</code> with an axis parameter</p>",
  "id": "5ced0e0583ae782aeee48453",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T10:31:33.035Z",
  "text": "ok, got it, but then, looking back at the overload of `np.mean`\n ```\n        c = zero\n        for v in np.nditer(arr):\n            c += v.item()```\neach `v.item` is being casted to a floating point accumulator. What if first we cast the entire input array to float and then sum? That would avoid the overflow, wouldn't it? There would be a memory penalty for sure, unfortunately. But it would allow to easily implement ` np.mean` with an axis parameter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that could work, however, this sounds like something where some minor code changes would make the sum-with-axis impl more generic and accept an accumulator type, then the existing sum-with-axis can call it with <code>arr.dtype</code> and the reduction functions can call it with <code>sig.return_type</code>.",
  "id": "5ced11016366992a94365eb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T10:44:17.398Z",
  "text": "that could work, however, this sounds like something where some minor code changes would make the sum-with-axis impl more generic and accept an accumulator type, then the existing sum-with-axis can call it with `arr.dtype` and the reduction functions can call it with `sig.return_type`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "yes, I only thought of that after writing the message. It would not make sense to reproduce all the machinery in <code>sum</code> for <code>mean</code>, it would be nice to re-use it (potentially also for variance and std deviation).",
  "id": "5ced145dad024978c6418bc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T10:58:37.719Z",
  "text": "yes, I only thought of that after writing the message. It would not make sense to reproduce all the machinery in `sum` for `mean`, it would be nice to re-use it (potentially also for variance and std deviation).\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<p>this is where <code>sum</code> gets the signature, </p><pre><code><span class=\"variable\">@lower_builtin</span>(np.sum, types.Array, types.intp)\n<span class=\"variable\">@lower_builtin</span>(np.sum, types.Array, types.IntegerLiteral)\n<span class=\"variable\">@lower_builtin</span>(<span class=\"string\">\"array.sum\"</span>, types.Array, types.intp)\n<span class=\"variable\">@lower_builtin</span>(<span class=\"string\">\"array.sum\"</span>, types.Array, types.IntegerLiteral)\ndef <span class=\"function\">array_sum_axis</span>(context, builder, sig, args):\n    retty = sig.return_type</code></pre><p>would it be possible to call array_sum_axis from <code>mean</code>, in such a way that sig is replaced by the <code>sig</code> of mean? Something like</p><pre><code><span class=\"decorator\">@lower_builtin(np.mean, types.Array)</span>\n<span class=\"decorator\">@lower_builtin(\"array.mean\", types.Array)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_mean</span><span class=\"params\">(context, builder, sig, args)</span>:</span>\n    sum_fc = array_sum_axis(context, builder, sig, args)\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean_impl</span><span class=\"params\">(arr, axis)</span>:</span>\n        <span class=\"keyword\">return</span> sum_fc(arr, axis) / arr.shape[axis]</code></pre>",
  "id": "5ced1645ad024978c64199fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T11:06:45.261Z",
  "text": "this is where `sum` gets the signature, \n```\n@lower_builtin(np.sum, types.Array, types.intp)\n@lower_builtin(np.sum, types.Array, types.IntegerLiteral)\n@lower_builtin(\"array.sum\", types.Array, types.intp)\n@lower_builtin(\"array.sum\", types.Array, types.IntegerLiteral)\ndef array_sum_axis(context, builder, sig, args):\n    retty = sig.return_type\n```\nwould it be possible to call array_sum_axis from `mean`, in such a way that sig is replaced by the `sig` of mean? Something like\n```\n@lower_builtin(np.mean, types.Array)\n@lower_builtin(\"array.mean\", types.Array)\ndef array_mean(context, builder, sig, args):\n    sum_fc = array_sum_axis(context, builder, sig, args)\n    def mean_impl(arr, axis):\n        return sum_fc(arr, axis) / arr.shape[axis]\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "probably not, I expect this will require careful code generation/closing over various operations",
  "id": "5ced16c79404bf2aedc2b01c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T11:08:55.022Z",
  "text": "probably not, I expect this will require careful code generation/closing over various operations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "well, I guess that if it had been that easy, it would already be done that way",
  "id": "5ced17ebd22ba766a2132c91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T11:13:47.878Z",
  "text": "well, I guess that if it had been that easy, it would already be done that way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "in any case, adding <code>axis</code> to some of the currently implemented Numpy functions might be more useful than adding exotic new functions (I&#39;m looking at you <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4074\" class=\"issue\">#4074</a>). Although I might be biased since I use statistical functions a lot, so I&#39;ve used <code>np.mean(.., axis=)</code> a million times. ",
  "id": "5ced187d9d64e537bc2599ce",
  "issues": [
   {
    "number": "4074"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T11:16:13.165Z",
  "text": "in any case, adding `axis` to some of the currently implemented Numpy functions might be more useful than adding exotic new functions (I'm looking at you #4074). Although I might be biased since I use statistical functions a lot, so I've used `np.mean(.., axis=)` a million times. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that, if you are prepared to have a go, adding axis to a function that is a sum based reduction would be a good thing to do, it&#39;ll also expose what needs to be done to make it easy to use in all the other functions that are similar.",
  "id": "5ced1c128f019114aece4beb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T11:31:30.345Z",
  "text": "I think that, if you are prepared to have a go, adding axis to a function that is a sum based reduction would be a good thing to do, it'll also expose what needs to be done to make it easy to use in all the other functions that are similar.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-28T11:39:20.019Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;ll be happy to work on  <code>mean(..., axis)</code>. Do you think I can just extend <code>np.sum</code> to accept <code>dtype</code> like Numpy does? Any gotchas to be aware of when working with <code>dtype</code>-type variables?",
  "id": "5ced1ddb9d64e537bc25c1db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T11:39:07.655Z",
  "text": "I'll be happy to work on  `mean(..., axis)`. Do you think I can just extend `np.sum` to accept `dtype` like Numpy does? Any gotchas to be aware of when working with `dtype`-type variables?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "great :) and yes, probably. You may want to become familiar with <code>numba.numpy_support</code>",
  "id": "5ced214cef853135c839619e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T11:53:48.363Z",
  "text": "great :) and yes, probably. You may want to become familiar with `numba.numpy_support`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "sounds fun :-) I&#39;ll get started after <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4077\" class=\"issue\">#4077</a> is done and merged",
  "id": "5ced32be7c363c75a759e827",
  "issues": [
   {
    "number": "4077"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-05-28T13:08:14.782Z",
  "text": "sounds fun :-) I'll get started after #4077 is done and merged",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> any chance you can fix the merge conflicts in <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4077\" class=\"issue\">#4077</a> please?",
  "id": "5ced342383ae782aeee59f29",
  "issues": [
   {
    "number": "4077"
   }
  ],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T13:14:11.885Z",
  "text": "@luk-f-a any chance you can fix the merge conflicts in #4077 please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "oh, didn&#39;t notice there were any. I&#39;ll look into that.",
  "id": "5ced3a896366992a9437956f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T13:41:29.067Z",
  "text": "oh, didn't notice there were any. I'll look into that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I expect it&#39;s a change in master that just needs merging in.",
  "id": "5ced3c8fb313d72314428075",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T13:50:07.849Z",
  "text": "I expect it's a change in master that just needs merging in.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "yes, just overlap between select and  windowing functionality from another PR",
  "id": "5ced458def853135c83a85c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T14:28:29.825Z",
  "text": "yes, just overlap between select and  windowing functionality from another PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "there were many fails but all in the &quot;before install&quot; stage, is there a way to re-run those tests?",
  "id": "5ced8b48cea8295279b49c5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T19:26:00.267Z",
  "text": "there were many fails but all in the \"before install\" stage, is there a way to re-run those tests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span>: I have just kicked them to rerun",
  "id": "5ced8e2bfaac643934010852",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T19:38:19.539Z",
  "text": "@luk-f-a: I have just kicked them to rerun",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks",
  "id": "5ced8ff6f3a60a79a416daea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T19:45:58.396Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/rdesai16",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=60",
   "displayName": "rdesai16",
   "gv": "4",
   "id": "5ce7f667d73408ce4fc13b3e",
   "url": "/rdesai16",
   "username": "rdesai16",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I have pushed my changes in a new commit under same PR. Here&#39;s the link for easy reference:<br><a href=\"https://github.com/numba/numba/pull/4049/commits/8d6af0abf64f8d9a3aa1991235333e81f9ac0dcc\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/4049/commits/8d6af0abf64f8d9a3aa1991235333e81f9ac0dcc</a>",
  "id": "5cedb1775de053468bd5736d",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-28T22:08:55.603Z",
  "text": "@stuartarchibald I have pushed my changes in a new commit under same PR. Here's the link for easy reference:\nhttps://github.com/numba/numba/pull/4049/commits/8d6af0abf64f8d9a3aa1991235333e81f9ac0dcc\n\n",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4049/commits/8d6af0abf64f8d9a3aa1991235333e81f9ac0dcc"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-05-29T08:27:34.881Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rdesai16\" class=\"mention\">@rdesai16</span> great, thanks. I&#39;ve taken a look and fixed up the code here <a href=\"https://github.com/stuartarchibald/numba/commit/c33612005ee722f873a418938150dc05bd38fd73\" target=\"_blank\" data-link-type=\"commit\" data-provider=\"github\" data-commit-sha=\"c33612005ee722f873a418938150dc05bd38fd73\" data-commit-repo=\"stuartarchibald/numba\" class=\"commit\">stuartarchibald/numba@c336120</a>",
  "id": "5cee4228bf4cbd167cf5faa2",
  "issues": [],
  "mentions": [
   {
    "screenName": "rdesai16",
    "userId": "5ce7f667d73408ce4fc13b3e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-29T08:26:16.085Z",
  "text": "@rdesai16 great, thanks. I've taken a look and fixed up the code here https://github.com/stuartarchibald/numba/commit/c33612005ee722f873a418938150dc05bd38fd73",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "The code wasn&#39;t working due to a number of small issues:<br>1) No export of the C function in <code>_helpermod.c</code><br>2) The <code>builder.call</code> second arg needs to be iterable<br>3) The unicode type is represented as a struct, to get at the data that struct needs unpacking",
  "id": "5cee432dfaac643934058008",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-29T08:30:37.287Z",
  "text": "The code wasn't working due to a number of small issues:\n1) No export of the C function in `_helpermod.c`\n2) The `builder.call` second arg needs to be iterable\n3) The unicode type is represented as a struct, to get at the data that struct needs unpacking",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ll  put some more comments on the PR.",
  "id": "5cee4351702b7e5e76f3c786",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-29T08:31:13.796Z",
  "text": "I'll  put some more comments on the PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shssf\" class=\"mention\">@shssf</span> you may also like to look at the above patch as I&#39;ve heavily commented it and the PR for <code>int(str)</code> has/had similar problems.",
  "id": "5cee43797c1dab468c6640f4",
  "issues": [],
  "mentions": [
   {
    "screenName": "shssf",
    "userId": "5cd17906d73408ce4fbf9c8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-29T08:31:53.289Z",
  "text": "@shssf you may also like to look at the above patch as I've heavily commented it and the PR for `int(str)` has/had similar problems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "good morning! just wanted to mention that <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4077\" class=\"issue\">#4077</a> is passing all tests (finally) in case someone has time to review",
  "id": "5cef98a1f3a60a79a423ebc5",
  "issues": [
   {
    "number": "4077"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-30T08:47:29.936Z",
  "text": "good morning! just wanted to mention that #4077 is passing all tests (finally) in case someone has time to review",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/rdesai16",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=60",
   "displayName": "rdesai16",
   "gv": "4",
   "id": "5ce7f667d73408ce4fc13b3e",
   "url": "/rdesai16",
   "username": "rdesai16",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> Hello! I was working on some string method and I discovered that the find() method for string implemented in numba is not complete. In general, the syntax for find() is following:<br>str.find(substr [,start, end])<br>here start,end are optional arguments which basically are indexes in str and it indicate where to look for substr in str.<br>But the current implementation in unicode.py doesn&#39;t support these optional arguments. So if you try the following:</p><pre><code>str = <span class=\"string\">'abbaacd'</span>\nsubstr = <span class=\"string\">'aa'</span>\nx = str.<span class=\"function\"><span class=\"title\">find</span><span class=\"params\">( substr, <span class=\"number\">2</span>, <span class=\"number\">4</span>)</span></span>\n<span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(x)</span></span></code></pre><p>It won&#39;t work with current code and it will crash. So my question is that is this incompleteness intentional?</p>",
  "id": "5cf037dee41fe15e75e5de6b",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-30T20:06:54.589Z",
  "text": "@stuartarchibald Hello! I was working on some string method and I discovered that the find() method for string implemented in numba is not complete. In general, the syntax for find() is following: \nstr.find(substr [,start, end])\nhere start,end are optional arguments which basically are indexes in str and it indicate where to look for substr in str. \nBut the current implementation in unicode.py doesn't support these optional arguments. So if you try the following:\n```\nstr = 'abbaacd'\nsubstr = 'aa'\nx = str.find( substr, 2, 4)\nprint(x)\n```\nIt won't work with current code and it will crash. So my question is that is this incompleteness intentional?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rdesai16\" class=\"mention\">@rdesai16</span> Hi, I imagine there&#39;s two different problems here: 1) that methods off <code>str</code> are not supported yet, and 2) the unicode find method on a string instance doesn&#39;t accept the last two args yet",
  "id": "5cf046e6481ef4167ba31da7",
  "issues": [],
  "mentions": [
   {
    "screenName": "rdesai16",
    "userId": "5ce7f667d73408ce4fc13b3e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-30T21:11:02.186Z",
  "text": "@rdesai16 Hi, I imagine there's two different problems here: 1) that methods off `str` are not supported yet, and 2) the unicode find method on a string instance doesn't accept the last two args yet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "its fairly typical in numba to first create basic support for something and then extend it as time goes by",
  "id": "5cf047076f530d3b610d14a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-05-30T21:11:35.074Z",
  "text": "its fairly typical in numba to first create basic support for something and then extend it as time goes by",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hi everyone. Is it possible to dump the numba IR from the command line?",
  "id": "5cf9e4903dcdab40030296e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-06-07T04:14:08.440Z",
  "text": "Hi everyone. Is it possible to dump the numba IR from the command line?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> <a href=\"http://numba.pydata.org/numba-doc/latest/user/cli.html#debugging\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/latest/user/cli.html#debugging</a> &lt;-- does this help?",
  "id": "5cfa1e87b76eac527ab8f493",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-06-07T08:21:27.979Z",
  "text": "@guilhermeleobas http://numba.pydata.org/numba-doc/latest/user/cli.html#debugging <-- does this help?",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/latest/user/cli.html#debugging"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> also, this: <a href=\"http://numba.pydata.org/numba-doc/latest/reference/envvars.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/latest/reference/envvars.html</a>",
  "id": "5cfa1ec6702b7e5e76431eeb",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-06-07T08:22:30.310Z",
  "text": "@guilhermeleobas also, this: http://numba.pydata.org/numba-doc/latest/reference/envvars.html",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/latest/reference/envvars.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>, I will take a look into those links. Thanks!",
  "id": "5cfac11b65392c3b60d8b4dd",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-06-07T19:55:07.085Z",
  "text": "Hi @esc, I will take a look into those links. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>, I am trying to annotate te source code with the command <code>numba file.py \u2014anotate</code> but it is giving me an error saying that the version of llvmlite that I have (0.28.0) is lower than the expected one (0.29.0). But the problem is, the version I have installed is the 0.29.0. Do you know how I can fix this?",
  "id": "5cff06e6faac643934758f81",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-11T01:41:58.946Z",
  "text": "Hi @esc, I am trying to annotate te source code with the command `numba file.py \u2014anotate` but it is giving me an error saying that the version of llvmlite that I have (0.28.0) is lower than the expected one (0.29.0). But the problem is, the version I have installed is the 0.29.0. Do you know how I can fix this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<a href=\"https://files.gitter.im/numba/numba-dev/FB4J/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/numba/numba-dev/FB4J/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5cff06ea702b7e5e76648af6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-11T01:42:02.875Z",
  "text": "[![image.png](https://files.gitter.im/numba/numba-dev/FB4J/thumb/image.png)](https://files.gitter.im/numba/numba-dev/FB4J/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/numba/numba-dev/FB4J/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/numba/numba-dev/FB4J/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> that sounds like a bug",
  "id": "5cff611c82c2dc79a5893c50",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-11T08:06:52.445Z",
  "text": "@guilhermeleobas that sounds like a bug",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> can you paste the output of <code>numba -s</code>",
  "id": "5cff614665392c3b60f7abcf",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-11T08:07:34.645Z",
  "text": "@guilhermeleobas can you paste the output of `numba -s`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "also, <code>which -a numba</code> would be good, to check that you are using the correct <code>numba</code>.",
  "id": "5cff615ff3a60a79a48e6b77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-11T08:07:59.055Z",
  "text": "also, `which -a numba` would be good, to check that you are using the correct `numba`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> if the issue persists, please don&#39;t hesitate to open an issue on Github",
  "id": "5cff643384c08f541412c181",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-11T08:20:03.460Z",
  "text": "@guilhermeleobas if the issue persists, please don't hesitate to open an issue on Github",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "is there a generic way to iterate over the RHS operands of any IR instruction?",
  "id": "5d0ae4c7bb789747fb4540f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-20T01:43:35.654Z",
  "text": "is there a generic way to iterate over the RHS operands of any IR instruction?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "don&#39;t think so",
  "id": "5d0b55005bc3210bb762da77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-20T09:42:24.405Z",
  "text": "don't think so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "are you essentially looking to walk over the class members of something inheriting from <code>ir.AbstractRHS</code>? ",
  "id": "5d0b552341654c559ec5d7f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-20T09:42:59.060Z",
  "text": "are you essentially looking to walk over the class members of something inheriting from `ir.AbstractRHS`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Yes ",
  "id": "5d0c51d6d35d4162a86e8a9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-21T03:41:10.429Z",
  "text": "Yes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I see, short of walking the <code>__dict __</code>, there&#39;s no API at present, will raise it in the core dev meeting",
  "id": "5d0c8826d4535e477a71d863",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-21T07:32:54.930Z",
  "text": "I see, short of walking the `__dict __`, there's no API at present, will raise it in the core dev meeting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hi, a question for those git experts: I&#39;ve had a branch open for a few weeks now while I work on the PR. Should I merge or rebase from the latest master?",
  "id": "5d0e0fa24b0b7b477b3dc26f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-22T11:23:14.479Z",
  "text": "hi, a question for those git experts: I've had a branch open for a few weeks now while I work on the PR. Should I merge or rebase from the latest master?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> as usual, it depends: if the branch has already been reviewed in a pull-request, then you should use merge, since github isn&#39;t smart enough to pickup on the rebase and adapt the existing comments appropriately. If the branch has not been reviewed yet, you are free to do whatever you want, including rebase.",
  "id": "5d0f2b03bc834f76a4ca41af",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-23T07:32:19.976Z",
  "text": "@luk-f-a as usual, it depends: if the branch has already been reviewed in a pull-request, then you should use merge, since github isn't smart enough to pickup on the rebase and adapt the existing comments appropriately. If the branch has not been reviewed yet, you are free to do whatever you want, including rebase.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "If you want to be on the safe side, always use merge.",
  "id": "5d0f2b1041654c559ee65d16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-23T07:32:32.019Z",
  "text": "If you want to be on the safe side, always use merge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>!",
  "id": "5d0fa67bd4535e477a8be3f2",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-23T16:19:07.976Z",
  "text": "thanks @esc!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>, maybe inspiring on what LLVM does and have a <code>getOperand/setOperand/getNumOperands</code> on instructions. ",
  "id": "5d0fcd25e7267a62a92f2974",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-23T19:04:05.119Z",
  "text": "@stuartarchibald, maybe inspiring on what LLVM does and have a `getOperand/setOperand/getNumOperands` on instructions. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Guys, I have to PRs opened and one depends on the code of another. Should I wait for the first one to be merged (or accepted) in order to continuing working on the other? ",
  "id": "5d1037ad1e35ef14b6ac304e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-24T02:38:37.551Z",
  "text": "Guys, I have to PRs opened and one depends on the code of another. Should I wait for the first one to be merged (or accepted) in order to continuing working on the other? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span>, you mean <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4177\" class=\"issue\">#4177</a> is now depending on <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4216\" class=\"issue\">#4216</a>, right?  Is <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4216\" class=\"issue\">#4216</a> ready for review?",
  "id": "5d10f9ad8218a373496fe7d3",
  "issues": [
   {
    "number": "4177"
   },
   {
    "number": "4216"
   },
   {
    "number": "4216"
   }
  ],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-24T16:26:21.371Z",
  "text": "@guilhermeleobas, you mean #4177 is now depending on #4216, right?  Is #4216 ready for review?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "That\u2019s correct! And yes, <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4216\" class=\"issue\">#4216</a> is ready for review",
  "id": "5d110c8380f91e2d3e846947",
  "issues": [
   {
    "number": "4216"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-24T17:46:43.519Z",
  "text": "That\u2019s correct! And yes, #4216 is ready for review",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, Should I wait for <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4216\" class=\"issue\">#4216</a> to be merged or can I cherry-pick the commits from it to <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4177\" class=\"issue\">#4177</a>?",
  "id": "5d113c2c54a9d54980ffd609",
  "issues": [
   {
    "number": "4216"
   },
   {
    "number": "4177"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-24T21:10:04.156Z",
  "text": "@sklam, Should I wait for #4216 to be merged or can I cherry-pick the commits from it to #4177?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span>, don\u2019t cherrypick, because it will duplicate the commits and may cause conflicts later.  Instead, you can merge <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4216\" class=\"issue\">#4216</a> into <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4177\" class=\"issue\">#4177</a>.",
  "id": "5d114769a1b7b84c9efd758c",
  "issues": [
   {
    "number": "4216"
   },
   {
    "number": "4177"
   }
  ],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-24T21:58:01.561Z",
  "text": "@guilhermeleobas, don\u2019t cherrypick, because it will duplicate the commits and may cause conflicts later.  Instead, you can merge #4216 into #4177.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Ok, thanks ",
  "id": "5d114df995efec2d3d006e86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-06-24T22:26:01.011Z",
  "text": "Ok, thanks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Guys, when lowering Python to Numba IR, do we have access to the actual variable values?",
  "id": "5d14cb76501ea60f12578170",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-27T13:58:14.485Z",
  "text": "Guys, when lowering Python to Numba IR, do we have access to the actual variable values?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "you mean translating the python bytecode to Numba IR ?",
  "id": "5d14cd266e07c2047071d0f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-27T14:05:26.642Z",
  "text": "you mean translating the python bytecode to Numba IR ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "if yes, <code>ir.Const.value</code> and <code>ir.Global.value</code> refers to the python values of constants and globals, respectively",
  "id": "5d14ea9c9091df34321b72f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-27T16:11:08.441Z",
  "text": "if yes, `ir.Const.value` and `ir.Global.value` refers to the python values of constants and globals, respectively",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/rdesai16",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/48958664?v=4&s=60",
   "displayName": "rdesai16",
   "gv": "4",
   "id": "5ce7f667d73408ce4fc13b3e",
   "url": "/rdesai16",
   "username": "rdesai16",
   "v": 1
  },
  "html": "<p>Hi <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I am working on lower() method for unicode strings  and the PR is as follows:<br><a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4049\" href=\"https://github.com/numba/numba/pull/4049\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4049</a></p><p>I am using helperlib as suggested in the review but I have a question regarding that. I have to import cpython functions and code for the case operation. Currently the function is declared like this in _helpermod.c:</p><pre><code>declmethod<span class=\"list\">(<span class=\"keyword\">extract_unicode</span>)</span><span class=\"comment\">;</span>\ndeclmethod<span class=\"list\">(<span class=\"keyword\">str_case_operation</span>)</span><span class=\"comment\">;</span></code></pre><p>But now the function arguments for str_case_operation have changed and there 3 more arguments to this function. But when I change the function definition in such way in my c file it shows me an error in _helpermod.c as follows:</p><pre><code> numba/_helpermod.<span class=\"attribute\">c</span>:<span class=\"number\">41</span>:<span class=\"number\">47</span>: <span class=\"attribute\">error</span>: <span class=\"string\">'numba_str_case_operation'</span> undeclared (first use <span class=\"keyword\">in</span> <span class=\"keyword\">this</span> <span class=\"keyword\">function</span>)\n <span class=\"comment\">#define declmethod(func) _declpointer(#func, &amp;numba_##func)</span>\n                                               ^\nnumba/_helpermod.<span class=\"attribute\">c</span>:<span class=\"number\">32</span>:<span class=\"number\">38</span>: <span class=\"attribute\">note</span>: <span class=\"keyword\">in</span> definition <span class=\"keyword\">of</span> macro <span class=\"string\">'_declpointer'</span>\n     PyObject *o = PyLong_FromVoidPtr(value);           <span class=\"string\">\\</span>\n                                      ^\nnumba/_helpermod.<span class=\"attribute\">c</span>:<span class=\"number\">122</span>:<span class=\"number\">5</span>: <span class=\"attribute\">note</span>: <span class=\"keyword\">in</span> expansion <span class=\"keyword\">of</span> macro <span class=\"string\">'declmethod'</span>\n     declmethod(str_case_operation);\n     ^\nnumba/_helpermod.<span class=\"attribute\">c</span>:<span class=\"number\">41</span>:<span class=\"number\">47</span>: <span class=\"attribute\">note</span>: each undeclared identifier <span class=\"keyword\">is</span> reported only once <span class=\"keyword\">for</span> each <span class=\"keyword\">function</span> <span class=\"literal\">it</span> appears <span class=\"keyword\">in</span>\n <span class=\"comment\">#define declmethod(func) _declpointer(#func, &amp;numba_##func)</span>\n                                               ^\nnumba/_helpermod.<span class=\"attribute\">c</span>:<span class=\"number\">32</span>:<span class=\"number\">38</span>: <span class=\"attribute\">note</span>: <span class=\"keyword\">in</span> definition <span class=\"keyword\">of</span> macro <span class=\"string\">'_declpointer'</span>\n     PyObject *o = PyLong_FromVoidPtr(value);           <span class=\"string\">\\</span>\n                                      ^\nnumba/_helpermod.<span class=\"attribute\">c</span>:<span class=\"number\">122</span>:<span class=\"number\">5</span>: <span class=\"attribute\">note</span>: <span class=\"keyword\">in</span> expansion <span class=\"keyword\">of</span> macro <span class=\"string\">'declmethod'</span>\n     declmethod(str_case_operation);</code></pre><p>So how can I eliminate this error? I am not sure how to deal with this declaration in _helpermod.c. Can you help me with that?</p>",
  "id": "5d15130c6e07c204707469cf",
  "issues": [
   {
    "number": "4049",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-27T19:03:40.785Z",
  "text": "Hi @stuartarchibald I am working on lower() method for unicode strings  and the PR is as follows:\nhttps://github.com/numba/numba/pull/4049\n\nI am using helperlib as suggested in the review but I have a question regarding that. I have to import cpython functions and code for the case operation. Currently the function is declared like this in _helpermod.c:\n \n    declmethod(extract_unicode);\n    declmethod(str_case_operation);\n\n\nBut now the function arguments for str_case_operation have changed and there 3 more arguments to this function. But when I change the function definition in such way in my c file it shows me an error in _helpermod.c as follows:\n```\n numba/_helpermod.c:41:47: error: 'numba_str_case_operation' undeclared (first use in this function)\n #define declmethod(func) _declpointer(#func, &numba_##func)\n                                               ^\nnumba/_helpermod.c:32:38: note: in definition of macro '_declpointer'\n     PyObject *o = PyLong_FromVoidPtr(value);           \\\n                                      ^\nnumba/_helpermod.c:122:5: note: in expansion of macro 'declmethod'\n     declmethod(str_case_operation);\n     ^\nnumba/_helpermod.c:41:47: note: each undeclared identifier is reported only once for each function it appears in\n #define declmethod(func) _declpointer(#func, &numba_##func)\n                                               ^\nnumba/_helpermod.c:32:38: note: in definition of macro '_declpointer'\n     PyObject *o = PyLong_FromVoidPtr(value);           \\\n                                      ^\nnumba/_helpermod.c:122:5: note: in expansion of macro 'declmethod'\n     declmethod(str_case_operation);\n```\n\n\nSo how can I eliminate this error? I am not sure how to deal with this declaration in _helpermod.c. Can you help me with that?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "As discussed out of band <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4232\" href=\"https://github.com/numba/numba/pull/4232\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4232</a> will help.",
  "id": "5d161af6aa095d404cd24371",
  "issues": [
   {
    "number": "4232",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-06-28T13:49:42.361Z",
  "text": "As discussed out of band https://github.com/numba/numba/pull/4232 will help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hey guys, quick question: how do you preview the rst files in the docs in your local pc before submit? Pycharm on my pc throws errors so I&#39;m a bit blind with these files.",
  "id": "5d1f73f2ce3d0458f2b5afe1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-07-05T15:59:46.293Z",
  "text": "hey guys, quick question: how do you preview the rst files in the docs in your local pc before submit? Pycharm on my pc throws errors so I'm a bit blind with these files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> if you navigate to the <code>docs</code> dir in your source build, you can do <code>make html</code>",
  "id": "5d1f745dbf25f013e7ca8c60",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-07-05T16:01:33.244Z",
  "text": "@luk-f-a if you navigate to the `docs` dir in your source build, you can do `make html`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and it&#39;ll render all the documentation locally",
  "id": "5d1f746711bfea0b67abe4b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-05T16:01:43.174Z",
  "text": "and it'll render all the documentation locally",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "you&#39;ll probably need to <code>conda install sphinx pygments</code> and then <code>pip install sphinx_bootstrap_theme</code>",
  "id": "5d1f74a35821f065d44a2978",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-05T16:02:43.836Z",
  "text": "you'll probably need to `conda install sphinx pygments` and then `pip install sphinx_bootstrap_theme`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "to get the tool chain deps",
  "id": "5d1f74ad5821f065d44a2a01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-05T16:02:53.042Z",
  "text": "to get the tool chain deps",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "then, once built, the HTML pages are in _build/html, so you can just point a browser there",
  "id": "5d1f74d711bfea0b67abe792",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-05T16:03:35.329Z",
  "text": "then, once built, the HTML pages are in _build/html, so you can just point a browser there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh, there&#39;s also docs on how to build the docs here <a href=\"http://numba.pydata.org/numba-doc/dev/developer/contributing.html#documentation\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/dev/developer/contributing.html#documentation</a>",
  "id": "5d1f7504dd0b530e40a2b37b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-05T16:04:20.160Z",
  "text": "oh, there's also docs on how to build the docs here http://numba.pydata.org/numba-doc/dev/developer/contributing.html#documentation",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/dev/developer/contributing.html#documentation"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> <span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span>  <code>sphinx_bootstrap_theme</code> is also available via <code>conda</code>",
  "id": "5d1f967f77c54c13e60694af",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   },
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-05T18:27:11.187Z",
  "text": "@stuartarchibald @luk-f-a  `sphinx_bootstrap_theme` is also available via `conda`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "also, sometimes changes won&#39;t be detected properly so I tend to do a <code>rm -r _build &amp;&amp; make html</code> to re-render everything from scratch",
  "id": "5d1f96a5ccfbb80e41451df0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-05T18:27:49.611Z",
  "text": "also, sometimes changes won't be detected properly so I tend to do a `rm -r _build && make html` to re-render everything from scratch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , thanks for your useful comments and patience in the review. Feels good with be done with this PR. I&#39;m taking a break and then in a few weeks I&#39;ll try to add the <code>axis</code> argument to <code>np.mean</code>",
  "id": "5d1f97315821f065d44b59d2",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-05T18:30:09.765Z",
  "text": "@stuartarchibald , thanks for your useful comments and patience in the review. Feels good with be done with this PR. I'm taking a break and then in a few weeks I'll try to add the `axis` argument to `np.mean`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> congrats on getting it done! Supporting  <code>axis</code> will be much needed and highly valued contribution.",
  "id": "5d1f984d3a1e451bfda77d9d",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-05T18:34:53.672Z",
  "text": "@luk-f-a congrats on getting it done! Supporting  `axis` will be much needed and highly valued contribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> as <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> said, congrats on getting it over the line, and thanks for your commitment to it and patience in dealing with it. Looking forward to the next one :)",
  "id": "5d1f9d56bf25f013e7cbf180",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   },
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-05T18:56:22.069Z",
  "text": "@luk-f-a as @esc said, congrats on getting it over the line, and thanks for your commitment to it and patience in dealing with it. Looking forward to the next one :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Guys, If a variable is defined multiple times throughout the IR, every definition will create a new instance of it? For instance, in the IR below the <code>l</code> is defined once on <strong>label 0</strong> and redefined on <strong>label 24</strong>. So, the LHS of both definitions refer to the same <code>l</code>? Or each definition creates a new instance of the <code>Var</code> class with name <code>l</code>?<pre><code>---------------------------------IR DUMP: calc----------------------------------\n<span class=\"tag\">label</span> <span class=\"number\">0</span>:\n    n = <span class=\"function\"><span class=\"title\">arg</span><span class=\"params\">(<span class=\"number\">0</span>, name=n)</span></span>                       [<span class=\"string\">'n'</span>]\n    <span class=\"variable\">$const0</span>.<span class=\"number\">1</span> = <span class=\"function\"><span class=\"title\">const</span><span class=\"params\">(int, <span class=\"number\">0</span>)</span></span>                [<span class=\"string\">'$const0.1'</span>]\n    $<span class=\"number\">0.2</span> = <span class=\"function\"><span class=\"title\">build_list</span><span class=\"params\">(items=[Var(<span class=\"variable\">$const0</span>.<span class=\"number\">1</span>, a.py (<span class=\"number\">12</span>)</span></span>)]) [<span class=\"string\">'$0.2'</span>, <span class=\"string\">'$const0.1'</span>]\n    <span class=\"tag\">del</span> <span class=\"variable\">$const0</span>.<span class=\"number\">1</span>                            []\n    l = $<span class=\"number\">0.2</span>                                 [<span class=\"string\">'$0.2'</span>, <span class=\"string\">'l'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">0.2</span>                                 []\n    jump <span class=\"number\">6</span>                                   []\n<span class=\"tag\">label</span> <span class=\"number\">6</span>:\n    jump <span class=\"number\">8</span>                                   []\n<span class=\"tag\">label</span> <span class=\"number\">8</span>:\n    $<span class=\"number\">8.1</span> = <span class=\"function\"><span class=\"title\">global</span><span class=\"params\">(range: &lt;class <span class=\"string\">'range'</span>&gt;)</span></span>    [<span class=\"string\">'$8.1'</span>]\n    <span class=\"variable\">$const8</span>.<span class=\"number\">2</span> = <span class=\"function\"><span class=\"title\">const</span><span class=\"params\">(int, <span class=\"number\">1</span>)</span></span>                [<span class=\"string\">'$const8.2'</span>]\n    <span class=\"variable\">$const8</span>.<span class=\"number\">4</span> = <span class=\"function\"><span class=\"title\">const</span><span class=\"params\">(int, <span class=\"number\">1</span>)</span></span>                [<span class=\"string\">'$const8.4'</span>]\n    $<span class=\"number\">8.5</span> = n + <span class=\"variable\">$const8</span>.<span class=\"number\">4</span>                     [<span class=\"string\">'$8.5'</span>, <span class=\"string\">'$const8.4'</span>, <span class=\"string\">'n'</span>]\n    <span class=\"tag\">del</span> n                                    []\n    <span class=\"tag\">del</span> <span class=\"variable\">$const8</span>.<span class=\"number\">4</span>                            []\n    $<span class=\"number\">8.6</span> = call $<span class=\"number\">8.1</span>(<span class=\"variable\">$const8</span>.<span class=\"number\">2</span>, $<span class=\"number\">8.5</span>, func=$<span class=\"number\">8.1</span>, args=[<span class=\"function\"><span class=\"title\">Var</span><span class=\"params\">(<span class=\"variable\">$const8</span>.<span class=\"number\">2</span>, a.py (<span class=\"number\">13</span>)</span></span>), <span class=\"function\"><span class=\"title\">Var</span><span class=\"params\">($<span class=\"number\">8.5</span>, a.py (<span class=\"number\">13</span>)</span></span>)], kws=(), vararg=None) [<span class=\"string\">'$8.1'</span>, <span class=\"string\">'$8.5'</span>, <span class=\"string\">'$8.6'</span>, <span class=\"string\">'$const8.2'</span>]\n    <span class=\"tag\">del</span> <span class=\"variable\">$const8</span>.<span class=\"number\">2</span>                            []\n    <span class=\"tag\">del</span> $<span class=\"number\">8.5</span>                                 []\n    <span class=\"tag\">del</span> $<span class=\"number\">8.1</span>                                 []\n    $<span class=\"number\">8.7</span> = <span class=\"function\"><span class=\"title\">getiter</span><span class=\"params\">(value=$<span class=\"number\">8.6</span>)</span></span>               [<span class=\"string\">'$8.6'</span>, <span class=\"string\">'$8.7'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">8.6</span>                                 []\n    <span class=\"variable\">$phi22</span>.<span class=\"number\">1</span> = $<span class=\"number\">8.7</span>                          [<span class=\"string\">'$8.7'</span>, <span class=\"string\">'$phi22.1'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">8.7</span>                                 []\n    jump <span class=\"number\">22</span>                                  []\n<span class=\"tag\">label</span> <span class=\"number\">22</span>:\n    l = PHI [(<span class=\"string\">'l'</span>, <span class=\"number\">0</span>), (<span class=\"string\">'l'</span>, <span class=\"number\">24</span>)]            [<span class=\"string\">'l'</span>, <span class=\"string\">'l'</span>, <span class=\"string\">'l'</span>]\n    $<span class=\"number\">22.2</span> = <span class=\"function\"><span class=\"title\">iternext</span><span class=\"params\">(value=<span class=\"variable\">$phi22</span>.<span class=\"number\">1</span>)</span></span>         [<span class=\"string\">'$22.2'</span>, <span class=\"string\">'$phi22.1'</span>]\n    $<span class=\"number\">22.3</span> = <span class=\"function\"><span class=\"title\">pair_first</span><span class=\"params\">(value=$<span class=\"number\">22.2</span>)</span></span>          [<span class=\"string\">'$22.2'</span>, <span class=\"string\">'$22.3'</span>]\n    $<span class=\"number\">22.4</span> = <span class=\"function\"><span class=\"title\">pair_second</span><span class=\"params\">(value=$<span class=\"number\">22.2</span>)</span></span>         [<span class=\"string\">'$22.2'</span>, <span class=\"string\">'$22.4'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">22.2</span>                                []\n    <span class=\"variable\">$phi24</span>.<span class=\"number\">1</span> = $<span class=\"number\">22.3</span>                         [<span class=\"string\">'$22.3'</span>, <span class=\"string\">'$phi24.1'</span>]\n    <span class=\"variable\">$phi38</span>.<span class=\"number\">1</span> = $<span class=\"number\">22.3</span>                         [<span class=\"string\">'$22.3'</span>, <span class=\"string\">'$phi38.1'</span>]\n    <span class=\"tag\">del</span> <span class=\"variable\">$phi38</span>.<span class=\"number\">1</span>                             []\n    <span class=\"tag\">del</span> $<span class=\"number\">22.3</span>                                []\n    <span class=\"variable\">$phi38</span>.<span class=\"number\">2</span> = <span class=\"variable\">$phi22</span>.<span class=\"number\">1</span>                      [<span class=\"string\">'$phi22.1'</span>, <span class=\"string\">'$phi38.2'</span>]\n    <span class=\"tag\">del</span> <span class=\"variable\">$phi38</span>.<span class=\"number\">2</span>                             []\n    branch $<span class=\"number\">22.4</span>, <span class=\"number\">24</span>, <span class=\"number\">38</span>                     [<span class=\"string\">'$22.4'</span>]\n<span class=\"tag\">label</span> <span class=\"number\">24</span>:\n    <span class=\"tag\">del</span> $<span class=\"number\">22.4</span>                                []\n    <span class=\"tag\">i</span> = <span class=\"variable\">$phi24</span>.<span class=\"number\">1</span>                             [<span class=\"string\">'$phi24.1'</span>, <span class=\"string\">'i'</span>]\n    <span class=\"tag\">del</span> <span class=\"variable\">$phi24</span>.<span class=\"number\">1</span>                             []\n    $<span class=\"number\">24.4</span> = <span class=\"function\"><span class=\"title\">build_list</span><span class=\"params\">(items=[Var(i, a.py (<span class=\"number\">13</span>)</span></span>)]) [<span class=\"string\">'$24.4'</span>, <span class=\"string\">'i'</span>]\n    <span class=\"tag\">del</span> <span class=\"tag\">i</span>                                    []\n    $<span class=\"number\">24.5</span> = <span class=\"function\"><span class=\"title\">inplace_binop</span><span class=\"params\">(fn=&lt;built-in function iadd&gt;, immutable_fn=&lt;built-in function add&gt;, lhs=l, rhs=$<span class=\"number\">24.4</span>, static_lhs=Undefined, static_rhs=Undefined)</span></span> [<span class=\"string\">'$24.4'</span>, <span class=\"string\">'$24.5'</span>, <span class=\"string\">'l'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">24.4</span>                                []\n    l = $<span class=\"number\">24.5</span>                                [<span class=\"string\">'$24.5'</span>, <span class=\"string\">'l'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">24.5</span>                                []\n    jump <span class=\"number\">22</span>                                  []\n<span class=\"tag\">label</span> <span class=\"number\">38</span>:\n    <span class=\"tag\">del</span> <span class=\"variable\">$phi24</span>.<span class=\"number\">1</span>                             []\n    <span class=\"tag\">del</span> <span class=\"variable\">$phi22</span>.<span class=\"number\">1</span>                             []\n    <span class=\"tag\">del</span> $<span class=\"number\">22.4</span>                                []\n    jump <span class=\"number\">40</span>                                  []\n<span class=\"tag\">label</span> <span class=\"number\">40</span>:\n    $<span class=\"number\">40.2</span> = <span class=\"function\"><span class=\"title\">cast</span><span class=\"params\">(value=l)</span></span>                    [<span class=\"string\">'$40.2'</span>, <span class=\"string\">'l'</span>]\n    <span class=\"tag\">del</span> l                                    []\n    return $<span class=\"number\">40.2</span>                             [<span class=\"string\">'$40.2'</span>]</code></pre>",
  "id": "5d2cba7d4d750532414ecdd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-07-15T17:40:13.853Z",
  "text": "Guys, If a variable is defined multiple times throughout the IR, every definition will create a new instance of it? For instance, in the IR below the `l` is defined once on **label 0** and redefined on **label 24**. So, the LHS of both definitions refer to the same `l`? Or each definition creates a new instance of the `Var` class with name `l`?\n\n```\n---------------------------------IR DUMP: calc----------------------------------\nlabel 0:\n    n = arg(0, name=n)                       ['n']\n    $const0.1 = const(int, 0)                ['$const0.1']\n    $0.2 = build_list(items=[Var($const0.1, a.py (12))]) ['$0.2', '$const0.1']\n    del $const0.1                            []\n    l = $0.2                                 ['$0.2', 'l']\n    del $0.2                                 []\n    jump 6                                   []\nlabel 6:\n    jump 8                                   []\nlabel 8:\n    $8.1 = global(range: <class 'range'>)    ['$8.1']\n    $const8.2 = const(int, 1)                ['$const8.2']\n    $const8.4 = const(int, 1)                ['$const8.4']\n    $8.5 = n + $const8.4                     ['$8.5', '$const8.4', 'n']\n    del n                                    []\n    del $const8.4                            []\n    $8.6 = call $8.1($const8.2, $8.5, func=$8.1, args=[Var($const8.2, a.py (13)), Var($8.5, a.py (13))], kws=(), vararg=None) ['$8.1', '$8.5', '$8.6', '$const8.2']\n    del $const8.2                            []\n    del $8.5                                 []\n    del $8.1                                 []\n    $8.7 = getiter(value=$8.6)               ['$8.6', '$8.7']\n    del $8.6                                 []\n    $phi22.1 = $8.7                          ['$8.7', '$phi22.1']\n    del $8.7                                 []\n    jump 22                                  []\nlabel 22:\n    l = PHI [('l', 0), ('l', 24)]            ['l', 'l', 'l']\n    $22.2 = iternext(value=$phi22.1)         ['$22.2', '$phi22.1']\n    $22.3 = pair_first(value=$22.2)          ['$22.2', '$22.3']\n    $22.4 = pair_second(value=$22.2)         ['$22.2', '$22.4']\n    del $22.2                                []\n    $phi24.1 = $22.3                         ['$22.3', '$phi24.1']\n    $phi38.1 = $22.3                         ['$22.3', '$phi38.1']\n    del $phi38.1                             []\n    del $22.3                                []\n    $phi38.2 = $phi22.1                      ['$phi22.1', '$phi38.2']\n    del $phi38.2                             []\n    branch $22.4, 24, 38                     ['$22.4']\nlabel 24:\n    del $22.4                                []\n    i = $phi24.1                             ['$phi24.1', 'i']\n    del $phi24.1                             []\n    $24.4 = build_list(items=[Var(i, a.py (13))]) ['$24.4', 'i']\n    del i                                    []\n    $24.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l, rhs=$24.4, static_lhs=Undefined, static_rhs=Undefined) ['$24.4', '$24.5', 'l']\n    del $24.4                                []\n    l = $24.5                                ['$24.5', 'l']\n    del $24.5                                []\n    jump 22                                  []\nlabel 38:\n    del $phi24.1                             []\n    del $phi22.1                             []\n    del $22.4                                []\n    jump 40                                  []\nlabel 40:\n    $40.2 = cast(value=l)                    ['$40.2', 'l']\n    del l                                    []\n    return $40.2                             ['$40.2']\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> off the top of my head, I think its the latter",
  "id": "5d2cbf0ed14e297762d8a220",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T17:59:42.578Z",
  "text": "@guilhermeleobas off the top of my head, I think its the latter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>, whenever I rename a defsite of <code>l</code>, all defsites are renamed together. I even dumped the memory address of each LHS  of <code>l</code> and they all point to the same memory address.",
  "id": "5d2cbf943596f56f8ce3df07",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:01:56.441Z",
  "text": "Hi @stuartarchibald, whenever I rename a defsite of `l`, all defsites are renamed together. I even dumped the memory address of each LHS  of `l` and they all point to the same memory address.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "are you renaming it via building new IR or via e.g. <code>_definitions</code> ?",
  "id": "5d2cbfd5eab6cd776373b954",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:03:01.025Z",
  "text": "are you renaming it via building new IR or via e.g. `_definitions` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "I am just changing the name of the variable by accessing the <code>.name</code> field of the <code>Var</code> class",
  "id": "5d2cbffc3596f56f8ce3e431",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:03:40.264Z",
  "text": "I am just changing the name of the variable by accessing the `.name` field of the `Var` class",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, then I guess they are all referring to the same place, that&#39;s probably a misake",
  "id": "5d2cc05a202bb93f00ab99d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:05:14.745Z",
  "text": "hmmm, then I guess they are all referring to the same place, that's probably a misake",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "can you rename exclusively by just creating a new <code>ir.Var</code> and replacing the assignment ?",
  "id": "5d2cc07b01621760bcbd704b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:05:47.124Z",
  "text": "can you rename exclusively by just creating a new `ir.Var` and replacing the assignment ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "I think so",
  "id": "5d2cc10a3596f56f8ce3ec99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:08:10.198Z",
  "text": "I think so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-15T18:09:05.788Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "but if every instance of <code>l</code> refers to the same variable, I would have to change the uses of it as well",
  "id": "5d2cc1304f7f9e219cfc3682",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:08:48.406Z",
  "text": "but if every instance of `l` refers to the same variable, I would have to change the uses of it as well",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "would it be easier to just create it uniquely in the first place ?",
  "id": "5d2cc1747dbfff3242b30e98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:09:56.868Z",
  "text": "would it be easier to just create it uniquely in the first place ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "not by name, but as unique references",
  "id": "5d2cc1813596f56f8ce3eff8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:10:09.375Z",
  "text": "not by name, but as unique references",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Yes, a lot easier",
  "id": "5d2cc1c73596f56f8ce3f36d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:11:19.256Z",
  "text": "Yes, a lot easier",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Then perhaps try that? It seems like it&#39;s the right approach and if it breaks stuff then said stuff was probably relying on something it shouldn&#39;t.",
  "id": "5d2cc21d3b41924785c52b2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:12:45.930Z",
  "text": "Then perhaps try that? It seems like it's the right approach and if it breaks stuff then said stuff was probably relying on something it shouldn't.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-15T18:13:32.598Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "that\u2019s what I thought in the first place - vars are unique -  but apparently every stmt is unique and vars are shared across them",
  "id": "5d2cc2213596f56f8ce3f61d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:12:49.168Z",
  "text": "that\u2019s what I thought in the first place - vars are unique -  but apparently every stmt is unique and vars are shared across them",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "now we&#39;re talking about this a bit i seem to recall this and it being problematic",
  "id": "5d2cc23bd14e297762d8b989",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:13:15.771Z",
  "text": "now we're talking about this a bit i seem to recall this and it being problematic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "In which file the IR is built? Maybe I can change the file to make Vars unique",
  "id": "5d2cc960570ac36f8d2d69a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T18:43:44.720Z",
  "text": "In which file the IR is built? Maybe I can change the file to make Vars unique",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "You probably want <code>numba/interpreter.py</code>",
  "id": "5d2ce3eb5fa7895c430927ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T20:36:59.127Z",
  "text": "You probably want `numba/interpreter.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ll also speak to <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> tomorrow to see if there&#39;s any pressing reason he can recall not to do this.",
  "id": "5d2ce3ff54d3383937129bba",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T20:37:19.581Z",
  "text": "I'll also speak to @sklam tomorrow to see if there's any pressing reason he can recall not to do this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Ok, thanks",
  "id": "5d2cf0fb570ac36f8d2e8da6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-15T21:32:43.074Z",
  "text": "Ok, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span>, <code>Var.name</code> should be treated as immutable.  There are other IR-nodes that refers just to the name (the <code>str</code>) of a var; i.e. <code>Scope</code>.  It\u2019s just better to create new <code>Var</code> witht the new name than mutating it.",
  "id": "5d2dc6cd8ad6387fc05ec94f",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-16T12:45:01.798Z",
  "text": "@guilhermeleobas, `Var.name` should be treated as immutable.  There are other IR-nodes that refers just to the name (the `str`) of a var; i.e. `Scope`.  It\u2019s just better to create new `Var` witht the new name than mutating it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, the problem is that some IR-nodes are reusing the <code>Var</code> instead of creating a copy. In the example I gave above, renaming <code>l</code> result in renaming definition of it",
  "id": "5d2de4cc4f7f9e219c04af06",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-16T14:53:00.385Z",
  "text": "@sklam, the problem is that some IR-nodes are reusing the `Var` instead of creating a copy. In the example I gave above, renaming `l` result in renaming definition of it\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "But one would expect that every definition of a variable should create a copy of <code>Var</code> instead of using a reference to the old one",
  "id": "5d2de513d14e297762e1073c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-07-16T14:54:11.809Z",
  "text": "But one would expect that every definition of a variable should create a copy of `Var` instead of using a reference to the old one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Yes, a new copy of <code>Var</code> everytime is ideal.  I just want to point out that many of the current code has mapping like maps <code>{name : Var}</code> and that mutating <code>Var</code> will break a lot of code.  If you can avoid it, try replacing the <code>Var</code> with a new instance.  Ideally, the IR nodes should be treated as immutable. ",
  "id": "5d2dea8d8ad6387fc05ec9be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-16T15:17:33.585Z",
  "text": "Yes, a new copy of `Var` everytime is ideal.  I just want to point out that many of the current code has mapping like maps `{name : Var}` and that mutating `Var` will break a lot of code.  If you can avoid it, try replacing the `Var` with a new instance.  Ideally, the IR nodes should be treated as immutable. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-17T03:04:22.903Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<p>One last question <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>. If one renames a variable, the expected behaviour is that all uses of that variable should be renamed as well? </p><pre><code><span class=\"tag\">label</span> <span class=\"number\">24</span>:\n    <span class=\"tag\">del</span> $<span class=\"number\">22.4</span>                                []\n    <span class=\"tag\">i</span> = <span class=\"variable\">$phi24</span>.<span class=\"number\">1</span>                             [<span class=\"string\">'$phi24.1'</span>, <span class=\"string\">'i'</span>]\n    <span class=\"tag\">del</span> <span class=\"variable\">$phi24</span>.<span class=\"number\">1</span>                             []\n    $<span class=\"number\">24.4</span> = <span class=\"function\"><span class=\"title\">build_list</span><span class=\"params\">(items=[Var(i, a.py (<span class=\"number\">13</span>)</span></span>)]) [<span class=\"string\">'$24.4'</span>, <span class=\"string\">'i'</span>]\n    <span class=\"tag\">del</span> <span class=\"tag\">i</span>                                    []\n    $<span class=\"number\">24.5</span> = <span class=\"function\"><span class=\"title\">inplace_binop</span><span class=\"params\">(fn=&lt;built-in function iadd&gt;, immutable_fn=&lt;built-in function add&gt;, lhs=l, rhs=$<span class=\"number\">24.4</span>, static_lhs=Undefined, static_rhs=Undefined)</span></span> [<span class=\"string\">'$24.4'</span>, <span class=\"string\">'$24.5'</span>, <span class=\"string\">'l'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">24.4</span>                                []\n    l = $<span class=\"number\">24.5</span>                                [<span class=\"string\">'$24.5'</span>, <span class=\"string\">'l'</span>]\n    <span class=\"tag\">del</span> $<span class=\"number\">24.5</span>                                []\n    jump <span class=\"number\">22</span>                                  []</code></pre><p>Renaming <code>$phi24.1</code> to <code>foo</code> on <code>line 3</code> renames the use of <code>$phi24.1</code> on <code>line 4</code>  as well? Like, they should have the same reference to <code>Var(name=\u201c$phi24.1&quot;)</code>? Or variables should be immutable and independent?</p>",
  "id": "5d2e901d4d750532415c2b92",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-17T03:03:57.270Z",
  "text": "One last question @sklam. If one renames a variable, the expected behaviour is that all uses of that variable should be renamed as well? \n\n```\nlabel 24:\n    del $22.4                                []\n    i = $phi24.1                             ['$phi24.1', 'i']\n    del $phi24.1                             []\n    $24.4 = build_list(items=[Var(i, a.py (13))]) ['$24.4', 'i']\n    del i                                    []\n    $24.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l, rhs=$24.4, static_lhs=Undefined, static_rhs=Undefined) ['$24.4', '$24.5', 'l']\n    del $24.4                                []\n    l = $24.5                                ['$24.5', 'l']\n    del $24.5                                []\n    jump 22                                  []\n```\n\nRenaming `$phi24.1` to `foo` on `line 3` renames the use of `$phi24.1` on `line 4`  as well? Like, they should have the same reference to `Var(name=\u201c$phi24.1\")`? Or variables should be immutable and independent?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-07-17T03:43:16.292Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "If the latter is the expected behaviour, one can change <a href=\"https://github.com/numba/numba/blob/master/numba/interpreter.py#L274\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this line</a> to make a deepcopy of the target",
  "id": "5d2e98d73be99c4786647e40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-17T03:41:11.376Z",
  "text": "If the latter is the expected behaviour, one can change [this line](https://github.com/numba/numba/blob/master/numba/interpreter.py#L274) to make a deepcopy of the target",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/interpreter.py#L274"
   }
  ],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "Treat <code>Var</code> instances as immutable, but their references could be shared.  No code should be relying on the object identity of <code>Var</code> instances.  In code generation, as long as two Var instances have the same <code>.name</code>, they are referring to the same variable.",
  "id": "5d2f2c198ad6387fc05ecb45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-17T14:09:29.331Z",
  "text": "Treat `Var` instances as immutable, but their references could be shared.  No code should be relying on the object identity of `Var` instances.  In code generation, as long as two Var instances have the same `.name`, they are referring to the same variable.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<blockquote>\n<p>If the latter is the expected behaviour, one can change <a href=\"https://github.com/numba/numba/blob/master/numba/interpreter.py#L274\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">this line</a> to make a deepcopy of the target</p></blockquote>\n<p><code>Var</code> has a reference to the <code>Scope</code>.  It shouldn\u2019t be deepcopied.</p>",
  "id": "5d2f2c6eacfb784293604aea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-07-17T14:10:54.526Z",
  "text": "> If the latter is the expected behaviour, one can change [this line](https://github.com/numba/numba/blob/master/numba/interpreter.py#L274) to make a deepcopy of the target\n\n`Var` has a reference to the `Scope`.  It shouldn\u2019t be deepcopied.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/interpreter.py#L274"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I didn&#39;t get a chance to bring this up at today&#39;s meeting, and I will be out of town next week. Most of the numba issues our client has seem to go back to functions not being first class types <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3405\" href=\"https://github.com/numba/numba/issues/3405\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#3405</a>. If anyone has any thoughts on how hard that would be to fix and any suggestions on where to start on doing it I would appreciate it. ",
  "id": "5d37417ee2d1aa6688f76a4f",
  "issues": [
   {
    "number": "3405",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:18:54.354Z",
  "text": "I didn't get a chance to bring this up at today's meeting, and I will be out of town next week. Most of the numba issues our client has seem to go back to functions not being first class types https://github.com/numba/numba/issues/3405. If anyone has any thoughts on how hard that would be to fix and any suggestions on where to start on doing it I would appreciate it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "That\u2019s a hard one.  It will help if you can post some examples of code that needs to be working into the PR.",
  "id": "5d374423b45b2a76e20b3616",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:30:11.428Z",
  "text": "That\u2019s a hard one.  It will help if you can post some examples of code that needs to be working into the PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "also <span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> , do you think the use of explicit signature is applicable to your requirements?",
  "id": "5d3744c6b45b2a76e20b3618",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:32:54.095Z",
  "text": "also @asmeurer , do you think the use of explicit signature is applicable to your requirements?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "These are the relevant issues. My understanding is that they all go back to that, but if they don&#39;t actually that would be good to know. ",
  "id": "5d3744cf35e05c09938ab116",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:33:03.438Z",
  "text": "These are the relevant issues. My understanding is that they all go back to that, but if they don't actually that would be good to know. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3405\" class=\"issue\">#3405</a> <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2952\" class=\"issue\">#2952</a> <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2542\" href=\"https://github.com/numba/numba/issues/2542\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2542</a> <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2956\" href=\"https://github.com/numba/numba/issues/2956\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2956</a>",
  "id": "5d3745f71dc6332966fee40e",
  "issues": [
   {
    "number": "3405"
   },
   {
    "number": "2952"
   },
   {
    "number": "2542",
    "repo": "numba/numba"
   },
   {
    "number": "2956",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:37:59.091Z",
  "text": "#3405 #2952 https://github.com/numba/numba/issues/2542 https://github.com/numba/numba/issues/2956",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "they do all go back to the first-class function issue",
  "id": "5d3746ca0335e5553a0163ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:41:30.690Z",
  "text": "they do all go back to the first-class function issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "that&#39;s good to know ",
  "id": "5d3746d8d1cceb1a8daba41e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:41:44.610Z",
  "text": "that's good to know ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "also I think <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2542\" class=\"issue\">#2542</a> should still be open. The original example works as noted in a comment, but breaks if the tuple has different functions in it. ",
  "id": "5d37480cd1cceb1a8dabaa37",
  "issues": [
   {
    "number": "2542"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-23T17:46:52.210Z",
  "text": "also I think #2542 should still be open. The original example works as noted in a comment, but breaks if the tuple has different functions in it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>, there\u2019s a curious perf difference b/w <code>list(typed_list)</code> and <code>np.asarray(typed_list)</code> in <a href=\"https://github.com/pandas-dev/pandas/issues/27539#issuecomment-514153765\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pandas-dev/pandas/issues/27539#issuecomment-514153765</a>.",
  "id": "5d3af82f223775758cfab2ee",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-26T12:55:11.405Z",
  "text": "@esc, there\u2019s a curious perf difference b/w `list(typed_list)` and `np.asarray(typed_list)` in https://github.com/pandas-dev/pandas/issues/27539#issuecomment-514153765.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pandas-dev/pandas/issues/27539#issuecomment-514153765"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> oh, I missed this one",
  "id": "5d4067e23e51d77b1b96c15d",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-30T15:53:06.989Z",
  "text": "@sklam oh, I missed this one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "wasn&#39;t expecting this and would have to dig pretty deep to grok it",
  "id": "5d40681784bc7a717fed7b2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-30T15:53:59.550Z",
  "text": "wasn't expecting this and would have to dig pretty deep to grok it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "maybe, because for the array it has to be boxed and unboxed, but for a list the elements have to be boxed only",
  "id": "5d406864840e28718072ce78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-30T15:55:16.380Z",
  "text": "maybe, because for the array it has to be boxed and unboxed, but for a list the elements have to be boxed only",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "looks like supplying a numpy view on a typed list will make sense here, IIRC there is a feature request",
  "id": "5d406889bdfdb22bbb711f4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-30T15:55:53.973Z",
  "text": "looks like supplying a numpy view on a typed list will make sense here, IIRC there is a feature request",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that\u2019s probably right, <code>asarray</code> is probably invoking the njit\u2019ed <code>__getitem__</code> for every element such that the dispatcher overhead accumulates",
  "id": "5d418a7f25944f489adf028d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-07-31T12:33:03.138Z",
  "text": "that\u2019s probably right, `asarray` is probably invoking the njit\u2019ed `__getitem__` for every element such that the dispatcher overhead accumulates",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4420\" href=\"https://github.com/numba/numba/issues/4420\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#4420</a> is another reason to think about making parallel-arrayexpr on by default to match numpy+mkl speed.",
  "id": "5d4af92f438e605b3822dd19",
  "issues": [
   {
    "number": "4420",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-07T16:15:43.863Z",
  "text": "https://github.com/numba/numba/issues/4420 is another reason to think about making parallel-arrayexpr on by default to match numpy+mkl speed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "<p>I am trying to define <code>len</code> for bytes array (say, <code>np.array(b&#39;1&#39;, dtype=&#39;S2&#39;)</code>). I currently have</p><pre><code><span class=\"decorator\">@overload(len)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_array_len</span><span class=\"params\">(s)</span>:</span>\n    <span class=\"keyword\">if</span> isinstance(s, types.CharSeq):\n        n = s.count\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">len_impl</span><span class=\"params\">(s)</span>:</span>\n            <span class=\"keyword\">return</span> n\n        <span class=\"keyword\">return</span> len_impl</code></pre><p>but that does not work correctly for <code>np.array(b&#39;1&#39;, dtype=&#39;S2&#39;)</code>.<br>Clearly, the <code>len_impl</code>must find the first <code>\\0</code> and returns its position as the length. But it is not clear to me how to do that inside the <code>len_impl</code> function. What one can do with the <code>s</code> inside <code>len_impl</code> other than printing?</p>",
  "id": "5d4c4f401db76d0ffe98ce72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T16:35:12.221Z",
  "text": "I am trying to define `len` for bytes array (say, `np.array(b'1', dtype='S2')`). I currently have\n```\n@overload(len)\ndef string_array_len(s):\n    if isinstance(s, types.CharSeq):\n        n = s.count\n        def len_impl(s):\n            return n\n        return len_impl\n```\nbut that does not work correctly for `np.array(b'1', dtype='S2')`.\nClearly, the `len_impl`must find the first `\\0` and returns its position as the length. But it is not clear to me how to do that inside the `len_impl` function. What one can do with the `s` inside `len_impl` other than printing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "For instance, if <code>x = np.array(b&#39;1&#39;, dtype=&#39;S2&#39;)</code> then <code>len(x[()])</code> returns 2 while expecting 1.",
  "id": "5d4c4fa4d03a7c63e6f0f2c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T16:36:52.054Z",
  "text": "For instance, if `x = np.array(b'1', dtype='S2')` then `len(x[()])` returns 2 while expecting 1.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-08T18:35:57.628Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>len_impl</code> will be treated like a <code>@jit</code>\u2019ed funciton",
  "id": "5d4c6b85fee5ab6b9315f258",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:35:49.197Z",
  "text": "`len_impl` will be treated like a `@jit`\u2019ed funciton",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "so anything that work in <code>@jit</code> will work",
  "id": "5d4c6b9c438e605b3822df5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:36:12.880Z",
  "text": "so anything that work in `@jit` will work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "however, I don\u2019t think there were any operations defined on <code>types.CharSeq</code>.",
  "id": "5d4c6bfd9baa6938407bff61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:37:49.520Z",
  "text": "however, I don\u2019t think there were any operations defined on `types.CharSeq`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "right, how one can define operations on <code>CharSeq</code>? What would be the closest numba type that I could follow for that?",
  "id": "5d4c6c8c2612bb718c32297f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:40:12.019Z",
  "text": "right, how one can define operations on `CharSeq`? What would be the closest numba type that I could follow for that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-08T18:41:33.008Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Accessing a char item in <code>CharSeq</code> would be a minimal requirement.",
  "id": "5d4c6cd2beba830fff5a64d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:41:22.308Z",
  "text": "Accessing a char item in `CharSeq` would be a minimal requirement.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The UnicodeType is the most similar. it\u2019s defined in <code>numba/unicode.py</code>",
  "id": "5d4c6d28fee5ab6b9315f25e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:42:48.738Z",
  "text": "The UnicodeType is the most similar. it\u2019s defined in `numba/unicode.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Would that mean that <code>CharSeq</code> needs to derive from <code>IterableType</code> (as <code>UnicodeTyoe</code> does)? ",
  "id": "5d4c6d9dbb5364334cf7f784",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:44:45.738Z",
  "text": "Would that mean that `CharSeq` needs to derive from `IterableType` (as `UnicodeTyoe` does)? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Also, <code>UnicodeModel</code> is <code>StructModel</code> while <code>CharSeq</code> is currently <code>DataModel</code>.",
  "id": "5d4c6e0aa4efe3718dca2cca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:46:34.779Z",
  "text": "Also, `UnicodeModel` is `StructModel` while `CharSeq` is currently `DataModel`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>IterableType</code> is needed if the type needs to be iterable.  It simplifies the typing logic.",
  "id": "5d4c6e76438e605b3822df62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:48:22.789Z",
  "text": "`IterableType` is needed if the type needs to be iterable.  It simplifies the typing logic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the <code>StructModel</code> vs <code>DataModel</code> is about how a value of the type is represented in the memory",
  "id": "5d4c6e9394bbaf4167a763f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:48:51.617Z",
  "text": "the `StructModel` vs `DataModel` is about how a value of the type is represented in the memory",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-08T18:49:21.789Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "currently, <code>CharSeq</code> is represented as a byte array",
  "id": "5d4c6ead9baa6938407bff63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:49:17.577Z",
  "text": "currently, `CharSeq` is represented as a byte array",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-08-08T18:50:00.472Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<code>UnicodeType</code> is a struct (C-like structure) with many fields.",
  "id": "5d4c6ec4aa5ef4596c572096",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:49:40.159Z",
  "text": "`UnicodeType` is a struct (C-like structure) with many fields.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "so, <code>CharSeq</code> and <code>UnicodeType</code> are quite different then.",
  "id": "5d4c6f2c029a51607f5c214d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-08T18:51:24.776Z",
  "text": "so, `CharSeq` and `UnicodeType` are quite different then.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m trying to make <code>np.mean</code> accept  <code>axis</code> as a parameter. As discussed before, a good way would be to get <code>sum</code> to accept an output dtype. However, after 2 hours of debugging step by step, I cannot figure out where the return types come from in the inference stage. I&#39;ve been back and forth in <code>typeinfer</code>, <code>npydecl</code>, <code>context</code>, <code>templates</code> and <code>functions</code> and a simple case like <code>np.mean(array(float64, 1)) -&gt; float64</code> seems to appear out of thin air. Anyone available for help on Monday?",
  "id": "5d4f36227d56bc60802f216e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-10T21:24:50.579Z",
  "text": "I'm trying to make `np.mean` accept  `axis` as a parameter. As discussed before, a good way would be to get `sum` to accept an output dtype. However, after 2 hours of debugging step by step, I cannot figure out where the return types come from in the inference stage. I've been back and forth in `typeinfer`, `npydecl`, `context`, `templates` and `functions` and a simple case like `np.mean(array(float64, 1)) -> float64` seems to appear out of thin air. Anyone available for help on Monday?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> the return type is inferred from the input types and rules about the functions/control flow/operations in the function",
  "id": "5d512bdea4efe3718dea92f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-08-12T09:05:34.545Z",
  "text": "@luk-f-a the return type is inferred from the input types and rules about the functions/control flow/operations in the function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "What is it you are trying to do ?",
  "id": "5d512be5bb5364334c18a39b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-08-12T09:05:41.108Z",
  "text": "What is it you are trying to do ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , I was trying to understand were <code>sig.return_type</code> comes from in <code>array_sum_axis</code>. It looks like that the return type was decided in advanced, before <code>array_sum_axis</code> was executed. But I might have missed something.",
  "id": "5d512fb8a4efe3718deaaacd",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-08-12T09:22:00.973Z",
  "text": "@stuartarchibald , I was trying to understand were ` sig.return_type` comes from in `array_sum_axis`. It looks like that the return type was decided in advanced, before `array_sum_axis` was executed. But I might have missed something.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<code>sig</code> is an input, so it&#39;s not up to <code>array_sum_axis</code> to declare its own <code>return_type</code>, is it?",
  "id": "5d512fee2612bb718c52cf39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:22:54.394Z",
  "text": "`sig` is an input, so it's not up to `array_sum_axis` to declare its own `return_type`, is it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah ok, yeah, so this is using the more raw/old style API that is now discouraged",
  "id": "5d51304090bba62a126043bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:24:16.779Z",
  "text": "ah ok, yeah, so this is using the more raw/old style API that is now discouraged",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/master/numba/typing/arraydecl.py#L610-L640\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/master/numba/typing/arraydecl.py#L610-L640</a>",
  "id": "5d51308f1db76d0ffeba6ad8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:25:35.039Z",
  "text": "https://github.com/numba/numba/blob/master/numba/typing/arraydecl.py#L610-L640",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/typing/arraydecl.py#L610-L640"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s what you are looking for",
  "id": "5d5130947d56bc60803c3449",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:25:40.269Z",
  "text": "that's what you are looking for",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "before <code>@overload</code> was invented typing and lowering had to be computed and registered separately",
  "id": "5d5130b31db76d0ffeba6b93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:26:11.324Z",
  "text": "before `@overload` was invented typing and lowering had to be computed and registered separately",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "So if you see an implementation that is decorated with <code>@lower_*</code>, then the typing implementation is likely to be somewhere in <code>numba::typing</code>",
  "id": "5d5130e4d03a7c63e612aec5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:27:00.386Z",
  "text": "So if you see an implementation that is decorated with `@lower_*`, then the typing implementation is likely to be somewhere in `numba::typing`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "can <code>overload</code> do evertying that <code>lower</code> does? I thought <code>overload</code> might be a more user-friendly but less powerful option.",
  "id": "5d5131cd1dadc42a1157893a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:30:53.871Z",
  "text": "can `overload` do evertying that `lower` does? I thought `overload` might be a more user-friendly but less powerful option.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If there&#39;s a use case which cannot be resolved with <code>@overload</code> and <code>@intrinsic</code> then I&#39;d be interested to know, because they were designed to handle the vast majority of cases. In practice, we have written some pretty complicated things with them lately and found very few places where <code>@lower_*</code> etc was needed  (typed dict, typed list, all the CPython hash replication stuff,  unicode string stupport).",
  "id": "5d5132eb029a51607f7d17dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:35:39.009Z",
  "text": "If there's a use case which cannot be resolved with `@overload` and `@intrinsic` then I'd be interested to know, because they were designed to handle the vast majority of cases. In practice, we have written some pretty complicated things with them lately and found very few places where `@lower_*` etc was needed  (typed dict, typed list, all the CPython hash replication stuff,  unicode string stupport).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I would like to implement <code>mean</code> as a function of <code>sum</code> but for that I need <code>sum</code> to accept <code>dtype</code>. Do you think it&#39;s doable to make the change in the user-visible function? Or only in the internal <code>_impl</code> version? I am asking because there are no examples of numpy functions accepting <code>dtype</code> in numba, so I wonder if there&#39;s some fundamental block on that",
  "id": "5d51346b2612bb718c52efda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:42:03.688Z",
  "text": "I would like to implement `mean` as a function of `sum` but for that I need `sum` to accept `dtype`. Do you think it's doable to make the change in the user-visible function? Or only in the internal `_impl` version? I am asking because there are no examples of numpy functions accepting `dtype` in numba, so I wonder if there's some fundamental block on that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "lets wind back a bit :) Why does <code>mean</code> need <code>sum</code> to accept dtype?",
  "id": "5d5135b2bfd2887f53d45a8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:47:30.168Z",
  "text": "lets wind back a bit :) Why does `mean` need `sum` to accept dtype?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "is this to get a <code>float64</code> accumulator for int inputs ?",
  "id": "5d5135d69507182477c44654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:48:06.501Z",
  "text": "is this to get a `float64` accumulator for int inputs ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "yes",
  "id": "5d5135fdd03a7c63e612d08f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-12T09:48:45.469Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "the current implementation of <code>mean</code> uses its own accumulator in order to avoid <code>sum</code>, but it feels redundant to extend the logic to accept <code>axis</code> when that was already done for sum.",
  "id": "5d513650029a51607f7d307c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-12T09:50:08.177Z",
  "text": "the current implementation of `mean` uses its own accumulator in order to avoid `sum`, but it feels redundant to extend the logic to accept `axis` when that was already done for sum.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m sure there was a ticket about this but I can&#39;t find it.",
  "id": "5d5136772612bb718c52fe02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-12T09:50:47.488Z",
  "text": "I'm sure there was a ticket about this but I can't find it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4220\" class=\"issue\">#4220</a> for dtype in sum?",
  "id": "5d5136f1beba830fff7b5bbb",
  "issues": [
   {
    "number": "4220"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-12T09:52:49.759Z",
  "text": "#4220 for dtype in sum?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-08-12T09:56:23.867Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Essentially I think the following needs to happen... 1. <code>sum</code> needs to be implemented as a factory function that is really flexible and accepts things like <code>dtype</code> for accumulators, a summation method like {<code>naive</code>, <code>pairwise</code>, <code>kahan</code> etc} and <code>axis</code>. 2. The <code>np.sum</code> stuff needs rewriting as an <code>@overload</code> that calls the factory function so that the NumPy semantics are reproduced. 3. <code>np.mean</code> can also use the factory function.",
  "id": "5d51375d4e17537f5219b3d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-12T09:54:37.154Z",
  "text": "Essentially I think the following needs to happen... 1. `sum` needs to be implemented as a factory function that is really flexible and accepts things like `dtype` for accumulators, a summation method like {`naive`, `pairwise`, `kahan` etc} and `axis`. 2. The `np.sum` stuff needs rewriting as an `@overload` that calls the factory function so that the NumPy semantics are reproduced. 3. `np.mean` can also use the factory function.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "To do it without doing the above is likely going to be fragile, but the method would essentially involve extending the typing information in <code>arraydecl.py</code> to accept a <code>dtype</code> kwarg, then parse that and add it to the signature, and then in the lowered implementation propagate this information into the accumulator.",
  "id": "5d51391abeba830fff7b70b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-12T10:02:02.766Z",
  "text": "To do it without doing the above is likely going to be fragile, but the method would essentially involve extending the typing information in `arraydecl.py` to accept a `dtype` kwarg, then parse that and add it to the signature, and then in the lowered implementation propagate this information into the accumulator.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4259\" href=\"https://github.com/numba/numba/issues/4259\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#4259</a>",
  "id": "5d5139361dadc42a1157be0e",
  "issues": [
   {
    "number": "4259",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-12T10:02:30.318Z",
  "text": "https://github.com/numba/numba/issues/4259",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4258\" href=\"https://github.com/numba/numba/issues/4258\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#4258</a>",
  "id": "5d51393e2612bb718c531245",
  "issues": [
   {
    "number": "4258",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-12T10:02:38.282Z",
  "text": "https://github.com/numba/numba/issues/4258",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Those are the issue stubs, we talked at some length about this in the core developer meetings.",
  "id": "5d513950beba830fff7b731d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-12T10:02:56.755Z",
  "text": "Those are the issue stubs, we talked at some length about this in the core developer meetings.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "oh, I see this was after our first convo on the topic on 28 may, I didn&#39;t know the core devs had discussed it",
  "id": "5d513db74e17537f5219dce2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-12T10:21:43.095Z",
  "text": "oh, I see this was after our first convo on the topic on 28 may, I didn't know the core devs had discussed it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://github.com/numba/numba/wiki/Minutes_2019_06_25\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/wiki/Minutes_2019_06_25</a>",
  "id": "5d513e7290bba62a1260a680",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-12T10:24:50.430Z",
  "text": "https://github.com/numba/numba/wiki/Minutes_2019_06_25",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/wiki/Minutes_2019_06_25"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I can do 3. and maybe 2., but 1. probably not without some (a lot?) of help",
  "id": "5d513e8e5178a724767331b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-12T10:25:18.189Z",
  "text": "I can do 3. and maybe 2., but 1. probably not without some (a lot?) of help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "what if I start by trying to move <code>sum</code> and <code>mean</code>to overload without any further changes first? could that be a bit valuable in itself and get me some experience on what&#39;s going on there?",
  "id": "5d513fa09507182477c486e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-12T10:29:52.497Z",
  "text": "what if I start by trying to move `sum` and `mean`to overload without any further changes first? could that be a bit valuable in itself and get me some experience on what's going on there?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If you have the time, then I think that&#39;d be a good starting point, especially if you want to learn more about Numba internals.",
  "id": "5d513fff029a51607f7d7a77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-12T10:31:27.375Z",
  "text": "If you have the time, then I think that'd be a good starting point, especially if you want to learn more about Numba internals.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I don&#39;t have much time tbh, so if you guys need it fast, I don&#39;t want to stand in the way, especially on point 1. I am sure that after 1. and 2. are done I can do 3 quickly and even throw in <code>np.std</code>and <code>np.var</code>",
  "id": "5d5141564e17537f5219f331",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-12T10:37:10.168Z",
  "text": "I don't have much time tbh, so if you guys need it fast, I don't want to stand in the way, especially on point 1. I am sure that after 1. and 2. are done I can do 3 quickly and even throw in `np.std`and `np.var`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I can put a couple hours per weekend and sometimes an hour in the evening, not much more",
  "id": "5d5141ad53490e334dda387e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-12T10:38:37.427Z",
  "text": "I can put a couple hours per weekend and sometimes an hour in the evening, not much more",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It&#39;s entirely up to you, this ticket and a PR I started on rewriting <code>sum</code> internals (<a target=\"_blank\" data-link-type=\"pr\" data-issue=\"3046\" href=\"https://github.com/numba/numba/pull/3046\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#3046</a>) has been open a while, it&#39;s quite an involved task so I&#39;d expect it&#39;ll take some time to get right. Perhaps just try propagating the <code>dtype</code> into the current impl, it&#39;ll end up getting rewritten eventually but might be quicker and would also probably highlight issues that may arise in doing so? There&#39;s also other tickets if you&#39;d like to contribute something else, and also (as I think you are aware) <code>numba-scipy</code> <a href=\"https://github.com/numba/numba-scipy\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba-scipy</a> that&#39;s accepting PRs.",
  "id": "5d5142f87d56bc60803cba1f",
  "issues": [
   {
    "number": "3046",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-12T10:44:08.380Z",
  "text": "It's entirely up to you, this ticket and a PR I started on rewriting `sum` internals (https://github.com/numba/numba/pull/3046) has been open a while, it's quite an involved task so I'd expect it'll take some time to get right. Perhaps just try propagating the `dtype` into the current impl, it'll end up getting rewritten eventually but might be quicker and would also probably highlight issues that may arise in doing so? There's also other tickets if you'd like to contribute something else, and also (as I think you are aware) `numba-scipy` https://github.com/numba/numba-scipy that's accepting PRs.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba-scipy"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-08-12T11:05:22.352Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "ok, maybe I&#39;ll try adding <code>dtype</code> to the current implementation. I&#39;d love to jump on numba-scipy, but I&#39;d like to work on the stats part and I need <code>specials</code>to be done first.",
  "id": "5d5147ddbeba830fff7bd775",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-12T11:05:01.516Z",
  "text": "ok, maybe I'll try adding `dtype` to the current implementation. I'd love to jump on numba-scipy, but I'd like to work on the stats part and I need `specials`to be done first.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , I started work on adding <code>dtype</code> to the current implementation of <code>np.sum</code> in <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4472\" class=\"issue\">#4472</a>. however, I get an error that I can&#39;t track the source of.  </p><pre><code><span class=\"string\">TypeError:</span> Failed <span class=\"keyword\">in</span> nopython mode pipeline (<span class=\"string\">step:</span> analyzing bytecode)\nSignature <span class=\"string\">mismatch:</span> <span class=\"number\">2</span> argument types given, but function takes <span class=\"number\">1</span> arguments</code></pre><p>where&#39;s the number of arguments determined? I copied the implementation from <code>np.sum(arr, axis)</code> so I didn&#39;t expect an error about the number of arguments. What else do I need to change?</p>",
  "id": "5d5cf9b5d45f7c26fa096363",
  "issues": [
   {
    "number": "4472"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T07:58:45.347Z",
  "text": "@stuartarchibald , I started work on adding `dtype` to the current implementation of `np.sum` in #4472. however, I get an error that I can't track the source of.  \n``` \nTypeError: Failed in nopython mode pipeline (step: analyzing bytecode)\nSignature mismatch: 2 argument types given, but function takes 1 arguments\n```\nwhere's the number of arguments determined? I copied the implementation from `np.sum(arr, axis)` so I didn't expect an error about the number of arguments. What else do I need to change?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> hmmm, that&#39;s a bit weird. Am wondering if there&#39;s some generated code expecting one thing and two have been presented. If you can push your code to a branch (or open a WIP PR) I&#39;ll take a look.",
  "id": "5d5d0ff46ddc404fbce6eade",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T09:33:40.907Z",
  "text": "@luk-f-a hmmm, that's a bit weird. Am wondering if there's some generated code expecting one thing and two have been presented. If you can push your code to a branch (or open a WIP PR) I'll take a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> it&#39;s in <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4472\" class=\"issue\">#4472</a> ",
  "id": "5d5d1043c8a85a44c23ad9c4",
  "issues": [
   {
    "number": "4472"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T09:34:59.347Z",
  "text": "@stuartarchibald it's in #4472 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks :) somehow missed that.",
  "id": "5d5d117cfa99e74f6a66a498",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T09:40:12.234Z",
  "text": "thanks :) somehow missed that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> the issue is here: <a href=\"https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R651-R654\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R651-R654</a>",
  "id": "5d5d145586c1a96ad50c2c8e",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T09:52:21.659Z",
  "text": "@luk-f-a the issue is here: https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R651-R654",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R651-R654"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it needs to be more like <a href=\"https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647</a>",
  "id": "5d5d14915ba4a84f69648ead",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T09:53:21.144Z",
  "text": "it needs to be more like https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "i.e., the return type needs computing based on the <code>self.this.ndim</code>",
  "id": "5d5d14afb059db27dfb481c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-21T09:53:51.354Z",
  "text": "i.e., the return type needs computing based on the `self.this.ndim`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m slightly unconvinced by the args/kws bindings here too.",
  "id": "5d5d14fdb059db27dfb48304",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T09:55:09.843Z",
  "text": "I'm slightly unconvinced by the args/kws bindings here too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , thanks for looking at it. At the moment I&#39;m starting <code>np.sum</code> with <code>dtype</code> but without <code>axis</code>, so the return type is a scalar as in the case <code>args_len == 0</code>, that&#39;s why I copied the signature of that case. The error message is related to the number of arguments, not to the return type.",
  "id": "5d5d1eda25764a3642d368e0",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:37:14.854Z",
  "text": "@stuartarchibald , thanks for looking at it. At the moment I'm starting `np.sum` with `dtype` but without `axis`, so the return type is a scalar as in the case `args_len == 0`, that's why I copied the signature of that case. The error message is related to the number of arguments, not to the return type.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m passing <code>signature(_expand_integer(dtype), *args, recvr=self.this)</code> with <code>len(args)==1</code>, but it complains that it&#39;s receiving 2 arguments. is the second argument the array itself? Even if I call it as <code>arr.sum(dtype=np.float64)</code>?",
  "id": "5d5d1f2ed45f7c26fa0a63ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:38:38.674Z",
  "text": "I'm passing `signature(_expand_integer(dtype), *args, recvr=self.this)` with `len(args)==1`, but it complains that it's receiving 2 arguments. is the second argument the array itself? Even if I call it as `arr.sum(dtype=np.float64)`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the first argument is the array itself, i.e. <code>self</code>",
  "id": "5d5d20575ba4a84f6964da60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:43:35.255Z",
  "text": "I think the first argument is the array itself, i.e. `self`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "the check that fails is here : <a href=\"https://github.com/numba/numba/blob/f629736997eaf83040caecd1fea7322577b7fd89/numba/compiler.py#L415\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/blob/f629736997eaf83040caecd1fea7322577b7fd89/numba/compiler.py#L415</a>",
  "id": "5d5d21987e160727e081ee62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:48:56.926Z",
  "text": "the check that fails is here : https://github.com/numba/numba/blob/f629736997eaf83040caecd1fea7322577b7fd89/numba/compiler.py#L415",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/f629736997eaf83040caecd1fea7322577b7fd89/numba/compiler.py#L415"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, I ran this locally and fixed up the code to be more like <a href=\"https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647</a> ",
  "id": "5d5d21f179229b63d99544bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:50:25.308Z",
  "text": "yeah, I ran this locally and fixed up the code to be more like https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647 ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4472/files#diff-7efa237a0406240ad8523ad2443fa960R639-R647"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which let the compiler get through to lowering, which then broke, because there&#39;s other issues",
  "id": "5d5d220e25764a3642d37f51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:50:54.761Z",
  "text": "which let the compiler get through to lowering, which then broke, because there's other issues",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m wondering if it&#39;d be easier to just start with this as an <code>@overload</code> ?",
  "id": "5d5d223367969726f93b0bbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:51:31.574Z",
  "text": "I'm wondering if it'd be easier to just start with this as an `@overload` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "honestly, I don&#39;t know. how much would <code>array_sum_impl_axis</code> be affected? can it be re-used with <code>@overload</code>?",
  "id": "5d5d231525764a3642d38621",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-21T10:55:17.273Z",
  "text": "honestly, I don't know. how much would `array_sum_impl_axis` be affected? can it be re-used with `@overload`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "found the problem! in <code>numba/targets/arraymath.py</code> I had to change <code>def array_sum_impl(arr):</code> for <code>def array_sum_impl(arr, dtype):</code> this is where <code>self.nargs</code> comes from.",
  "id": "5d5d264267969726f93b27d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-21T11:08:50.467Z",
  "text": "found the problem! in `numba/targets/arraymath.py` I had to change `def array_sum_impl(arr):` for `def array_sum_impl(arr, dtype):` this is where `self.nargs` comes from.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well done :)",
  "id": "5d5d2685142faa4fbd43c30c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-21T11:09:57.497Z",
  "text": "well done :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it passes the tests for the basic case: <code>sum(arr, dtype)</code> is possible now. Would anyone have time to look at what I did before I implement <code>sum(arr, axis, dtype)</code>?",
  "id": "5d5d283e5ba4a84f6965103e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-21T11:17:18.779Z",
  "text": "it passes the tests for the basic case: `sum(arr, dtype)` is possible now. Would anyone have time to look at what I did before I implement `sum(arr, axis, dtype)`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it doesn&#39;t have to be today. but it makes for someone to look at it before I continue along that line",
  "id": "5d5d2c4ec8a85a44c23ba272",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-21T11:34:38.209Z",
  "text": "it doesn't have to be today. but it makes for someone to look at it before I continue along that line",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> sure, please could you comment on the PR asking for someone to take a look, thanks.",
  "id": "5d5d37706ddc404fbce80fec",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-21T12:22:08.259Z",
  "text": "@luk-f-a sure, please could you comment on the PR asking for someone to take a look, thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I&#39;m having an issue compiling numba on my Mac",
  "id": "5d5d91b930ae9930d83df321",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-21T18:47:21.324Z",
  "text": "I'm having an issue compiling numba on my Mac",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<pre><code>compile <span class=\"string\">options:</span> <span class=\"string\">'-I/Users/aaronmeurer/anaconda3/include/python3.6m -c'</span>\nextra <span class=\"string\">options:</span> <span class=\"string\">'-fopenmp -std=c++11'</span>\n<span class=\"string\">gcc:</span> numba<span class=\"regexp\">/npyufunc/</span>omppool.cpp\n<span class=\"string\">gcc:</span> numba<span class=\"regexp\">/npyufunc/</span>gufunc_scheduler.cpp\n<span class=\"string\">clang:</span> <span class=\"string\">error:</span> unsupported option <span class=\"string\">'-fopenmp'</span>\n<span class=\"string\">clang:</span> <span class=\"string\">error:</span> unsupported option <span class=\"string\">'-fopenmp'</span>\n<span class=\"string\">error:</span> Command <span class=\"string\">\"gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/Users/aaronmeurer/anaconda3/include -arch x86_64 -I/Users/aaronmeurer/anaconda3/include -arch x86_64 -I/Users/aaronmeurer/anaconda3/include/python3.6m -c numba/npyufunc/omppool.cpp -o build/temp.macosx-10.7-x86_64-3.6/numba/npyufunc/omppool.o -fopenmp -std=c++11\"</span> failed with exit status <span class=\"number\">1</span></code></pre>",
  "id": "5d5d91c230ae9930d83df323",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-21T18:47:30.723Z",
  "text": "```\ncompile options: '-I/Users/aaronmeurer/anaconda3/include/python3.6m -c'\nextra options: '-fopenmp -std=c++11'\ngcc: numba/npyufunc/omppool.cpp\ngcc: numba/npyufunc/gufunc_scheduler.cpp\nclang: error: unsupported option '-fopenmp'\nclang: error: unsupported option '-fopenmp'\nerror: Command \"gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/Users/aaronmeurer/anaconda3/include -arch x86_64 -I/Users/aaronmeurer/anaconda3/include -arch x86_64 -I/Users/aaronmeurer/anaconda3/include/python3.6m -c numba/npyufunc/omppool.cpp -o build/temp.macosx-10.7-x86_64-3.6/numba/npyufunc/omppool.o -fopenmp -std=c++11\" failed with exit status 1\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I tried updating the conda openmp package but that doesn&#39;t fix it ",
  "id": "5d5d91d5f3c2c17e1fb4f293",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-21T18:47:49.940Z",
  "text": "I tried updating the conda openmp package but that doesn't fix it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "you\u2019ll need the compiler package: <code>conda install clang_osx-64 clangxx_osx-64</code>",
  "id": "5d5e8b9b7e160727e08bba93",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-22T12:33:31.335Z",
  "text": "you\u2019ll need the compiler package: `conda install clang_osx-64 clangxx_osx-64`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> ^",
  "id": "5d5e8bafd45f7c26fa147c54",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-22T12:33:51.607Z",
  "text": "@asmeurer ^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "see the weird thing is, I have never had this issue.",
  "id": "5d5e8e39fa99e74f6a70ca41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T12:44:41.288Z",
  "text": "see the weird thing is, I have never had this issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "new laptop vs old?",
  "id": "5d5e8e5125764a3642dd437c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-08-22T12:45:05.136Z",
  "text": "new laptop vs old?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "I&#39;ve only had one so far",
  "id": "5d5e8e59c508da44c360e934",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:45:13.806Z",
  "text": "I've only had one so far",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "maybe the OSX version?",
  "id": "5d5e8e6467969726f944e458",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:45:24.836Z",
  "text": "maybe the OSX version?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "mine is still running High Sierra",
  "id": "5d5e8e657e160727e08bce61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:45:25.252Z",
  "text": "mine is still running High Sierra",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "Oh, I am on Mojave",
  "id": "5d5e8e7779229b63d99f12f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:45:43.584Z",
  "text": "Oh, I am on Mojave",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "and can\u2019t upgrade because of lack of GPU support in Mojave",
  "id": "5d5e8e7c6ddc404fbcf1603e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:45:48.472Z",
  "text": "and can\u2019t upgrade because of lack of GPU support in Mojave",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "would a linux laptop help?",
  "id": "5d5e8eb4142faa4fbd4d8a88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:46:44.616Z",
  "text": "would a linux laptop help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "for me, I want one with a CUDA GPU and hopefully the power brick is not too bulky",
  "id": "5d5e8f4179229b63d99f1941",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:49:05.868Z",
  "text": "for me, I want one with a CUDA GPU and hopefully the power brick is not too bulky",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "that&#39;s probably doable as long as you don&#39;t go for a mobile RTX GPU :)",
  "id": "5d5e8f7086c1a96ad5162366",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:49:52.503Z",
  "text": "that's probably doable as long as you don't go for a mobile RTX GPU :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i\u2019m eyeing on one with a NVIDIA GeForce RTX 2060",
  "id": "5d5e8f897e160727e08bd527",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:50:17.047Z",
  "text": "i\u2019m eyeing on one with a NVIDIA GeForce RTX 2060",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "otherwise, I would just carry a bunch of jetson nano",
  "id": "5d5e8fa6c508da44c360f531",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:50:46.819Z",
  "text": "otherwise, I would just carry a bunch of jetson nano",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/seibert",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/425352?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/425352?v=4&s=60",
   "displayName": "Stan Seibert",
   "gv": "4",
   "id": "55b68af40fc9f982beab2a3c",
   "url": "/seibert",
   "username": "seibert",
   "v": 7
  },
  "html": "Aside from difficult conversations at airports, I&#39;m really taken with the homebrew carved wooden laptop.  :)",
  "id": "5d5e8fceb059db27dfbed527",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:51:26.032Z",
  "text": "Aside from difficult conversations at airports, I'm really taken with the homebrew carved wooden laptop.  :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "well, as long as there are no wires or PCBs showing, you can claim it is artisanal hardware, right? ",
  "id": "5d5e916ac508da44c36103aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:58:18.190Z",
  "text": "well, as long as there are no wires or PCBs showing, you can claim it is artisanal hardware, right? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "wires or pcb showing will always be considered a bomb-threat at airports",
  "id": "5d5e917fc8a85a44c2455072",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:58:39.727Z",
  "text": "wires or pcb showing will always be considered a bomb-threat at airports",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "mainly because that is what bombs look like in movies",
  "id": "5d5e918a6ddc404fbcf17740",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:58:50.197Z",
  "text": "mainly because that is what bombs look like in movies",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": ":bomb: :bomb: :bomb: ",
  "id": "5d5e91907d3c1636411e3e6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-22T12:58:56.678Z",
  "text": ":bomb: :bomb: :bomb: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I installed those packages and I&#39;m still getting the error ",
  "id": "5d5ee9ddeb0c2d3e3d4f323c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:15:41.971Z",
  "text": "I installed those packages and I'm still getting the error ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> if you restart your terminal session, go back into the environment and do <code>echo &quot;int main(void){};&quot;|$CC -fopenmp -x c -</code> what do you get ?",
  "id": "5d5ef1eafa99e74f6a7390fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:50:02.895Z",
  "text": "@asmeurer if you restart your terminal session, go back into the environment and do `echo \"int main(void){};\"|$CC -fopenmp -x c -` what do you get ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "My $CC is not set. Is that the problem? ",
  "id": "5d5ef21c64b0a63bf4530005",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:50:52.003Z",
  "text": "My $CC is not set. Is that the problem? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Is this one of those conda packages that only works if you activate the environment its installed in? ",
  "id": "5d5ef23464b0a63bf4530007",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:51:16.201Z",
  "text": "Is this one of those conda packages that only works if you activate the environment its installed in? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah yeah",
  "id": "5d5ef2ebb059db27dfc1b885",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:54:19.077Z",
  "text": "ah yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;ll most likely be it",
  "id": "5d5ef2f379229b63d9a1ed76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:54:27.525Z",
  "text": "that'll most likely be it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "when you <code>conda activate</code> it&#39;ll set up $CC etc for you",
  "id": "5d5ef2fffa99e74f6a7399ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:54:39.701Z",
  "text": "when you `conda activate` it'll set up $CC etc for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Let me see if I can figure out what all the build dependencies are and make a separate environment ",
  "id": "5d5ef31ed6e36a63a60b7569",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-22T19:55:10.258Z",
  "text": "Let me see if I can figure out what all the build dependencies are and make a separate environment ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If you want to set everything manually, the toolchain stuff is <code>bin/x86_64-apple-*</code>",
  "id": "5d5ef34c5ba4a84f6971aadf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-22T19:55:56.269Z",
  "text": "If you want to set everything manually, the toolchain stuff is `bin/x86_64-apple-*`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<code>ld: library not found for -liomp5</code>",
  "id": "5d5ef35ceb0c2d3e3d4f3250",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-22T19:56:12.860Z",
  "text": "`ld: library not found for -liomp5`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "What package am I missing for that? ",
  "id": "5d5ef3613d9ebd30a81a3b7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-22T19:56:17.798Z",
  "text": "What package am I missing for that? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I guess it&#39;s intel-openmp ",
  "id": "5d5ef387db83b36549d79880",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-22T19:56:55.760Z",
  "text": "I guess it's intel-openmp ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "You need <code>llvm-openmp</code> and <code>intel-openmp</code>",
  "id": "5d5ef3917e160727e08e9a77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-22T19:57:05.304Z",
  "text": "You need `llvm-openmp` and `intel-openmp`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "one has headers that permit compilation, the other has the RTLs for linking",
  "id": "5d5ef3b3c8a85a44c24808c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:57:39.586Z",
  "text": "one has headers that permit compilation, the other has the RTLs for linking",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Ok it works now thanks ",
  "id": "5d5ef3f9db83b36549d79882",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:58:49.316Z",
  "text": "Ok it works now thanks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "np",
  "id": "5d5ef40386c1a96ad518f841",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:58:59.991Z",
  "text": "np",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I decided Linux was too painful to work in so I went back to my Mac. Although if I ever need to touch the GPU stuff I&#39;ll have to go back to Linux ",
  "id": "5d5ef438db83b36549d79884",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T19:59:52.543Z",
  "text": "I decided Linux was too painful to work in so I went back to my Mac. Although if I ever need to touch the GPU stuff I'll have to go back to Linux ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think this is  because <code>setup.py</code> looks for <code>lib/clang/*/include/omp.h</code> to see if clang has OpenMP support, so I guess that checked passed because you&#39;d installed the compiler packages, but because you didn&#39;t activate them the clang in use didn&#39;t have <code>-fopenmp</code>, hence OpenMP was selected as a valid target but the compiler in use didn&#39;t support it",
  "id": "5d5ef4b986c1a96ad518fd1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T20:02:01.356Z",
  "text": "I think this is  because `setup.py` looks for `lib/clang/*/include/omp.h` to see if clang has OpenMP support, so I guess that checked passed because you'd installed the compiler packages, but because you didn't activate them the clang in use didn't have `-fopenmp`, hence OpenMP was selected as a valid target but the compiler in use didn't support it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I use linux all the time, was it painful from a Numba dev point of view  ?",
  "id": "5d5ef4e5b059db27dfc1c53d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-08-22T20:02:45.880Z",
  "text": "I use linux all the time, was it painful from a Numba dev point of view  ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "No numba specific stuff is easier if anything on linux (like there were no build issues like these). I&#39;m mostly talking about the pain of day to day stuff. On Mac you have iTerm2 and stuff like lack of ubiquitous emacs bindings and the keyboard shortcut for &quot;copy&quot; being context sensitive were driving me insane ",
  "id": "5d5f10f53d9ebd30a81a3ba3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-22T22:02:29.213Z",
  "text": "No numba specific stuff is easier if anything on linux (like there were no build issues like these). I'm mostly talking about the pain of day to day stuff. On Mac you have iTerm2 and stuff like lack of ubiquitous emacs bindings and the keyboard shortcut for \"copy\" being context sensitive were driving me insane ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , are you around? do you have time for a question?",
  "id": "5d663d0307d1ff39f898beab",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T08:36:19.289Z",
  "text": "@stuartarchibald , are you around? do you have time for a question?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> I am now... go for it :)",
  "id": "5d667a4710bb5d2db085f5ed",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T12:57:43.994Z",
  "text": "@luk-f-a I am now... go for it :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I pushed a version of <code>np.sum</code> with dtype and axis. There&#39;s a duplication of code between <code>sum(axis)</code> and <code>sum(axis, dtype)</code> that I cannot figure out how to avoid because Numba requires the signature of the inner function <code>array_sum_impl_axis</code>to be different (to have or not have <code>dtype</code>appropriately).",
  "id": "5d667b6fc8228962acdbbbff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:02:39.456Z",
  "text": "I pushed a version of `np.sum` with dtype and axis. There's a duplication of code between `sum(axis)` and `sum(axis, dtype)` that I cannot figure out how to avoid because Numba requires the signature of the inner function `array_sum_impl_axis`to be different (to have or not have `dtype`appropriately).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it&#39;s 70 lines of duplicated code, I would normally not push that, but I just cannot figure out how to extract it and have one one version",
  "id": "5d667ba135f914538d9e2516",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:03:29.711Z",
  "text": "it's 70 lines of duplicated code, I would normally not push that, but I just cannot figure out how to extract it and have one one version",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "option a) since this code is supposed to be temporary, we live with the duplication, option b) since there&#39;s nothing as permanent as a temporary solution we try not to have the duplication, but I would welcome any ideas",
  "id": "5d667be5e403470ab6ef6fad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:04:37.679Z",
  "text": "option a) since this code is supposed to be temporary, we live with the duplication, option b) since there's nothing as permanent as a temporary solution we try not to have the duplication, but I would welcome any ideas",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ah I see, ok, I&#39;ll take a look",
  "id": "5d667c6335f914538d9e29a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:06:43.454Z",
  "text": "ah I see, ok, I'll take a look",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks",
  "id": "5d667c81c8228962acdbc2b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:07:13.672Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<a href=\"https://github.com/numba/numba/pull/4472/commits/ee11c3dd285cd90a2b043e0e94ef0f08db3d8ef2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/4472/commits/ee11c3dd285cd90a2b043e0e94ef0f08db3d8ef2</a>",
  "id": "5d667ccc49ac051923c6cc30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:08:28.566Z",
  "text": "https://github.com/numba/numba/pull/4472/commits/ee11c3dd285cd90a2b043e0e94ef0f08db3d8ef2",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4472/commits/ee11c3dd285cd90a2b043e0e94ef0f08db3d8ef2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "is this because its a duplicate of the code that handles solely axis  ?",
  "id": "5d667d0449ac051923c6cd31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:09:24.435Z",
  "text": "is this because its a duplicate of the code that handles solely axis  ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "that whole thing is identical to the old, axis only implementation, but with <code>array_sum_impl_axis(arr, axis, dtype)</code> in the middle.",
  "id": "5d667d093c1aba311be73316",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:09:29.291Z",
  "text": "that whole thing is identical to the old, axis only implementation, but with `array_sum_impl_axis(arr, axis, dtype)` in the middle.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>is this because its a duplicate of the code that handles solely axis  ?</p></blockquote>\n<p>yes</p>",
  "id": "5d667d1449ac051923c6cdb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:09:40.068Z",
  "text": "> is this because its a duplicate of the code that handles solely axis  ?\n\nyes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I cannot merge them because Numba reads that signature  to validate the input parameters",
  "id": "5d667d3bf2821072aa2b4b97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-28T13:10:19.202Z",
  "text": "I cannot merge them because Numba reads that signature  to validate the input parameters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<code>dtype</code> is not even needed in that function, because the return type comes via <code>sig</code>. ",
  "id": "5d667d69c8228962acdbc78d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-28T13:11:05.967Z",
  "text": "`dtype` is not even needed in that function, because the return type comes via `sig`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well... this is going to be fun :)",
  "id": "5d667f23c8228962acdbd45a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-28T13:18:27.630Z",
  "text": "well... this is going to be fun :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "just working out if it can be generated",
  "id": "5d667f35f2821072aa2b5ada",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-28T13:18:45.165Z",
  "text": "just working out if it can be generated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> does this help: <a href=\"https://github.com/numba/numba/commit/8a78bf16b2ac8ada1c06c5f690828953211ad263\" target=\"_blank\" data-link-type=\"commit\" data-provider=\"github\" data-commit-sha=\"8a78bf16b2ac8ada1c06c5f690828953211ad263\" data-commit-repo=\"numba/numba\" class=\"commit\">numba/numba@8a78bf1</a>",
  "id": "5d6684af07d1ff39f89ac52a",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-08-28T13:42:07.773Z",
  "text": "@luk-f-a does this help: https://github.com/numba/numba/commit/8a78bf16b2ac8ada1c06c5f690828953211ad263",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "basically, close over the implementation with the consts to create a specialized function, register it as a compilable function, then just call that from something with the right signature for the compile_internal call",
  "id": "5d66850dc8228962acdbfff4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T13:43:41.169Z",
  "text": "basically, close over the implementation with the consts to create a specialized function, register it as a compilable function, then just call that from something with the right signature for the compile_internal call",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "nice!",
  "id": "5d669a87a080d70ab597aa33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T15:15:19.557Z",
  "text": "nice!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "a function that makes a function that makes a compiled function :-) ",
  "id": "5d669ad0a498b67237af23a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T15:16:32.712Z",
  "text": "a function that makes a function that makes a compiled function :-) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "welcome to Numba :D",
  "id": "5d669c4b9b381b084f0d0955",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T15:22:51.888Z",
  "text": "welcome to Numba :D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "This also is in part why changing this to be simpler is probably something to work on soon !",
  "id": "5d66a2bca080d70ab597ef5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T15:50:20.085Z",
  "text": "This also is in part why changing this to be simpler is probably something to work on soon !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "+1 on that",
  "id": "5d66aee0be3a8a311a01c4fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T16:42:08.519Z",
  "text": "+1 on that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I can cherry pick your commit into my branch, right? ",
  "id": "5d66afd69b381b084f0db5ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T16:46:14.944Z",
  "text": "I can cherry pick your commit into my branch, right? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "you&#39;re welcome to",
  "id": "5d66afea49ac051923c86dfd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T16:46:34.121Z",
  "text": "you're welcome to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "patch applied! I think you just became the only person that can safely touch <code>np.sum</code> haha. I get why you asked me for an exceptionally good set of tests. I&#39;ll get working on those later this week",
  "id": "5d66b3339b381b084f0dd5b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T17:00:35.770Z",
  "text": "patch applied! I think you just became the only person that can safely touch `np.sum` haha. I get why you asked me for an exceptionally good set of tests. I'll get working on those later this week",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Great, thanks! Part of my desire to refactor <code>np.sum</code> is to make it more accessible. There&#39;s a lot of the code base like this from a time when the extension API didn&#39;t exist.",
  "id": "5d66b3e83770ed0cbda44813",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T17:03:36.813Z",
  "text": "Great, thanks! Part of my desire to refactor `np.sum` is to make it more accessible. There's a lot of the code base like this from a time when the extension API didn't exist.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Is there a way to switch the python/numpy version used by the conda environment?",
  "id": "5d66b81ba080d70ab598a4da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T17:21:31.327Z",
  "text": "Is there a way to switch the python/numpy version used by the conda environment?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "probably not within the same environment, but it&#39;s easy to create a new conda environment with a different python version (and the same packages as the old one)",
  "id": "5d66d5423770ed0cbda54b0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-08-28T19:25:54.409Z",
  "text": "probably not within the same environment, but it's easy to create a new conda environment with a different python version (and the same packages as the old one)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span>  have you tried <code>conda install python=3.5 numpy=1.11</code>  for example?",
  "id": "5d693641b4d82940749fddf6",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-08-30T14:44:17.994Z",
  "text": "@guilhermeleobas  have you tried `conda install python=3.5 numpy=1.11`  for example?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Yeah, I just created another environment ",
  "id": "5d693a7f8b7327421dc247f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-08-30T15:02:23.859Z",
  "text": "Yeah, I just created another environment ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>, you mentioned that Numba provides a lot of Numpy support without jitclasses, but it seems that Scipy relies more extensively on classes that Numpy. What&#39;s a good way forward? Should I keep implementing SciPy.stats and opening issues?  I don&#39;t want to be the annoying guy that opens 100 issues on jitclasses, but if I keep to a naive, straightforward port of the original code, I&#39;ll keep bumping into these things. Do you think <code>numba-scipy</code> should rely more on multiple dispatch via <code>overload</code>?",
  "id": "5d6ce1b7b4d8294074b93137",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 1,
  "sent": "2019-09-02T09:32:39.331Z",
  "text": "hi @stuartarchibald, you mentioned that Numba provides a lot of Numpy support without jitclasses, but it seems that Scipy relies more extensively on classes that Numpy. What's a good way forward? Should I keep implementing SciPy.stats and opening issues?  I don't want to be the annoying guy that opens 100 issues on jitclasses, but if I keep to a naive, straightforward port of the original code, I'll keep bumping into these things. Do you think `numba-scipy` should rely more on multiple dispatch via `overload`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Bit of history... <code>jitclass</code> was/is an experiment to see if/how Numba could have class support (hence massive disclaimer at the top of the docs <a href=\"http://numba.pydata.org/numba-doc/latest/user/jitclass.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/latest/user/jitclass.html</a>). Turns out there&#39;s a huge number of non-trivial things to solve to handle classes more fully, so <code>jitclass</code> is likely to get a rewrite once 1.0 is out.",
  "id": "5d6ce3035b9a174fdf20a42e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-09-02T09:38:11.008Z",
  "text": "Bit of history... `jitclass` was/is an experiment to see if/how Numba could have class support (hence massive disclaimer at the top of the docs http://numba.pydata.org/numba-doc/latest/user/jitclass.html). Turns out there's a huge number of non-trivial things to solve to handle classes more fully, so `jitclass` is likely to get a rewrite once 1.0 is out.",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/latest/user/jitclass.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Numba internals are somewhat pragmatic about doing the things necessary to provide functionality. Whilst it&#39;d be great to be able to just pull in some classes from SciPy and compile them, that&#39;s unlikely to work very often and may end up with more contrived code that just writing the same as functions. Further, there&#39;s likely going to be large sections of SciPy class based implementations that cannot be implemented as their type information cannot be statically determined at compile time.",
  "id": "5d6ce38238499c13a6880658",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 2,
  "sent": "2019-09-02T09:40:18.100Z",
  "text": "Numba internals are somewhat pragmatic about doing the things necessary to provide functionality. Whilst it'd be great to be able to just pull in some classes from SciPy and compile them, that's unlikely to work very often and may end up with more contrived code that just writing the same as functions. Further, there's likely going to be large sections of SciPy class based implementations that cannot be implemented as their type information cannot be statically determined at compile time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Basically, I&#39;m of the view that whilst there&#39;s merit in trying out new ways to add support in <code>numba-scipy</code>, it may be faster and cleaner to do what is known to work. There&#39;s also that <code>numba-scipy</code> internals don&#39;t have to be written like SciPy, we have an entire compiler framework available to do code generation and optimisation at a level that just cannot be done without it and it&#39;s a great tool to have an lean on.",
  "id": "5d6ce4365b9a174fdf20aede",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:43:18.907Z",
  "text": "Basically, I'm of the view that whilst there's merit in trying out new ways to add support in `numba-scipy`, it may be faster and cleaner to do what is known to work. There's also that `numba-scipy` internals don't have to be written like SciPy, we have an entire compiler framework available to do code generation and optimisation at a level that just cannot be done without it and it's a great tool to have an lean on.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Also, feel free to open tickets RE jitclass, knowing limitations/problems will help inform future work on them!",
  "id": "5d6ce4692efeca1df5395067",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:44:09.448Z",
  "text": "Also, feel free to open tickets RE jitclass, knowing limitations/problems will help inform future work on them!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "so far as I assumed the methods would need to be re-written to ensure all types can be inferred, and also assumed that (as with Numpy) not all arguments would be available (like <code>out</code> or <code>axis</code> in numpy)",
  "id": "5d6ce4a97b263a4c9c98dc27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:45:13.867Z",
  "text": "so far as I assumed the methods would need to be re-written to ensure all types can be inferred, and also assumed that (as with Numpy) not all arguments would be available (like `out` or `axis` in numpy)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "however, to move away from the class based implementation might mean changing the API in some cases",
  "id": "5d6ce4f32efeca1df53955a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:46:27.862Z",
  "text": "however, to move away from the class based implementation might mean changing the API in some cases",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "anything that does not carry state can be easily converted into a function, but if the API allows something like <code>object.set_parameters()</code> and then <code>object.run_calculation()</code> it&#39;s impossible to emulate with pure functions.",
  "id": "5d6ce58eb596011df4eb5496",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:49:02.722Z",
  "text": "anything that does not carry state can be easily converted into a function, but if the API allows something like `object.set_parameters()` and then `object.run_calculation()` it's impossible to emulate with pure functions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "an interesting experiment could be to attempt a purely function-based implementation of scipy",
  "id": "5d6ce635d3fda15e745062bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:51:49.062Z",
  "text": "an interesting experiment could be to attempt a purely function-based implementation of scipy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-02T09:52:48.356Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, I think perhaps the thing to do is find an example that is both commonly used and small of &quot;setting&quot; state, open an issue and we&#39;ll have a think about how to handle it?",
  "id": "5d6ce6560d4b1f5d889f9805",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:52:22.001Z",
  "text": "ok, I think perhaps the thing to do is find an example that is both commonly used and small of \"setting\" state, open an issue and we'll have a think about how to handle it?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "one such example is <code>seed</code> (an input parameter to every <code>stats</code> class). each instance is allowed to carry its own <code>randomstate</code> which is seeded from that parameter. It&#39;s not a must have, but it&#39;s an example.",
  "id": "5d6ce76138499c13a68823d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T09:56:49.531Z",
  "text": "one such example is `seed` (an input parameter to every `stats` class). each instance is allowed to carry its own `randomstate` which is seeded from that parameter. It's not a must have, but it's an example.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I see, <code>scipy.stats.rv_continuous</code> looks like it could mostly be supported on construction",
  "id": "5d6ce82d8b7327421ddbc918",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:00:13.215Z",
  "text": "I see, `scipy.stats.rv_continuous` looks like it could mostly be supported on construction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I think where Scipy did things differently to Numpy, is that in Numpy the <code>ndarray</code> is practically all what matters. Most of the API are methods of <code>ndarray</code>or functions that accept <code>ndarray</code>. But in Scipy.stats <code>rv_continuous</code> holds all common methods, but the key methods need to be implemented for each distribution (normal, lognormal, etc) individually. So they use classes both for state, and for inheritance. Such that new distributions only need to specify a few methods and then inherit the &quot;infrastructure&quot;",
  "id": "5d6cea29b596011df4eb760d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:08:41.506Z",
  "text": "I think where Scipy did things differently to Numpy, is that in Numpy the `ndarray` is practically all what matters. Most of the API are methods of `ndarray`or functions that accept `ndarray`. But in Scipy.stats `rv_continuous` holds all common methods, but the key methods need to be implemented for each distribution (normal, lognormal, etc) individually. So they use classes both for state, and for inheritance. Such that new distributions only need to specify a few methods and then inherit the \"infrastructure\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "That could be implemented with multiple dispatch, but we would have to create type classes for each distribution, right?",
  "id": "5d6ceaa138499c13a6883c00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:10:41.767Z",
  "text": "That could be implemented with multiple dispatch, but we would have to create type classes for each distribution, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, the sparse stuff is a bit like this too",
  "id": "5d6ced4e8b7327421ddbefa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:22:06.330Z",
  "text": "yeah, the sparse stuff is a bit like this too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "what I&#39;ve done there is basically the second thing you talk about",
  "id": "5d6cedb5418f705d877c15f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:23:49.564Z",
  "text": "what I've done there is basically the second thing you talk about",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve extended the type system etc",
  "id": "5d6cedc438499c13a68853f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:24:04.624Z",
  "text": "I've extended the type system etc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "this also makes it easier to box/unbox",
  "id": "5d6cedd238499c13a68853fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:24:18.898Z",
  "text": "this also makes it easier to box/unbox",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I have no problem with that in principle, but how easy is to extend the type system?",
  "id": "5d6cef388066a3407337331d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:30:16.316Z",
  "text": "I have no problem with that in principle, but how easy is to extend the type system?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I don&#39;t think it&#39;s documented like <code>overload</code> so always assumed it was a bit &quot;out of bounds&quot; for casual devs like me",
  "id": "5d6cef6338499c13a6886036",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:30:59.036Z",
  "text": "I don't think it's documented like `overload` so always assumed it was a bit \"out of bounds\" for casual devs like me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It&#39;s not hugely difficult, <a href=\"http://numba.pydata.org/numba-doc/dev/extending/interval-example.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://numba.pydata.org/numba-doc/dev/extending/interval-example.html</a>",
  "id": "5d6cef7db596011df4eb9f85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:31:25.574Z",
  "text": "It's not hugely difficult, http://numba.pydata.org/numba-doc/dev/extending/interval-example.html",
  "unread": false,
  "urls": [
   {
    "url": "http://numba.pydata.org/numba-doc/dev/extending/interval-example.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "but you are heading into more challenging things",
  "id": "5d6cef93375cc34fdeff5459",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:31:47.187Z",
  "text": "but you are heading into more challenging things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it looks like fun to do once, to learn how things work in the background, but there are 120 distributions in stats . It will very hard to attract contributors. It&#39;s a bit too deep into Numba for the casual  guy that wants to give something back to the project.",
  "id": "5d6cf132d3fda15e7450b243",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:38:42.106Z",
  "text": "it looks like fun to do once, to learn how things work in the background, but there are 120 distributions in stats . It will very hard to attract contributors. It's a bit too deep into Numba for the casual  guy that wants to give something back to the project.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ll take a look at it, I expect the compiler can be made to do most of the work, its just working out how to do that.",
  "id": "5d6cf46cb596011df4ebc36f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:52:28.706Z",
  "text": "I'll take a look at it, I expect the compiler can be made to do most of the work, its just working out how to do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I completely agree RE ease of contribution, what in part makes <code>numba-scipy</code> exciting is that it&#39;s a testing ground for extensibility, if there&#39;s a problem doing something that&#39;s really common, it hints at regions in Numba that need improvement or, indeed, better docs/examples/patterns on how to do these things.",
  "id": "5d6cf4cd8b7327421ddc2435",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T10:54:05.215Z",
  "text": "I completely agree RE ease of contribution, what in part makes `numba-scipy` exciting is that it's a testing ground for extensibility, if there's a problem doing something that's really common, it hints at regions in Numba that need improvement or, indeed, better docs/examples/patterns on how to do these things.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m happy to keep playing around with <code>numba-scipy</code>, implementing things and raising issues as long as it&#39;s ok for you guys. Last week I tried to be methodical and document well what feature of <code>numba-scipy</code> requires each issue I raised. If you realize that some thing can be implemented with existing functionality, then even better.",
  "id": "5d6cfb1638499c13a688b5b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-09-02T11:20:54.631Z",
  "text": "I'm happy to keep playing around with `numba-scipy`, implementing things and raising issues as long as it's ok for you guys. Last week I tried to be methodical and document well what feature of `numba-scipy` requires each issue I raised. If you realize that some thing can be implemented with existing functionality, then even better.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "More than happy for you to just play with stuff and report issues, it&#39;s helpful to know where there&#39;s problems.",
  "id": "5d6cfdf40d4b1f5d88a04dc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T11:33:08.381Z",
  "text": "More than happy for you to just play with stuff and report issues, it's helpful to know where there's problems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ve just taken a look at <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.html#scipy.stats.rv_continuous\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.html#scipy.stats.rv_continuous</a>",
  "id": "5d6cfe0238499c13a688cbb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T11:33:22.714Z",
  "text": "I've just taken a look at https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.html#scipy.stats.rv_continuous",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.html#scipy.stats.rv_continuous"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "seems like there needs to be a type/datamodel for <code>rv_continuous</code> and then some way of basically plumbing in functions listed under &quot;Methods that can be overwritten by subclasses&quot;",
  "id": "5d6cfe7e5b9a174fdf2178a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T11:35:26.780Z",
  "text": "seems like there needs to be a type/datamodel for `rv_continuous` and then some way of basically plumbing in functions listed under \"Methods that can be overwritten by subclasses\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Would guess that most of the effort will be writing each of those methods for a particular distribution, the extension and plumbing can just be done through code generation.",
  "id": "5d6cff1729dba2421ced8f1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T11:37:59.766Z",
  "text": "Would guess that most of the effort will be writing each of those methods for a particular distribution, the extension and plumbing can just be done through code generation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "just to be clear, when I said &quot;playing around&quot;, I meant it more in the sense of &quot;exploring what&#39;s doable&quot; without being able to commit to &quot;implement stuff whatever it takes&quot;. I didn&#39;t mean that I would not take it seriously.",
  "id": "5d6cffa25c4d6813a5491041",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T11:40:18.490Z",
  "text": "just to be clear, when I said \"playing around\", I meant it more in the sense of \"exploring what's doable\" without being able to commit to \"implement stuff whatever it takes\". I didn't mean that I would not take it seriously.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "RE type for <code>rv_continuous</code>, from my limited perspective, jitclasses are not THAT far today from what&#39;s needed. But if you spotted a better way forward, then I&#39;m very open to that too",
  "id": "5d6cfff729dba2421ced9823",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T11:41:43.911Z",
  "text": "RE type for `rv_continuous`, from my limited perspective, jitclasses are not THAT far today from what's needed. But if you spotted a better way forward, then I'm very open to that too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "right now I think the <code>kwargs</code>problem is kind of a major issue, followed by things like the <code>isinstance</code> issue, the lack of <code>__call__</code> and (maybe because I haven&#39;t tried) how well <code>overload_method</code>works with jitclasses.",
  "id": "5d6d0090375cc34fdeffd5bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T11:44:16.298Z",
  "text": "right now I think the `kwargs`problem is kind of a major issue, followed by things like the `isinstance` issue, the lack of `__call__` and (maybe because I haven't tried) how well `overload_method`works with jitclasses.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, and then I&#39;m also not sure how it&#39;ll interact with the type system and moving data from cpython and back again (box/unbox).",
  "id": "5d6d029d5c4d6813a5492a8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T11:53:01.759Z",
  "text": "yeah, and then I'm also not sure how it'll interact with the type system and moving data from cpython and back again (box/unbox).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I imagine it&#39;s not unreasonable for someone to want to pass a distribution instance to a user defined function, or indeed return one?",
  "id": "5d6d02fb5c4d6813a5492e54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T11:54:35.252Z",
  "text": "I imagine it's not unreasonable for someone to want to pass a distribution instance to a user defined function, or indeed return one?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> am I right in thinking that none of the <code>rv_continuous</code> subclasses define their own constructors ?",
  "id": "5d6d054738499c13a6890616",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T12:04:23.823Z",
  "text": "@luk-f-a am I right in thinking that none of the `rv_continuous` subclasses define their own constructors ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which implies that they have a single data model, that of <code>rv_continuous</code>. It also seems like most of the overridden methods are pretty simple and self contained.",
  "id": "5d6d05925b9a174fdf21adef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T12:05:38.201Z",
  "text": "which implies that they have a single data model, that of `rv_continuous`. It also seems like most of the overridden methods are pretty simple and self contained.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it seems than none of the distributions define their own constructors. However, <code>rv_histogram</code> which is also a subclass of <code>rv_continuous</code>, does implement its own constructor.",
  "id": "5d6d2bbb8066a3407338f91e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T14:48:27.299Z",
  "text": "it seems than none of the distributions define their own constructors. However, `rv_histogram` which is also a subclass of `rv_continuous`, does implement its own constructor.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>I imagine it&#39;s not unreasonable for someone to want to pass a distribution instance to a user defined function, or indeed return one?</p></blockquote>\n<p>it&#39;s not unreasonable, probably many people would want to, but due to <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"3249\" class=\"issue\">#3249</a> (and <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4499\" class=\"issue\">#4499</a>) it would be dangerous</p>",
  "id": "5d6d2cacb156cd5e75c9284c",
  "issues": [
   {
    "number": "3249"
   },
   {
    "number": "4499"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T14:52:28.662Z",
  "text": "> I imagine it's not unreasonable for someone to want to pass a distribution instance to a user defined function, or indeed return one?\n\nit's not unreasonable, probably many people would want to, but due to #3249 (and #4499) it would be dangerous",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-02T15:20:09.787Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Right, then I think the fastest way to get this going is via code gen. Fundamentally the <code>rv_continuous</code> class is a the base <code>numba.Type</code> for all these distributions, the data model for it is entirely reusable across these distributions and it seems like the methods which are overridden in subclasses are sparsely defined and could just be jit functions. So having a generator that consumes the <code>rv_continuous</code> subclass, a string for the type system entry (which can just be autogenerated), and then a dict of <code>method name: impl</code>, which is then walked and <code>@overload_method</code>&#39;d onto the type system entry, would likely suffice. Add some decorators to make it easy to registers stuff and then anyone can implement one of these 120 functions!",
  "id": "5d6d32fe375cc34fde0157de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T15:19:26.440Z",
  "text": "Right, then I think the fastest way to get this going is via code gen. Fundamentally the `rv_continuous` class is a the base `numba.Type` for all these distributions, the data model for it is entirely reusable across these distributions and it seems like the methods which are overridden in subclasses are sparsely defined and could just be jit functions. So having a generator that consumes the `rv_continuous` subclass, a string for the type system entry (which can just be autogenerated), and then a dict of `method name: impl`, which is then walked and `@overload_method`'d onto the type system entry, would likely suffice. Add some decorators to make it easy to registers stuff and then anyone can implement one of these 120 functions!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "simples :smile: ",
  "id": "5d6d376138499c13a68a8c81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:38:09.213Z",
  "text": "simples :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Would you be interested in having a go? If not, when I next get a few hours I&#39;ll hack something together as a starting point ?",
  "id": "5d6d37aab4d8294074bbd63a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:39:22.128Z",
  "text": "Would you be interested in having a go? If not, when I next get a few hours I'll hack something together as a starting point ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "From there there&#39;ll just be a whole lot of implementation and testing!",
  "id": "5d6d37bc418f705d877e67cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:39:40.566Z",
  "text": "From there there'll just be a whole lot of implementation and testing!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "is all that simpler than adding **kwargs to <code>jitclass</code>? it must be really tough then",
  "id": "5d6d3858375cc34fde01766a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:42:16.243Z",
  "text": "is all that simpler than adding **kwargs to `jitclass`? it must be really tough then",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "since <code>njit</code> accepts kwargs, I thought it would quick to add it to jitclasses",
  "id": "5d6d38732efeca1df53bd7f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:42:43.712Z",
  "text": "since `njit` accepts kwargs, I thought it would quick to add it to jitclasses",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "jit doesn&#39;t accept <code>**kwargs</code>, it accepts specific named kwargs",
  "id": "5d6d3895b156cd5e75c98df0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:43:17.878Z",
  "text": "jit doesn't accept `**kwargs`, it accepts specific named kwargs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "sorry, that&#39;s what I meant",
  "id": "5d6d38b60d4b1f5d88a219cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:43:50.361Z",
  "text": "sorry, that's what I meant",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and I&#39;m just thinking, suppose we did make <code>**kwargs</code> or some thing like that work, what does that get us ?",
  "id": "5d6d38c3fda04e4c9d5e5c3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:44:03.102Z",
  "text": "and I'm just thinking, suppose we did make `**kwargs` or some thing like that work, what does that get us ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it gets us to a point where we can make a jitclass as a data store ?",
  "id": "5d6d38ea5c4d6813a54ac0ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:44:42.588Z",
  "text": "it gets us to a point where we can make a jitclass as a data store ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and dangle some methods off it",
  "id": "5d6d38f6375cc34fde017a64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:44:54.351Z",
  "text": "and dangle some methods off it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "some scipy methods use <code>**kwargs</code>but I was planning to work around that. I meant to accept named kwargs",
  "id": "5d6d391a8066a34073395c4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:45:30.998Z",
  "text": "some scipy methods use `**kwargs`but I was planning to work around that. I meant to accept named kwargs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "There&#39;s still a load of stuff missing, like, the type system needs to know about all this stuff, and how to resolve it. There needs to be a way to box/unbox.",
  "id": "5d6d393f5b9a174fdf233527",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:46:07.687Z",
  "text": "There's still a load of stuff missing, like, the type system needs to know about all this stuff, and how to resolve it. There needs to be a way to box/unbox.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m just not sure it really gains a lot yet.",
  "id": "5d6d3973375cc34fde017eaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:46:59.340Z",
  "text": "I'm just not sure it really gains a lot yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>and I&#39;m just thinking, suppose we did make <code>**kwargs</code> or some thing like that work, what does that get us ?</p></blockquote>\n<p>it gets us Python compatible behaviour for classes, and it gets us extensibility without having to know Numba internals.</p>",
  "id": "5d6d39c7375cc34fde0180ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:48:23.235Z",
  "text": "> and I'm just thinking, suppose we did make `**kwargs` or some thing like that work, what does that get us ?\n\nit gets us Python compatible behaviour for classes, and it gets us extensibility without having to know Numba internals.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>There&#39;s still a load of stuff missing, like, the type system needs to know about all this stuff, and how to resolve it. There needs to be a way to box/unbox.</p></blockquote>\n<p>I thought jitclasses are boxed/unboxed automatically, isn&#39;t the mechanism already there?</p>",
  "id": "5d6d39e8d3fda15e7452cfda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:48:56.654Z",
  "text": "> There's still a load of stuff missing, like, the type system needs to know about all this stuff, and how to resolve it. There needs to be a way to box/unbox.\n\nI thought jitclasses are boxed/unboxed automatically, isn't the mechanism already there?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well, it gets something like class behaviour, jitclasses are basically c-structs with methods bound to them underneath, and yes not needing to know numba internals would be great, but this is really just using an extension API, there&#39;s no using internal things",
  "id": "5d6d3ac60d4b1f5d88a228c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:52:38.243Z",
  "text": "well, it gets something like class behaviour, jitclasses are basically c-structs with methods bound to them underneath, and yes not needing to know numba internals would be great, but this is really just using an extension API, there's no using internal things",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "jitclass are boxed/unboxed automatically, but how does Numba know what they are?",
  "id": "5d6d3ae37b263a4c9c9b7c18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:53:07.214Z",
  "text": "jitclass are boxed/unboxed automatically, but how does Numba know what they are?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and how does Numba know what to do when a user passes in a <code>rv_continuous</code> instance ?",
  "id": "5d6d3b042efeca1df53be9ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:53:40.176Z",
  "text": "and how does Numba know what to do when a user passes in a `rv_continuous` instance ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I think it&#39;s about the syntax on that extension API, to be as familiar as possible. could it be expressed as normal classes with a decorator? You said we would need a &quot; generator that consumes the rv_continuous subclass, a string for the type system entry (which can just be autogenerated), and then a dict of method name: impl&quot;. A python class is basically a dictionary of &quot;method_name&quot;-&gt;&quot;impl&quot;, its name is the string  you mentioned, so could a class decorator perform that task on a normal python class?",
  "id": "5d6d3be5b4d8294074bbf73d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T15:57:25.267Z",
  "text": "I think it's about the syntax on that extension API, to be as familiar as possible. could it be expressed as normal classes with a decorator? You said we would need a \" generator that consumes the rv_continuous subclass, a string for the type system entry (which can just be autogenerated), and then a dict of method name: impl\". A python class is basically a dictionary of \"method_name\"->\"impl\", its name is the string  you mentioned, so could a class decorator perform that task on a normal python class?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that might be ok if the methods on the class are <code>@staticmethod</code>.",
  "id": "5d6d3c945c4d6813a54adcde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:00:20.674Z",
  "text": "I think that might be ok if the methods on the class are `@staticmethod`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "This discussion is basically why it&#39;s useful <code>numba-scipy</code> exists, because it&#39;s helps inform advice given to other library authors and to make changes to make it easier to do stuff, so thanks for thinking about this BTW!",
  "id": "5d6d3cc1fda04e4c9d5e7cba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:01:05.705Z",
  "text": "This discussion is basically why it's useful `numba-scipy` exists, because it's helps inform advice given to other library authors and to make changes to make it easier to do stuff, so thanks for thinking about this BTW!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "another perspective is, and it&#39;s totally your call, but something to consider: an improvement to <code>jitclass</code> makes Numba in general more useful, but a type class for <code>rv_continuous</code>is only limited to <code>numba-scipy.stats</code>, not even <code>numba-scipy</code> in general.",
  "id": "5d6d3cee7b263a4c9c9b86d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:01:50.850Z",
  "text": "another perspective is, and it's totally your call, but something to consider: an improvement to `jitclass` makes Numba in general more useful, but a type class for `rv_continuous`is only limited to `numba-scipy.stats`, not even `numba-scipy` in general.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>This discussion is basically why it&#39;s useful <code>numba-scipy</code> exists, because it&#39;s helps inform advice given to other library authors and to make changes to make it easier to do stuff, so thanks for thinking about this BTW!</p></blockquote>\n<p>for what my limited experience can be worth, you&#39;re welcome :smile: I agree, this discussions are very valuable to get insight into what happens when someone attempts to create &quot;Numba native&quot; libraries, which goes beyond just using Numba. There&#39;s a big difference. Maybe it&#39;s something too early to aspire to pre-1.0, but for a true Numba ecosystem to grow, there must be Numba native libraries, those providing code I can use within jitted code.</p>",
  "id": "5d6d3e35b156cd5e75c9ba51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T16:07:17.745Z",
  "text": "> This discussion is basically why it's useful `numba-scipy` exists, because it's helps inform advice given to other library authors and to make changes to make it easier to do stuff, so thanks for thinking about this BTW!\n\nfor what my limited experience can be worth, you're welcome :smile: I agree, this discussions are very valuable to get insight into what happens when someone attempts to create \"Numba native\" libraries, which goes beyond just using Numba. There's a big difference. Maybe it's something too early to aspire to pre-1.0, but for a true Numba ecosystem to grow, there must be Numba native libraries, those providing code I can use within jitted code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "maybe we should distinguish between the goals of making scipy faster and making it usable within jitted code. The first is easier to solve, because it&#39;s &quot;only&quot; about jitting python loops. Having scipy objects available within jitted code seems like a bigger task, involving class types, boxing/unboxing, etc etc.",
  "id": "5d6d3ef3d3fda15e7452f04d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T16:10:27.022Z",
  "text": "maybe we should distinguish between the goals of making scipy faster and making it usable within jitted code. The first is easier to solve, because it's \"only\" about jitting python loops. Having scipy objects available within jitted code seems like a bigger task, involving class types, boxing/unboxing, etc etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I am just not convinced <code>jitclass</code> is up to it right now (but am happy for it to be proven other wise), and I don&#39;t particularly think it&#39;s worth spending time fixing something that fundamentally needs a redesign (as noted here <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2187\" href=\"https://github.com/numba/numba/issues/2187\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2187</a>) and the associated bugs, I&#39;ll speak with <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> tomorrow about it. I&#39;m also unconvinced it&#39;ll work on a technical level, I don&#39;t know how we&#39;d unpack a <code>rv_continuous</code> into a jitclass instance without going through boxing twice, once to create the jitclass instance, once to rewire that in LLVM struct, same for the reverse (we probably can, it&#39;s just not obvious). The type information has to be created and wired in either way, so users can just write <code>scipy.stats.whatever</code> in <code>njit</code> code and Numba knows what to do. I think this fundamentally is just saying &quot;do we want to use the proven datamodel + <code>@overload</code> approach to handle the POD+Methods OR do we want to use jitclass&quot;.",
  "id": "5d6d415d418f705d877eaee4",
  "issues": [
   {
    "number": "2187",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T16:20:45.609Z",
  "text": "I am just not convinced `jitclass` is up to it right now (but am happy for it to be proven other wise), and I don't particularly think it's worth spending time fixing something that fundamentally needs a redesign (as noted here https://github.com/numba/numba/issues/2187) and the associated bugs, I'll speak with @sklam tomorrow about it. I'm also unconvinced it'll work on a technical level, I don't know how we'd unpack a `rv_continuous` into a jitclass instance without going through boxing twice, once to create the jitclass instance, once to rewire that in LLVM struct, same for the reverse (we probably can, it's just not obvious). The type information has to be created and wired in either way, so users can just write `scipy.stats.whatever` in `njit` code and Numba knows what to do. I think this fundamentally is just saying \"do we want to use the proven datamodel + `@overload` approach to handle the POD+Methods OR do we want to use jitclass\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "you obviously have more visibility into the technical issues down the road, I only see the more immediate. I  have a very naive view of what it means to pursue the jitclass way. But in terms of user motivation, my guess is that unfamiliar syntax will scare people away. On the other hand, &quot;a normal python class plus a decorator&quot; plays more into the Numba promise of &quot;it&#39;s just a python function plus a decorator&quot;.",
  "id": "5d6d451db596011df4ee36c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T16:36:45.021Z",
  "text": "you obviously have more visibility into the technical issues down the road, I only see the more immediate. I  have a very naive view of what it means to pursue the jitclass way. But in terms of user motivation, my guess is that unfamiliar syntax will scare people away. On the other hand, \"a normal python class plus a decorator\" plays more into the Numba promise of \"it's just a python function plus a decorator\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-02T16:51:49.294Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "if you don&#39;t mind to explain it, there&#39;s something that you can see but I don&#39;t yet: you said that &quot;The type information has to be created and wired in either way, so users can just write scipy.stats.whatever in njit code and Numba knows what to do&quot;. But afaik Numba does know what to do with a jitclass. I created <code>norm</code> as an example and it works as expected, from interpreted code and from jitted code (except for the kwargs problem). <code>rv_continuous</code>is never instantiated, only <code>norm_gen</code>is, does that help? From my limited perspective the boxing, unpacking and rewiring that you mention are already solved for the jitclass. Is it a future problem that you are anticipating? Something that works now but will not work once I try to do something more complex?",
  "id": "5d6d4818b4d8294074bc4cec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T16:49:28.595Z",
  "text": "if you don't mind to explain it, there's something that you can see but I don't yet: you said that \"The type information has to be created and wired in either way, so users can just write scipy.stats.whatever in njit code and Numba knows what to do\". But afaik Numba does know what to do with a jitclass. I created `norm` as an example and it works as expected, from interpreted code and from jitted code (except for the kwargs problem). `rv_continuous`is never instantiated, only `norm_gen`is, does that help? From my limited perspective the boxing, unpacking and rewiring that you mention are already solved for the jitclass. Is it a future problem that you are anticipating? Something that works now but will not work once I try to do something more complex?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "sorry for taking your time with this, I&#39;m just curious. ",
  "id": "5d6d4925b156cd5e75ca07f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:53:57.891Z",
  "text": "sorry for taking your time with this, I'm just curious. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Consider how this would work:<pre><code><span class=\"keyword\">from</span> scipy.stats <span class=\"keyword\">import</span> norm\n<span class=\"keyword\">from</span> numba <span class=\"keyword\">import</span> njit\n\n<span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">()</span>:</span>\n    <span class=\"keyword\">return</span> norm(size=<span class=\"number\">10</span>)\n\nfoo()</code></pre>",
  "id": "5d6d49b5b4d8294074bc5aa7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:56:21.746Z",
  "text": "Consider how this would work:\n```\nfrom scipy.stats import norm\nfrom numba import njit\n\n@njit\ndef foo():\n    return norm(size=10)\n\nfoo()\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "except for the size kwarg problem, I think it works at the moment. I am pretty sure I have code running that.",
  "id": "5d6d49f3b156cd5e75ca0fc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:57:23.776Z",
  "text": "except for the size kwarg problem, I think it works at the moment. I am pretty sure I have code running that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Are you sure it&#39;s running precisely that and not something where you import a <code>norm</code>-like things from <code>numba-scipy</code> ?",
  "id": "5d6d4a182efeca1df53c6268",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:58:00.949Z",
  "text": "Are you sure it's running precisely that and not something where you import a `norm`-like things from `numba-scipy` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "oh, sorry, I didn&#39;t pay attention to the first line",
  "id": "5d6d4a332efeca1df53c62a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:58:27.848Z",
  "text": "oh, sorry, I didn't pay attention to the first line",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "yes, I&#39;m importing from <code>numba-scipy</code>",
  "id": "5d6d4a49418f705d877eef20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:58:49.253Z",
  "text": "yes, I'm importing from `numba-scipy`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "right, because I expect you have no type information registered",
  "id": "5d6d4a7bfda04e4c9d5eed28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T16:59:39.366Z",
  "text": "right, because I expect you have no type information registered",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Numba doesn&#39;t know how to type a <code>scipy.stats.norm</code>",
  "id": "5d6d4a900d4b1f5d88a29652",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T17:00:00.817Z",
  "text": "Numba doesn't know how to type a `scipy.stats.norm`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "no, I assumed users wouldn&#39;t mind replacing the import line.",
  "id": "5d6d4a937b263a4c9c9bedbe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T17:00:03.392Z",
  "text": "no, I assumed users wouldn't mind replacing the import line.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it&#39;s like dask telling people to replace arrays with dask arrays.",
  "id": "5d6d4aaab596011df4ee591a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T17:00:26.174Z",
  "text": "it's like dask telling people to replace arrays with dask arrays.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "this kind of goes against numba&#39;s philosophy, because it can work seamlessly without users altering code",
  "id": "5d6d4ad18b7327421ddea905",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T17:01:05.638Z",
  "text": "this kind of goes against numba's philosophy, because it can work seamlessly without users altering code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "sure, but in practice users have to change certain things because not every python syntax/object is supported. As a user, believe me, changing one import line would be the least of my problems.",
  "id": "5d6d4b7a418f705d877ef739",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T17:03:54.537Z",
  "text": "sure, but in practice users have to change certain things because not every python syntax/object is supported. As a user, believe me, changing one import line would be the least of my problems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes, but they can always go back to not using jit",
  "id": "5d6d4bf538499c13a68b2955",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T17:05:57.170Z",
  "text": "yes, but they can always go back to not using jit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "but their  <code>numba-scipy</code>code would still work without jit. ",
  "id": "5d6d4c39b596011df4ee64ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-09-02T17:07:05.461Z",
  "text": "but their  `numba-scipy`code would still work without jit. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "and that&#39;s really important",
  "id": "5d6d4c3a8b7327421ddeb2d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:07:06.105Z",
  "text": "and that's really important",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it wouldn&#39;t if you force use of jitclass",
  "id": "5d6d4c4c8b7327421ddeb367",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:07:24.434Z",
  "text": "it wouldn't if you force use of jitclass",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-02T17:07:39.364Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "unless you again change the imported stuff",
  "id": "5d6d4c540d4b1f5d88a2a3ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:07:32.062Z",
  "text": "unless you again change the imported stuff",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I see your point. to switch numba off, one must remove the decorator. You are saying, removing the decorator should also restore plain scipy. I&#39;m saying, there would be one switch for numba (removing the decorator) and one switch for numba-scipy (the import line). Is that a good summary?",
  "id": "5d6d4cd4b4d8294074bc75ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:09:40.116Z",
  "text": "I see your point. to switch numba off, one must remove the decorator. You are saying, removing the decorator should also restore plain scipy. I'm saying, there would be one switch for numba (removing the decorator) and one switch for numba-scipy (the import line). Is that a good summary?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think so",
  "id": "5d6d4cfb29dba2421cefed77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:10:19.610Z",
  "text": "I think so",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "what if someone wants to use numba-scipy from interpreted code?",
  "id": "5d6d4d1f8b7327421ddeb98c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:10:55.900Z",
  "text": "what if someone wants to use numba-scipy from interpreted code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "then use scipy",
  "id": "5d6d4d28d3fda15e745354fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:11:04.791Z",
  "text": "then use scipy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "you get perfect jit-elision",
  "id": "5d6d4d330d4b1f5d88a2ab1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:11:15.522Z",
  "text": "you get perfect jit-elision",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it&#39;s either all on, or all off",
  "id": "5d6d4d3bd3fda15e74535590",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:11:23.973Z",
  "text": "it's either all on, or all off",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "ok, now I get it. It&#39;s different from how I pictured it would work.",
  "id": "5d6d4da4b596011df4ee6f68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-09-02T17:13:08.912Z",
  "text": "ok, now I get it. It's different from how I pictured it would work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "were you hoping for a mixed-mode world ?",
  "id": "5d6d4dbf5c4d6813a54b55af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-09-02T17:13:35.326Z",
  "text": "were you hoping for a mixed-mode world ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I don&#39;t know if hoping is the right word, I assumed it would be like dask arrays. An API compatible object, that works better. ",
  "id": "5d6d4e115b9a174fdf23d44f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-02T17:14:57.129Z",
  "text": "I don't know if hoping is the right word, I assumed it would be like dask arrays. An API compatible object, that works better. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it works better in interpreted mode (via jitting python loops), and on top of that, it works within jitted code.",
  "id": "5d6d4e3b418f705d877f0ac9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-02T17:15:39.585Z",
  "text": "it works better in interpreted mode (via jitting python loops), and on top of that, it works within jitted code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "if the first use case is not relevant, then I fully see your point about making it seamless (no changed imports).",
  "id": "5d6d4e7229dba2421ceffb71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-02T17:16:34.806Z",
  "text": "if the first use case is not relevant, then I fully see your point about making it seamless (no changed imports).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I guess it depends on how much of scipy is written in python vs written in cython/c/fortran.",
  "id": "5d6d4ea238499c13a68b3e95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-02T17:17:22.745Z",
  "text": "I guess it depends on how much of scipy is written in python vs written in cython/c/fortran.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the problem with all this is where and how, e.g. should <code>scipy.special.FOO</code> have a <code>numba-scipy</code> jit equivalent ufunc that works in the interpreter, should a <code>scipy.sparse.csr_matrix</code> (or whatever it is) have a <code>jitclass</code> equivalent that works in the interpreter, how does the data get into it, how does it relate to the scipy data, can you use it with e.g. <code>scipy.optimize</code> as an input etc? Whereas &quot;it&#39;s on or off&quot; is pretty easy to reason about and optimize.",
  "id": "5d6d4ea7418f705d877f0d97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-02T17:17:27.919Z",
  "text": "the problem with all this is where and how, e.g. should `scipy.special.FOO` have a `numba-scipy` jit equivalent ufunc that works in the interpreter, should a `scipy.sparse.csr_matrix` (or whatever it is) have a `jitclass` equivalent that works in the interpreter, how does the data get into it, how does it relate to the scipy data, can you use it with e.g. `scipy.optimize` as an input etc? Whereas \"it's on or off\" is pretty easy to reason about and optimize.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ll have a chat with the other core devs tomorrow in our weekly meeting and raise some of this stuff, it&#39;s important, so thanks for raising it!",
  "id": "5d6d4f32375cc34fde021757",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-02T17:19:46.546Z",
  "text": "I'll have a chat with the other core devs tomorrow in our weekly meeting and raise some of this stuff, it's important, so thanks for raising it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "what about the typed <code>Dict</code> and <code>List</code>? doesn&#39;t it break this pattern? in sense my version of <code>norm</code> is like <code>Dict</code>, more of a &quot;want this object in jitted code? use our version and not the original&quot;",
  "id": "5d6d4f46b4d8294074bc8580",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-02T17:20:06.933Z",
  "text": "what about the typed `Dict` and `List`? doesn't it break this pattern? in sense my version of `norm` is like `Dict`, more of a \"want this object in jitted code? use our version and not the original\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>I&#39;ll have a chat with the other core devs tomorrow in our weekly meeting and raise some of this stuff, it&#39;s important, so thanks for raising it!</p></blockquote>\n<p>thanks for taking the time to explain, I fully get your concerns now. Talk to other guys, you&#39;re a clever bunch, I&#39;m sure you&#39;ll come up with something.</p>",
  "id": "5d6d4fc95b9a174fdf23deb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-02T17:22:17.932Z",
  "text": "> I'll have a chat with the other core devs tomorrow in our weekly meeting and raise some of this stuff, it's important, so thanks for raising it!\n\nthanks for taking the time to explain, I fully get your concerns now. Talk to other guys, you're a clever bunch, I'm sure you'll come up with something.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Typed containers are slightly different in that we had years of battle trying to get reflection to work consistently, and eventually concluded that it was almost impossible to do correctly. These typed containers are the result and enable things that would not otherwise be possible. There&#39;s also been considerable care put in to make sure that they look and behave like CPython containers, but with the necessary restrictions. It was not a decision taken lightly and I think is one of only a handful of places where numba does something &quot;different&quot;.",
  "id": "5d6d608d8066a340733a7cba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-02T18:33:49.583Z",
  "text": "Typed containers are slightly different in that we had years of battle trying to get reflection to work consistently, and eventually concluded that it was almost impossible to do correctly. These typed containers are the result and enable things that would not otherwise be possible. There's also been considerable care put in to make sure that they look and behave like CPython containers, but with the necessary restrictions. It was not a decision taken lightly and I think is one of only a handful of places where numba does something \"different\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks again for the explanation and your time today, I learned a lot about Numba!",
  "id": "5d6d77b4b596011df4efa3e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-02T20:12:36.827Z",
  "text": "thanks again for the explanation and your time today, I learned a lot about Numba!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> no problem, thanks for the input!",
  "id": "5d6d8f0a38499c13a68cf602",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-02T21:52:10.067Z",
  "text": "@luk-f-a no problem, thanks for the input!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Is it possible to get the <code>llmvlite.ir.Module</code> from a compiled numba function? Trying to look at it for debugging purposes to see how Numba creates for loops with llvmlite",
  "id": "5d77c3c332e48c5df26f2d4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-10T15:39:47.746Z",
  "text": "Is it possible to get the `llmvlite.ir.Module` from a compiled numba function? Trying to look at it for debugging purposes to see how Numba creates for loops with llvmlite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> that is an interesting question",
  "id": "5d77c50a50508949d30e42cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-10T15:45:14.476Z",
  "text": "@saulshanabrook that is an interesting question",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-10T15:55:18.867Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> ha does that  mean it&#39;s not easy?",
  "id": "5d77c748d5c7bd57946b30ad",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-10T15:54:48.670Z",
  "text": "@esc ha does that  mean it's not easy?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saulshanabrook\" class=\"mention\">@saulshanabrook</span> no, just that I don&#39;t know (yet) but would be interested in finding out#",
  "id": "5d77c80e767de913fcb72c0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "saulshanabrook",
    "userId": "529c6f2eed5ab0b3bf04e08b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-10T15:58:06.073Z",
  "text": "@saulshanabrook no, just that I don't know (yet) but would be interested in finding out#",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "I am worried it is just turned into a string and the <code>Module</code> instance isn&#39;t saved... <a href=\"https://github.com/quansight/numba/blob/da7669f34a356d6b0468edcab604ce24be7f7ce8/numba/targets/codegen.py#L177\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/quansight/numba/blob/da7669f34a356d6b0468edcab604ce24be7f7ce8/numba/targets/codegen.py#L177</a>",
  "id": "5d77c920b105ed4110ddb363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-10T16:02:40.959Z",
  "text": "I am worried it is just turned into a string and the `Module` instance isn't saved... https://github.com/quansight/numba/blob/da7669f34a356d6b0468edcab604ce24be7f7ce8/numba/targets/codegen.py#L177",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/quansight/numba/blob/da7669f34a356d6b0468edcab604ce24be7f7ce8/numba/targets/codegen.py#L177"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Well I settled on this hack for debugging purposes, I don&#39;t need something permenant:<pre><code>import numba\nimport numba<span class=\"class\">.targets</span><span class=\"class\">.codegen</span>\n\nmod = None\n\noriginal_fn = numba<span class=\"class\">.targets</span><span class=\"class\">.codegen</span><span class=\"class\">.CodeLibrary</span><span class=\"class\">.add_ir_module</span>\ndef <span class=\"function\"><span class=\"title\">add_ir_module</span><span class=\"params\">(self, ir_module)</span></span>:\n    global mod\n    mod = ir_module\n\n    return <span class=\"function\"><span class=\"title\">original_fn</span><span class=\"params\">(self, ir_module)</span></span>\n\nnumba<span class=\"class\">.targets</span><span class=\"class\">.codegen</span><span class=\"class\">.CodeLibrary</span><span class=\"class\">.add_ir_module</span> = add_ir_module</code></pre>",
  "id": "5d77cbeab105ed4110ddc6a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-10T16:14:34.085Z",
  "text": "Well I settled on this hack for debugging purposes, I don't need something permenant:\n\n```\nimport numba\nimport numba.targets.codegen\n\nmod = None\n\noriginal_fn = numba.targets.codegen.CodeLibrary.add_ir_module\ndef add_ir_module(self, ir_module):\n    global mod\n    mod = ir_module\n    \n    return original_fn(self, ir_module)\n\nnumba.targets.codegen.CodeLibrary.add_ir_module = add_ir_module\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "How do I do a lookup of a module attribute in the numba IR? ",
  "id": "5d7a93e460e1365675782522",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-12T18:52:20.469Z",
  "text": "How do I do a lookup of a module attribute in the numba IR? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "But in a way that doesn&#39;t inline it as a constant ",
  "id": "5d7a93ec1cd2965a49deadee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-12T18:52:28.206Z",
  "text": "But in a way that doesn't inline it as a constant ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "This is for the threading stuff <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2713\" href=\"https://github.com/numba/numba/issues/2713\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#2713</a>",
  "id": "5d7aa7c35350be681effd92d",
  "issues": [
   {
    "number": "2713",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-12T20:17:07.459Z",
  "text": "This is for the threading stuff https://github.com/numba/numba/issues/2713",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> could you just write the python code, jit it and see what appears to give you a hint? ",
  "id": "5d7abd28577fc14c7fb43936",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-12T21:48:24.480Z",
  "text": "@asmeurer could you just write the python code, jit it and see what appears to give you a hint? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "That&#39;s a good idea ",
  "id": "5d7ac6267b36ab342896ab69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-12T22:26:46.020Z",
  "text": "That's a good idea ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "writing IR by hand is quite hard work and often error prone, if it can be avoided, should be! :)",
  "id": "5d7b4f2f2e8fd94630c493b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-13T08:11:27.766Z",
  "text": "writing IR by hand is quite hard work and often error prone, if it can be avoided, should be! :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Guys, is there a roadmap for the <code>set</code> data structure? I can give it a try an implement parts of it",
  "id": "5d7d0f365d40aa0d7d3691ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:03:02.335Z",
  "text": "Guys, is there a roadmap for the `set` data structure? I can give it a try an implement parts of it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleoba\" class=\"mention\">@guilhermeleoba</span> it&#39;s on the roadmap somewhere, but no one is scheduled to work on it.",
  "id": "5d7d1786d5c523462f810400",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleoba",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:38:30.863Z",
  "text": "@guilhermeleoba it's on the roadmap somewhere, but no one is scheduled to work on it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> I implemented the typed-list almost purely off the typed dictionary implementation",
  "id": "5d7d17a036461106bb19baa9",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:38:56.750Z",
  "text": "@guilhermeleobas I implemented the typed-list almost purely off the typed dictionary implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "and there is some code that can be shared",
  "id": "5d7d17a8d5c523462f81048a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:39:04.560Z",
  "text": "and there is some code that can be shared",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "if you really want to give it a go, start by reading the cpython set implementation",
  "id": "5d7d17c0577fc14c7fc450da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:39:28.964Z",
  "text": "if you really want to give it a go, start by reading the cpython set implementation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "and use that as a minimal basis for a c-implementation that can use the NRT (Numba runtime) to do refcounting",
  "id": "5d7d17ebba12e064486e067b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:40:11.718Z",
  "text": "and use that as a minimal basis for a c-implementation that can use the NRT (Numba runtime) to do refcounting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-14T16:41:25.488Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "it only needs to support a  few methods, most of the convenience layer can be done at compiler level and mus&#39;nt be done at the c-level, but can be based on the existing c methods ",
  "id": "5d7d181472fe125111a497bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:40:52.420Z",
  "text": "it only needs to support a  few methods, most of the convenience layer can be done at compiler level and mus'nt be done at the c-level, but can be based on the existing c methods ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "You can look at <code>numba/_dictobject.c</code> and <code>numba/_listobject.c</code> for the dict and list implementations respectively.",
  "id": "5d7d1875d3283306ba3f40ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:42:29.174Z",
  "text": "You can look at `numba/_dictobject.c` and `numba/_listobject.c` for the dict and list implementations respectively.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "The work will be fairly straightforward based on the existing implementations but will involve some refactoring of those to further generalize things---and it will be quite a lot of typing implementing the whole datastructure at all the numba levels, incl. tests.",
  "id": "5d7d18ca62bfc95112ea49f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:43:54.440Z",
  "text": "The work will be fairly straightforward based on the existing implementations but will involve some refactoring of those to further generalize things---and it will be quite a lot of typing implementing the whole datastructure at all the numba levels, incl. tests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<a href=\"https://github.com/numba/numba/pull/4151/files\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pull/4151/files</a> &lt;-- the final PR had 130 commits and 5k loc added, expect the set to be the same order of magnitude, maybe less if it can be based on dict.",
  "id": "5d7d1a06d3283306ba3f4df7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T16:49:10.767Z",
  "text": "https://github.com/numba/numba/pull/4151/files <-- the final PR had 130 commits and 5k loc added, expect the set to be the same order of magnitude, maybe less if it can be based on dict.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4151/files"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Great, I have one PR that I need to give a closer attention. After that I can start working on something",
  "id": "5d7d406dbda393169480c63f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-14T19:33:01.677Z",
  "text": "Great, I have one PR that I need to give a closer attention. After that I can start working on something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "good morning, would anyone be able to restart tests on <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4472\" class=\"issue\">#4472</a>? One of them timed-out. Thanks!",
  "id": "5d8323401998d5169562955b",
  "issues": [
   {
    "number": "4472"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-19T06:42:08.429Z",
  "text": "good morning, would anyone be able to restart tests on #4472? One of them timed-out. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> done",
  "id": "5d8340072438b53a64daeaa8",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-19T08:44:55.740Z",
  "text": "@luk-f-a done",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks",
  "id": "5d834f95ab4244767bc81df9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-19T09:51:17.489Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "is it normal that after six hours <code>Linux py35_np111_cov</code> still says &quot;Waiting for an available agent&quot;?",
  "id": "5d83a16c5ab93616941e39fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:40:28.496Z",
  "text": "is it normal that after six hours `Linux py35_np111_cov` still says \"Waiting for an available agent\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it&#39;s not unusual",
  "id": "5d83a1d7ab4244767bcaa0da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:42:15.104Z",
  "text": "it's not unusual",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Numba really strains CI",
  "id": "5d83a1e1a38dae3a637eff4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:42:25.037Z",
  "text": "Numba really strains CI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "that is so much in the queue due to the merge party",
  "id": "5d83a1e31998d51695664dc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:42:27.461Z",
  "text": "that is so much in the queue due to the merge party",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "It&#39;ll probably be clear in a day or so :S",
  "id": "5d83a207901bb84d9037a2c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:43:03.428Z",
  "text": "It'll probably be clear in a day or so :S",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i think we should turn on batch mode: <a href=\"https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops&amp;tabs=yaml#batching-ci-builds\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops&amp;tabs=yaml#batching-ci-builds</a>",
  "id": "5d83a21c901bb84d9037a3c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:43:24.477Z",
  "text": "i think we should turn on batch mode: https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops&tabs=yaml#batching-ci-builds",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops&amp;tabs=yaml#batching-ci-builds"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> is this a critical test result for you ?",
  "id": "5d83a2205d24375b3ee35d45",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:43:28.427Z",
  "text": "@luk-f-a is this a critical test result for you ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> agree",
  "id": "5d83a2375ab93616941e413e",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:43:51.525Z",
  "text": "@sklam agree",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i\u2019ll make a quick PR",
  "id": "5d83a26ca7a5cc47331cdaba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:44:44.419Z",
  "text": "i\u2019ll make a quick PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "great, thanks",
  "id": "5d83a29f56677e767a2058ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T15:45:35.879Z",
  "text": "great, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> , depends on what you mean &quot;critical&quot; and &quot;this&quot;? xD. If by &quot;this&quot; you mean the whole test suit for the latest commit, then it&#39;s an import one because I&#39;m done with the changes and if everything passes then it&#39;s ready for review. If &quot;this&quot; means &quot;py35_np111_cov&quot;, I don&#39;t know what &quot;_cov&quot; means, but there&#39;s nothing special about py35 or np111. Since the PR passed py36 or np112, it should also pass py35_np111. And whether is critical, not really. It&#39;s important for this PR, because it&#39;s ready for review, but beyond that, I can live if I have to wait another day for the results.",
  "id": "5d83e9d25ab9361694206c37",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T20:49:22.465Z",
  "text": "@stuartarchibald , depends on what you mean \"critical\" and \"this\"? xD. If by \"this\" you mean the whole test suit for the latest commit, then it's an import one because I'm done with the changes and if everything passes then it's ready for review. If \"this\" means \"py35_np111_cov\", I don't know what \"_cov\" means, but there's nothing special about py35 or np111. Since the PR passed py36 or np112, it should also pass py35_np111. And whether is critical, not really. It's important for this PR, because it's ready for review, but beyond that, I can live if I have to wait another day for the results.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "oh the cov means coverage/flake8",
  "id": "5d83f260e45b6d4732207010",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T21:25:52.681Z",
  "text": "oh the cov means coverage/flake8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> went in and manipulated the build queues and has put in a patch to Azure to hopefully speed things up.",
  "id": "5d83f28d8521b34d9156dde8",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T21:26:37.734Z",
  "text": "@sklam went in and manipulated the build queues and has put in a patch to Azure to hopefully speed things up.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Sorry about the wait!",
  "id": "5d83f2912438b53a64e01f11",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T21:26:41.447Z",
  "text": "Sorry about the wait!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "could i get reviews for llvmlite<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"510\" class=\"issue\">#510</a> and llvmlite<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"509\" class=\"issue\">#509</a>?",
  "id": "5d83f3b31998d5169568bd2d",
  "issues": [
   {
    "number": "510"
   },
   {
    "number": "509"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T21:31:31.012Z",
  "text": "could i get reviews for llvmlite#510 and llvmlite#509?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/njwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/912123?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/912123?v=4&s=60",
   "displayName": "njwhite",
   "gv": "4",
   "id": "5a4d0cb1d73408ce4f85e996",
   "url": "/njwhite",
   "username": "njwhite",
   "v": 21
  },
  "html": "CI failures seem unrelated",
  "id": "5d83f3bca38dae3a63815cf5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-09-19T21:31:40.706Z",
  "text": "CI failures seem unrelated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"njwhite\" class=\"mention\">@njwhite</span> thanks, I&#39;ve scheduled them for review and restarted the failing builds.",
  "id": "5d83f981c77f285fb1aa2bad",
  "issues": [],
  "mentions": [
   {
    "screenName": "njwhite",
    "userId": "5a4d0cb1d73408ce4f85e996",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-19T21:56:17.793Z",
  "text": "@njwhite thanks, I've scheduled them for review and restarted the failing builds.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "good morning everyone. <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> py35_np111_cov has timed out again. I think some of pipelines are on the edge of timeout (py35_np111_cov and py37_np15 take longer than the rest), taking 56m to run when the limit is 60m. ",
  "id": "5d84783e2438b53a64e3cc41",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T06:57:02.481Z",
  "text": "good morning everyone. @stuartarchibald py35_np111_cov has timed out again. I think some of pipelines are on the edge of timeout (py35_np111_cov and py37_np15 take longer than the rest), taking 56m to run when the limit is 60m. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "maybe my new tests push it over the edge.",
  "id": "5d84784ea38dae3a63850c3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T06:57:18.092Z",
  "text": "maybe my new tests push it over the edge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> thanks for letting us know. Sorting out the test suite is on our near term TODO list, we&#39;re aware that it&#39;s giant and nearing time limits on public CI hardware!",
  "id": "5d8488825ab936169424ccd7",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T08:06:26.104Z",
  "text": "@luk-f-a thanks for letting us know. Sorting out the test suite is on our near term TODO list, we're aware that it's giant and nearing time limits on public CI hardware!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m aware that my new tests are NOT helping the situation. sorry about that.",
  "id": "5d849c9f901bb84d903edabc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T09:32:15.490Z",
  "text": "I'm aware that my new tests are NOT helping the situation. sorry about that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "No need to apologise :) Tests are good! We just need to do some surgery on the test base.",
  "id": "5d849e76be709e39d15e7723",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T09:40:06.166Z",
  "text": "No need to apologise :) Tests are good! We just need to do some surgery on the test base.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Unfortunately compilers are hard and testing them eats resources.",
  "id": "5d849ea1b9f8210ed5bae2b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T09:40:49.729Z",
  "text": "Unfortunately compilers are hard and testing them eats resources.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the new <strong>optimised</strong> build farm pipeline has about ~180 jobs to just get Numba built and tested on the most common hardware, OS and configuration options.",
  "id": "5d849f7e901bb84d903ef09e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T09:44:30.701Z",
  "text": "I think the new **optimised** build farm pipeline has about ~180 jobs to just get Numba built and tested on the most common hardware, OS and configuration options.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "And that&#39;s just conda packages. Wheels are another thing.",
  "id": "5d849f9204053c5b3d8d9660",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T09:44:50.790Z",
  "text": "And that's just conda packages. Wheels are another thing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "So don&#39;t feel bad :)",
  "id": "5d849f9a1998d516956d89de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T09:44:58.902Z",
  "text": "So don't feel bad :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "and some people are proposing annual Python releases, clearly they don&#39;t have to deal with testing a library against many python versions.",
  "id": "5d84a1f98521b34d915bd47e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-20T09:55:05.182Z",
  "text": "and some people are proposing annual Python releases, clearly they don't have to deal with testing a library against many python versions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-24T04:28:23.518Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "is <code>numpy.complex256 (np.clongfloat)</code> supported by numba?",
  "id": "5d899b50ab4244767bf4f226",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-24T04:28:00.710Z",
  "text": "is `numpy.complex256 (np.clongfloat)` supported by numba?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> pretty sure the answer is &quot;no&quot;",
  "id": "5d89d755b9f8210ed5df9d42",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-24T08:44:05.993Z",
  "text": "@guilhermeleobas pretty sure the answer is \"no\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> btw: last time I checked there were a bunch of unfinished or abandoned NumPy related PRs in the backlog. If you wanted to take over any of those we would be happy to support you.",
  "id": "5d8b1de0edbce86c91bc45f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T07:57:20.955Z",
  "text": "@guilhermeleobas btw: last time I checked there were a bunch of unfinished or abandoned NumPy related PRs in the backlog. If you wanted to take over any of those we would be happy to support you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "FYI for all: RC will be tagged on Monday, here is the list of PRs that should ideally be resolved by then: <a href=\"https://github.com/numba/numba/pulls?q=is%3Aopen+is%3Apr+milestone%3A%22Numba+0.46+RC%22\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/numba/numba/pulls?q=is%3Aopen+is%3Apr+milestone%3A%22Numba+0.46+RC%22</a>",
  "id": "5d8b1ef2edbce86c91bc4fb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:01:54.170Z",
  "text": "FYI for all: RC will be tagged on Monday, here is the list of PRs that should ideally be resolved by then: https://github.com/numba/numba/pulls?q=is%3Aopen+is%3Apr+milestone%3A%22Numba+0.46+RC%22",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pulls?q=is%3Aopen+is%3Apr+milestone%3A%22Numba+0.46+RC%22"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "good morning <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>,  <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4472\" class=\"issue\">#4472</a> is not marked for 0.46. I could address your comments today but that might just add more work for you at a time when you&#39;re dealing with many other PRs. I&#39;m fine if you&#39;d like to make a push on <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4472\" class=\"issue\">#4472</a> for 0.46, I make the changes quickly. I&#39;m also fine if you&#39;d rather focus on 0.46, and then I chill with the changes until next week.",
  "id": "5d8b2266edbce86c91bc662d",
  "issues": [
   {
    "number": "4472"
   },
   {
    "number": "4472"
   }
  ],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:16:38.648Z",
  "text": "good morning @esc,  #4472 is not marked for 0.46. I could address your comments today but that might just add more work for you at a time when you're dealing with many other PRs. I'm fine if you'd like to make a push on #4472 for 0.46, I make the changes quickly. I'm also fine if you'd rather focus on 0.46, and then I chill with the changes until next week.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "up to you, let me know what you&#39;d prefer. ",
  "id": "5d8b22845c966b58fb70d9c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:17:08.937Z",
  "text": "up to you, let me know what you'd prefer. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;d like to get <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4472\" class=\"issue\">#4472</a> in as it is on the critical path to refactoring <code>sum</code> in general. If <a href=\"mailto:you/@esc\" rel=\"nofollow\">you/@esc</a> have time to do the review cycling  then yes please!",
  "id": "5d8b2318692d464f7967d1f3",
  "issues": [
   {
    "number": "4472"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:19:36.332Z",
  "text": "I'd like to get #4472 in as it is on the critical path to refactoring `sum` in general. If you/@esc have time to do the review cycling  then yes please!",
  "unread": false,
  "urls": [
   {
    "url": "mailto:you/@esc"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> ^",
  "id": "5d8b232063b06968fbe62b07",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:19:44.725Z",
  "text": "@luk-f-a ^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "np, it&#39;s ok for me. I just made the changes and pushed them a minute ago. ",
  "id": "5d8b296223aa577f6bc6cb05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:46:26.117Z",
  "text": "np, it's ok for me. I just made the changes and pushed them a minute ago. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "great, thanks!",
  "id": "5d8b29c414635d6b37e80c37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:48:04.962Z",
  "text": "great, thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> will review shortly, maybe add 4472 to the 0.46RC milestone?",
  "id": "5d8b2b38cdbb7d4f78832925",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   },
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T08:54:16.218Z",
  "text": "@luk-f-a @stuartarchibald will review shortly, maybe add 4472 to the 0.46RC milestone?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I think he did",
  "id": "5d8b2f70a929c26bf4c412a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T09:12:16.012Z",
  "text": "I think he did",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> just out of curiosity, do you think the following might be of use: <a href=\"https://eng.uber.com/hypothesis-gu-funcs-unit-testing/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://eng.uber.com/hypothesis-gu-funcs-unit-testing/</a>",
  "id": "5d8b3d3aa929c26bf4c48828",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T10:11:06.983Z",
  "text": "@luk-f-a just out of curiosity, do you think the following might be of use: https://eng.uber.com/hypothesis-gu-funcs-unit-testing/",
  "unread": false,
  "urls": [
   {
    "url": "https://eng.uber.com/hypothesis-gu-funcs-unit-testing/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "or even: <a href=\"https://hypothesis.readthedocs.io/en/latest/numpy.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://hypothesis.readthedocs.io/en/latest/numpy.html</a>",
  "id": "5d8b3d5ea8c2c26e9f992e0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-09-25T10:11:42.297Z",
  "text": "or even: https://hypothesis.readthedocs.io/en/latest/numpy.html",
  "unread": false,
  "urls": [
   {
    "url": "https://hypothesis.readthedocs.io/en/latest/numpy.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "I think that might have made it less likely for you to miss <code>np.complex128</code>.",
  "id": "5d8b3d6f14635d6b37e8a4c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-09-25T10:11:59.711Z",
  "text": "I think that might have made it less likely for you to miss `np.complex128`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> changes are good, I&#39;ll take another look at the whole thing now",
  "id": "5d8b3e4ca8c2c26e9f9935f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-09-25T10:15:40.900Z",
  "text": "@luk-f-a changes are good, I'll take another look at the whole thing now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> it seems like a lot of work has to go in to make the axis constant",
  "id": "5d8b4090fb00d668fa2c508a",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-09-25T10:25:20.344Z",
  "text": "@luk-f-a it seems like a lot of work has to go in to make the axis constant",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "do you mean what is being done in <code>gen_sum_axis_impl</code>?",
  "id": "5d8b4110fb00d668fa2c5431",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-09-25T10:27:28.737Z",
  "text": "do you mean what is being done in `gen_sum_axis_impl`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "yes and the branches in <code>array_sum_axis</code> and <code>array_sum_axis_dtype</code>.",
  "id": "5d8b418aa929c26bf4c4a732",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-09-25T10:29:30.005Z",
  "text": "yes and the branches in `array_sum_axis` and `array_sum_axis_dtype`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "so, what happens if <code>axis</code> isn&#39;t a literal?",
  "id": "5d8b419ff8b2736b3871e9b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T10:29:51.786Z",
  "text": "so, what happens if `axis` isn't a literal?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "also, do you think there is a way to reduce the amount of repetition between the two functions? The code seems very similar.",
  "id": "5d8b41f85c966b58fb71c97a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T10:31:20.938Z",
  "text": "also, do you think there is a way to reduce the amount of repetition between the two functions? The code seems very similar.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": " I left all code regarding axis as it was, I didn&#39;t change anything there. The only thing that&#39;s changed here is that a part of the old <code>array_sum_axis</code>was refactored out to avoid duplicating it in <code>array_sum_axis_dtype</code>",
  "id": "5d8b475686eddb6ea0d02580",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T10:54:14.693Z",
  "text": " I left all code regarding axis as it was, I didn't change anything there. The only thing that's changed here is that a part of the old `array_sum_axis`was refactored out to avoid duplicating it in `array_sum_axis_dtype`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "ah, O.K. you just moved it around",
  "id": "5d8b47e9bae2907f6c3477cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T10:56:41.964Z",
  "text": "ah, O.K. you just moved it around",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>also, do you think there is a way to reduce the amount of repetition between the two functions? The code seems very similar.</p></blockquote>\n<p>the refactoring of<code>gen_sum_axis_impl</code>out of  <code>array_sum_axis</code>was done to help with this. I don&#39;t know if more could be done, Stuart did that piece because I got stuck and couldn&#39;t make it work.</p>",
  "id": "5d8b4840edbce86c91bd8979",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T10:58:08.584Z",
  "text": "> also, do you think there is a way to reduce the amount of repetition between the two functions? The code seems very similar.\n\nthe refactoring of`gen_sum_axis_impl`out of  `array_sum_axis`was done to help with this. I don't know if more could be done, Stuart did that piece because I got stuck and couldn't make it work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m looking at the code below <code>if isinstance(ty_axis, types.Literal)</code>, maybe something there could be shared",
  "id": "5d8b4871cdbb7d4f78840576",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T10:58:57.241Z",
  "text": "I'm looking at the code below `if isinstance(ty_axis, types.Literal)`, maybe something there could be shared",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<p>the problem is the different signature, </p><pre><code>        <span class=\"keyword\">args</span> = <span class=\"keyword\">args</span>[<span class=\"number\">0</span>], axis_val, <span class=\"keyword\">args</span>[<span class=\"number\">2</span>]\n        # rewrite <span class=\"keyword\">sig</span>\n        <span class=\"keyword\">sig</span> = <span class=\"keyword\">sig</span>.replace(<span class=\"keyword\">args</span>=[ty_array, ty_axis, ty_dtype])</code></pre><p>cannot be shared</p>",
  "id": "5d8b48f2a929c26bf4c4e330",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T11:01:06.177Z",
  "text": "the problem is the different signature, \n```\n        args = args[0], axis_val, args[2]\n        # rewrite sig\n        sig = sig.replace(args=[ty_array, ty_axis, ty_dtype])\n```\ncannot be shared\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "If I understood Stuart correctly , this whole thing is scheduled for a major rework, for example converting it to <code>overload</code>. maybe a bit of repetition is not worth doing a lot of work on, if it will be replaced in a month or two",
  "id": "5d8b494f14635d6b37e8f8c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T11:02:39.711Z",
  "text": "If I understood Stuart correctly , this whole thing is scheduled for a major rework, for example converting it to `overload`. maybe a bit of repetition is not worth doing a lot of work on, if it will be replaced in a month or two",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "that&#39;s why Stuart asked me to write a very extensive set of tests, to help with the creation of the new version",
  "id": "5d8b496714635d6b37e8fa46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T11:03:03.883Z",
  "text": "that's why Stuart asked me to write a very extensive set of tests, to help with the creation of the new version",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> I hear you.",
  "id": "5d8b4ac023aa577f6bc7c674",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T11:08:48.168Z",
  "text": "@luk-f-a I hear you.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "I asked Stuart about this yesterday in fact, because this could well be done with <code>overload</code>.",
  "id": "5d8b4af33981f058fc2427ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-09-25T11:09:39.335Z",
  "text": "I asked Stuart about this yesterday in fact, because this could well be done with `overload`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "yes, I think it&#39;s part of the plan which I think was discussed in the core dev meeting some time ago.",
  "id": "5d8b4b60bae2907f6c3494c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:11:28.342Z",
  "text": "yes, I think it's part of the plan which I think was discussed in the core dev meeting some time ago.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> so, one last thing I don&#39;t quite understand is, where is the dtype of the accumulator set?",
  "id": "5d8b4b93cdbb7d4f788421a1",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:12:19.808Z",
  "text": "@luk-f-a so, one last thing I don't quite understand is, where is the dtype of the accumulator set?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I actually did not intend to touch <code>sum</code>, what I really wanted to do was to add <code>axis</code> to <code>np.mean</code>. But I had to take this month long detour into <code>sum</code> to enable an easy way to extend <code>mean</code>",
  "id": "5d8b4ba2edbce86c91bda4d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:12:34.039Z",
  "text": "I actually did not intend to touch `sum`, what I really wanted to do was to add `axis` to `np.mean`. But I had to take this month long detour into `sum` to enable an easy way to extend `mean`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "oh right it is in the <code>zero</code>.",
  "id": "5d8b4bbd5c966b58fb72102e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:13:01.478Z",
  "text": "oh right it is in the `zero`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-25T11:14:43.608Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<blockquote>\n<p>oh right it is in the <code>zero</code>.</p></blockquote>\n<p>yes, which takes it from <code>retty</code>, which comes from the typing part, which is invisible here. That&#39;s why it would be much better to have it as <code>overload</code> and be able to see everything at once.</p>",
  "id": "5d8b4c1286eddb6ea0d04ade",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:14:26.168Z",
  "text": "> oh right it is in the `zero`.\n\nyes, which takes it from `retty`, which comes from the typing part, which is invisible here. That's why it would be much better to have it as `overload` and be able to see everything at once.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "so, what does the typing part do?",
  "id": "5d8b4c5cfb00d668fa2cad5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:15:40.287Z",
  "text": "so, what does the typing part do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "setup the <code>dtype</code> in the <code>retty</code>?",
  "id": "5d8b4c70edbce86c91bda9e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:16:00.931Z",
  "text": "setup the `dtype` in the `retty`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "yes, based on the <code>dtype</code>of the input array, and based on whether dtype was passed an an explicit parameter. ",
  "id": "5d8b4cbc63b06968fbe775a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:17:16.481Z",
  "text": "yes, based on the `dtype`of the input array, and based on whether dtype was passed an an explicit parameter. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "if it&#39;s not passed, there&#39;s some code to determine what is the right accumulator, if it&#39;s passed, then it will use what is given",
  "id": "5d8b4ce65c966b58fb7217f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:17:58.597Z",
  "text": "if it's not passed, there's some code to determine what is the right accumulator, if it's passed, then it will use what is given",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "right, but is that part of the PR?",
  "id": "5d8b4cfdbae2907f6c34a033",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:18:21.330Z",
  "text": "right, but is that part of the PR?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "ah",
  "id": "5d8b4d20fb00d668fa2cb1ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:18:56.206Z",
  "text": "ah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-25T11:19:06.278Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "the <code>npydecl.py</code>",
  "id": "5d8b4d2463b06968fbe778d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:19:00.377Z",
  "text": "the `npydecl.py`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "and <code>arraydecl.py</code>",
  "id": "5d8b4d5834a7236bf5ba3102",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:19:52.030Z",
  "text": "and `arraydecl.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "O.K. yeah, that makes sense",
  "id": "5d8b4d6afb00d668fa2cb454",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:20:10.849Z",
  "text": "O.K. yeah, that makes sense",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> thanks very much for this and your persistence on it. I have marked it as ready to merge. It might have to cycle through some additional CI layers, but the code is fine.",
  "id": "5d8b4ddeb6aa4d6c90dd3532",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:22:06.503Z",
  "text": "@luk-f-a thanks very much for this and your persistence on it. I have marked it as ready to merge. It might have to cycle through some additional CI layers, but the code is fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": ":tada: ",
  "id": "5d8b5687f8b2736b38728b5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T11:59:03.742Z",
  "text": ":tada: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> few more queries to look at on the PR from me, a couple of which I was hoping for your opinion on as you are now v. familiar with that piece of code. Thanks!",
  "id": "5d8b90b1edbce86c91bfa6aa",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T16:07:13.736Z",
  "text": "@luk-f-a few more queries to look at on the PR from me, a couple of which I was hoping for your opinion on as you are now v. familiar with that piece of code. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>, I will take a look at those PRs when I have some cycles to spare",
  "id": "5d8bba805c966b58fb757691",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T19:05:35.998Z",
  "text": "Hi @esc, I will take a look at those PRs when I have some cycles to spare",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "no worries, just saw you do a lot of NumPy overloads recently",
  "id": "5d8bcc9dedbce86c91c17cac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-09-25T20:22:53.785Z",
  "text": "no worries, just saw you do a lot of NumPy overloads recently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "Hi, currently <code>type_can_asarray</code> is used in a couple of places (e.g. <code>flatnonzero</code>, <code>count_nonzero</code>, <code>cross</code>) but not everywhere.  Is the goal to extend &quot;array-like&quot; coverage to other numpy functions?",
  "id": "5d9035b766c8b45122379554",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-09-29T04:40:23.258Z",
  "text": "Hi, currently `type_can_asarray` is used in a couple of places (e.g. `flatnonzero`, `count_nonzero`, `cross`) but not everywhere.  Is the goal to extend \"array-like\" coverage to other numpy functions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EPronovost\" class=\"mention\">@EPronovost</span> thanks for asking about that. We haven&#39;t forged any plans in that direction yet.",
  "id": "5d90e522bf625112c001fd95",
  "issues": [],
  "mentions": [
   {
    "screenName": "EPronovost",
    "userId": "5d9034d0d73408ce4fcc5a07",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-09-29T17:08:50.834Z",
  "text": "@EPronovost thanks for asking about that. We haven't forged any plans in that direction yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "Okay",
  "id": "5d9170970e829f60474ebacd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-09-30T03:03:51.230Z",
  "text": "Okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<p>Hi everyone, I&#39;m working on a <a href=\"https://github.com/numba/numba-integration-testing/blob/05092ffaa3a9ee9fafb609b845b187837850e2e9/switchboard.py#L132-L165\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">project that uses Numba extensions heavily</a> and I find that some objects, when returned from lowered functions, must be reference-counted:</p><pre><code class=\"python\"><span class=\"keyword\">if</span> context.enable_nrt:\n    context.nrt.incref(builder, object_type, object_value)</code></pre><p>and others do not. Is there a write-up of the rules specifying new/borrowed/stolen references that would help me put these in exactly the right spots (without possibility of segmentation fault or leaked memory)? Thanks!</p>",
  "id": "5d94bc92deb6da63d7e8da1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-02T15:04:50.100Z",
  "text": "Hi everyone, I'm working on a [project that uses Numba extensions heavily](https://github.com/numba/numba-integration-testing/blob/05092ffaa3a9ee9fafb609b845b187837850e2e9/switchboard.py#L132-L165) and I find that some objects, when returned from lowered functions, must be reference-counted:\n\n```python\nif context.enable_nrt:\n    context.nrt.incref(builder, object_type, object_value)\n```\n\nand others do not. Is there a write-up of the rules specifying new/borrowed/stolen references that would help me put these in exactly the right spots (without possibility of segmentation fault or leaked memory)? Thanks!",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba-integration-testing/blob/05092ffaa3a9ee9fafb609b845b187837850e2e9/switchboard.py#L132-L165"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jpivarski\" class=\"mention\">@jpivarski</span> the integration test for numba-awkward started failing a day or so ago, any idea why?",
  "id": "5d9593f749c7720aaf57cd62",
  "issues": [],
  "mentions": [
   {
    "screenName": "jpivarski",
    "userId": "5a4e9793d73408ce4f862a26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-03T06:23:51.014Z",
  "text": "@jpivarski the integration test for numba-awkward started failing a day or so ago, any idea why?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<a href=\"https://circleci.com/gh/numba/numba-integration-testing/1511\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://circleci.com/gh/numba/numba-integration-testing/1511</a>",
  "id": "5d95942a0e67130aae065a75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-03T06:24:42.055Z",
  "text": "https://circleci.com/gh/numba/numba-integration-testing/1511",
  "unread": false,
  "urls": [
   {
    "url": "https://circleci.com/gh/numba/numba-integration-testing/1511"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "it seems to be the same <code>TypeError</code> repeatedly",
  "id": "5d959488eac5612d22a6adba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-03T06:26:16.111Z",
  "text": "it seems to be the same `TypeError` repeatedly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> I think I know what that is: <code>toarray</code> tries various tests to convert an object into a Numpy array, one of which is <code>frombuffer</code> (requires a <code>buffer/memory</code> interface, which <code>list</code> does not have), and the follow-up is <code>asarray</code>(for <code>list</code>). The exception type raised by the <code>frombuffer</code> changed in some version of Numpy, requiring an update. I thought I updated the awkward-array code centrally, but awkward-numba might be seeing some corner case that wasn&#39;t updated and wasn&#39;t tested...</p><p>...because I&#39;m not supporting the awkward-numba in the old repository anymore. (It was never really finished, and 1.5 months ago, I started a new implementation in which support will be easier.) I thought I had updated numba-integration-testing to use the new one. If not, maybe we can do it today? The new version is in very active development, so having a check on it from your side would be helpful. (As I said above, I&#39;m getting deep in the extension interface, which can clarify which parts ought to be public.)</p>",
  "id": "5d95f52737073b36a062e90c",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-03T13:18:31.759Z",
  "text": "@esc I think I know what that is: `toarray` tries various tests to convert an object into a Numpy array, one of which is `frombuffer` (requires a `buffer/memory` interface, which `list` does not have), and the follow-up is `asarray`(for `list`). The exception type raised by the `frombuffer` changed in some version of Numpy, requiring an update. I thought I updated the awkward-array code centrally, but awkward-numba might be seeing some corner case that wasn't updated and wasn't tested...\n\n...because I'm not supporting the awkward-numba in the old repository anymore. (It was never really finished, and 1.5 months ago, I started a new implementation in which support will be easier.) I thought I had updated numba-integration-testing to use the new one. If not, maybe we can do it today? The new version is in very active development, so having a check on it from your side would be helpful. (As I said above, I'm getting deep in the extension interface, which can clarify which parts ought to be public.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> Okay, I raised <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"22\" href=\"https://github.com/numba/numba-integration-testing/issues/22\" data-provider=\"github\" data-issue-repo=\"numba/numba-integration-testing\" class=\"issue\">numba/numba-integration-testing#22</a> for the switch from scikit-hep/awkward-array to jpivarski/awkward-1.0, and you started <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"23\" href=\"https://github.com/numba/numba-integration-testing/pull/23\" data-provider=\"github\" data-issue-repo=\"numba/numba-integration-testing\" class=\"pr\">numba/numba-integration-testing#23</a>. That PR hasn&#39;t been merged. But it&#39;s good that it&#39;s still open because there&#39;s one more change: I&#39;ve moved the repo into its final spot: <a href=\"https://github.com/scikit-hep/awkward-1.0\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/scikit-hep/awkward-1.0</a> .",
  "id": "5d95f5d8fcf7602cc5247ccd",
  "issues": [
   {
    "number": "22"
   },
   {
    "number": "22",
    "repo": "numba/numba-integration-testing"
   },
   {
    "number": "23"
   },
   {
    "number": "23",
    "repo": "numba/numba-integration-testing"
   }
  ],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-03T13:21:28.030Z",
  "text": "@esc Okay, I raised [issue #22](https://github.com/numba/numba-integration-testing/issues/22) for the switch from scikit-hep/awkward-array to jpivarski/awkward-1.0, and you started [PR #23](https://github.com/numba/numba-integration-testing/pull/23). That PR hasn't been merged. But it's good that it's still open because there's one more change: I've moved the repo into its final spot: https://github.com/scikit-hep/awkward-1.0 .",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/scikit-hep/awkward-1.0"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> So in the end, I&#39;m willing to ignore the <code>TypeError</code> in the old awkward-numba; let&#39;s fix it by switching to the new awkward-1.0. Thanks!",
  "id": "5d95f611b385bf2cc667aefd",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-03T13:22:25.361Z",
  "text": "@esc So in the end, I'm willing to ignore the `TypeError` in the old awkward-numba; let's fix it by switching to the new awkward-1.0. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jpivarski\" class=\"mention\">@jpivarski</span> o.k.",
  "id": "5d9628c4fcf7602cc525e92c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jpivarski",
    "userId": "5a4e9793d73408ce4f862a26",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-03T16:58:44.565Z",
  "text": "@jpivarski o.k.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-09T14:25:09.994Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "Is it on purpose that the hashes for llmvlite ir types are not exactly right? <a href=\"https://github.com/numba/llvmlite/blob/master/llvmlite/ir/types.py#L197\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/llvmlite/blob/master/llvmlite/ir/types.py#L197</a>",
  "id": "5d9ded9792920c36a13c596e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T14:24:23.564Z",
  "text": "Is it on purpose that the hashes for llmvlite ir types are not exactly right? https://github.com/numba/llvmlite/blob/master/llvmlite/ir/types.py#L197",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/llvmlite/blob/master/llvmlite/ir/types.py#L197"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2019-10-09T14:25:01.557Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<pre><code>&gt;&gt;&gt; hash<span class=\"list\">(<span class=\"keyword\">ir</span>.IntType<span class=\"list\">(<span class=\"number\">32</span>)</span>)</span> == hash<span class=\"list\">(<span class=\"keyword\">ir</span>.IntType<span class=\"list\">(<span class=\"number\">64</span>)</span>)</span>\nTrue</code></pre>",
  "id": "5d9dedb497358746732338c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T14:24:52.823Z",
  "text": "```\n>>> hash(ir.IntType(32)) == hash(ir.IntType(64))\nTrue\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the hash is basically <code>hash(self.__class__)</code>",
  "id": "5d9e16fbe8de6f3ca06a33ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T17:20:59.227Z",
  "text": "the hash is basically `hash(self.__class__)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "and your test above can have different problem for objects whose hash is just its <code>id()</code>",
  "id": "5d9e1714e8de6f3ca06a34cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T17:21:24.269Z",
  "text": "and your test above can have different problem for objects whose hash is just its `id()`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i.e.",
  "id": "5d9e17177aa5602ffc9979b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T17:21:27.739Z",
  "text": "i.e.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<pre><code>&gt;&gt;&gt; hash<span class=\"list\">(<span class=\"keyword\">object</span><span class=\"list\">()</span>)</span> == hash<span class=\"list\">(<span class=\"keyword\">object</span><span class=\"list\">()</span>)</span>\nTrue</code></pre>",
  "id": "5d9e171e940b4c2fc0a338ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T17:21:34.065Z",
  "text": "```\n>>> hash(object()) == hash(object())\nTrue\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<pre><code>&gt;&gt;&gt; id<span class=\"list\">(<span class=\"keyword\">object</span><span class=\"list\">()</span>)</span> == id<span class=\"list\">(<span class=\"keyword\">object</span><span class=\"list\">()</span>)</span>\nTrue</code></pre>",
  "id": "5d9e173837073b36a09bde30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T17:22:00.088Z",
  "text": "```\n>>> id(object()) == id(object())\nTrue\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "btw, if it\u2019s affecting the performance for hashtable, we can adjust it.  I think we did the simplest thing for <code>__hash__</code> just to make them hashable.  ",
  "id": "5d9e227d37073b36a09c3138",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-09T18:10:05.852Z",
  "text": "btw, if it\u2019s affecting the performance for hashtable, we can adjust it.  I think we did the simplest thing for `__hash__` just to make them hashable.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "My understanding is that the best practice is that if objects are equal their hash should be equal, and if they are not their hash shouldn&#39;t be. I worked around it my case by special casing numba function types. <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__hash__\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://docs.python.org/3/reference/datamodel.html#object.__hash__</a>",
  "id": "5d9fadf77aa5602ffca4c97d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-10T22:17:27.322Z",
  "text": "My understanding is that the best practice is that if objects are equal their hash should be equal, and if they are not their hash shouldn't be. I worked around it my case by special casing numba function types. https://docs.python.org/3/reference/datamodel.html#object.__hash__",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.python.org/3/reference/datamodel.html#object.__hash__"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<a href=\"https://www.asmeurer.com/blog/posts/what-happens-when-you-mess-with-hashing-in-python/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://www.asmeurer.com/blog/posts/what-happens-when-you-mess-with-hashing-in-python/</a>",
  "id": "5d9fae1537073b36a0a71256",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-10T22:17:57.371Z",
  "text": "https://www.asmeurer.com/blog/posts/what-happens-when-you-mess-with-hashing-in-python/",
  "unread": false,
  "urls": [
   {
    "url": "https://www.asmeurer.com/blog/posts/what-happens-when-you-mess-with-hashing-in-python/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<blockquote>\nAdditionally, a good hash function should satisfy the property:<ul>\n<li>If two objects have the same hash, then they are likely to be the same object.</li>\n</ul>\n</blockquote>\n",
  "id": "5d9fae29eac5612d22ee34d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-10T22:18:17.969Z",
  "text": "> Additionally, a good hash function should satisfy the property:\n> \n>  *   If two objects have the same hash, then they are likely to be the same object.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "But like I said, I worked around, it isn&#39;t a priority!",
  "id": "5d9fae543220922ffb648fe2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-10T22:19:00.189Z",
  "text": "But like I said, I worked around, it isn't a priority!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "good morning, if anyone has time to answer a question regarding <code>overload</code> I could make some progress with <code>np.mean(axis)</code>, but it can also wait if everyone is busy with 0.46",
  "id": "5da032d089acff6ff5d6cc1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T07:44:16.586Z",
  "text": "good morning, if anyone has time to answer a question regarding `overload` I could make some progress with `np.mean(axis)`, but it can also wait if everyone is busy with 0.46",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span>, we are done with 0.46.0 release now.  What\u2019s your question regarding <code>overload</code>?",
  "id": "5da07d6539e2ef28adc35110",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2019-10-11T13:02:29.626Z",
  "text": "@luk-f-a, we are done with 0.46.0 release now.  What\u2019s your question regarding `overload`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m migrating <code>mean</code> from <code>lower_builtin</code> to <code>overload</code>and adding <code>axis</code>.  what is the right way to treat the case where <code>axis</code>is not passed:<pre><code><span class=\"decorator\">@overload(np.mean)</span>\n<span class=\"decorator\">@overload_method(types.Array, 'mean')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_mean</span><span class=\"params\">(arr, axis=None)</span>:</span>\n    <span class=\"keyword\">if</span> axis <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>:\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean_impl</span><span class=\"params\">(arr, ?)</span>:</span>\n            do something\n    <span class=\"keyword\">else</span>: \n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean_impl</span><span class=\"params\">(arr, axis)</span>:</span>\n            do something\n\n    <span class=\"keyword\">return</span> mean_impl</code></pre>",
  "id": "5da082a1f1c89c0758ce1629",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-10-11T13:24:49.853Z",
  "text": "I'm migrating `mean` from `lower_builtin` to `overload`and adding `axis`.  what is the right way to treat the case where `axis`is not passed:\n```\n@overload(np.mean)\n@overload_method(types.Array, 'mean')\ndef array_mean(arr, axis=None):\n    if axis is None:\n        def mean_impl(arr, ?):\n            do something\n    else: \n        def mean_impl(arr, axis):\n            do something\n   \n    return mean_impl\n``` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-11T13:25:49.550Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "if I put <code>axis</code>in place of <code>?</code> I get some tests failing, if I don&#39;t put it I get an error complaining that the top signature (<code>array_mean</code>) does not match the overloaded signature.",
  "id": "5da082d2dbf67667343f8d0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:25:38.045Z",
  "text": "if I put `axis`in place of `?` I get some tests failing, if I don't put it I get an error complaining that the top signature (`array_mean`) does not match the overloaded signature.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "you need <code>axis</code> in there",
  "id": "5da082f0870fa33a4dd35f13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:26:08.440Z",
  "text": "you need `axis` in there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks, then I will track why some tests fail if I put it.",
  "id": "5da08318158cfd67351105c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:26:48.362Z",
  "text": "thanks, then I will track why some tests fail if I put it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "axis can be of <code>NoneType</code>.  (it\u2019s a weird thing that we want to fix)",
  "id": "5da0836b80e62056e4e6cf16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:28:11.650Z",
  "text": "axis can be of `NoneType`.  (it\u2019s a weird thing that we want to fix)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i mean <code>numba.types.NoneType</code>",
  "id": "5da0837539e2ef28adc38078",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:28:21.859Z",
  "text": "i mean `numba.types.NoneType`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i\u2019m trying to find an example in the code base",
  "id": "5da0838039d0c707578f126e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:28:32.602Z",
  "text": "i\u2019m trying to find an example in the code base",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "See this definition: <a href=\"https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/typedobjectutils.py#L77\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/typedobjectutils.py#L77</a>",
  "id": "5da083d365dd8569a0bb1863",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:29:55.880Z",
  "text": "See this definition: https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/typedobjectutils.py#L77",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/typedobjectutils.py#L77"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<p>with this code </p><pre><code><span class=\"decorator\">@overload(np.mean)</span>\n<span class=\"decorator\">@overload_method(types.Array, 'mean')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_mean</span><span class=\"params\">(arr, axis=None)</span>:</span>\n    <span class=\"keyword\">if</span> axis <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>:\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean_impl</span><span class=\"params\">(arr, axis=None)</span>:</span>\n            do something\n    <span class=\"keyword\">else</span>: \n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean_impl</span><span class=\"params\">(arr, axis=None)</span>:</span>\n            do something\n\n    <span class=\"keyword\">return</span> mean_impl</code></pre><p>I get <code>TypeError: cannot create weak reference to &#39;NoneType&#39; object</code></p>",
  "id": "5da083d5f1c89c0758ce1cd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:29:57.239Z",
  "text": "with this code \n```\n@overload(np.mean)\n@overload_method(types.Array, 'mean')\ndef array_mean(arr, axis=None):\n    if axis is None:\n        def mean_impl(arr, axis=None):\n            do something\n    else: \n        def mean_impl(arr, axis=None):\n            do something\n   \n    return mean_impl\n```\nI get `TypeError: cannot create weak reference to 'NoneType' object`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "hm\u2026. not what I am expecting",
  "id": "5da083ff809de9699f1c8458",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:30:39.033Z",
  "text": "hm\u2026. not what I am expecting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I can push the branch and you can run the specific that fails?",
  "id": "5da0843b4afd703a4ebfc108",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:31:39.214Z",
  "text": "I can push the branch and you can run the specific that fails?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "it&#39;s most likely my fault, somewhere I wrote something I shouldn&#39;t have, I just can&#39;t guess what",
  "id": "5da08467870fa33a4dd368fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:32:23.546Z",
  "text": "it's most likely my fault, somewhere I wrote something I shouldn't have, I just can't guess what",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "running the code would help",
  "id": "5da084778e2e9a7c6bdca30f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T13:32:39.099Z",
  "text": "running the code would help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i just tried this on master and it runs as expected:<pre><code class=\"python\"><span class=\"keyword\">from</span> numba.extending <span class=\"keyword\">import</span> overload, overload_method\n<span class=\"keyword\">from</span> numba <span class=\"keyword\">import</span> njit, types\n\n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n\n<span class=\"decorator\">@overload(np.mean)</span>\n<span class=\"decorator\">@overload_method(types.Array, 'mean')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_mean</span><span class=\"params\">(arr, axis=None)</span>:</span>\n    print(<span class=\"string\">\"THERE\"</span>, arr, axis)\n    <span class=\"keyword\">if</span> axis <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>:\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean_impl</span><span class=\"params\">(arr, axis=None)</span>:</span>\n            print(<span class=\"string\">\"JERE\"</span>)\n    <span class=\"keyword\">else</span>:\n        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean_impl</span><span class=\"params\">(arr, axis=None)</span>:</span>\n            print(<span class=\"string\">\"HERE\"</span>)\n\n    <span class=\"keyword\">return</span> mean_impl\n\n\n\n<span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">()</span>:</span>\n    <span class=\"keyword\">return</span> np.ones(<span class=\"number\">10</span>).mean()\n\nfoo()</code></pre>",
  "id": "5da08490f88b526fb91ddfc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:33:04.450Z",
  "text": "i just tried this on master and it runs as expected:\n```python\nfrom numba.extending import overload, overload_method\nfrom numba import njit, types\n\nimport numpy as np\n\n@overload(np.mean)\n@overload_method(types.Array, 'mean')\ndef array_mean(arr, axis=None):\n    print(\"THERE\", arr, axis)\n    if axis is None:\n        def mean_impl(arr, axis=None):\n            print(\"JERE\")\n    else:\n        def mean_impl(arr, axis=None):\n            print(\"HERE\")\n\n    return mean_impl\n\n\n\n@njit\ndef foo():\n    return np.ones(10).mean()\n\nfoo()\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "printing<pre><code>THERE <span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(float64, <span class=\"number\">1</span>d, C)</span></span> None\nTHERE <span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(float64, <span class=\"number\">1</span>d, C)</span></span> <span class=\"function\"><span class=\"title\">omitted</span><span class=\"params\">(default=None)</span></span>\nHERE</code></pre>",
  "id": "5da0849f39d0c707578f19a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:33:19.939Z",
  "text": "printing\n```\nTHERE array(float64, 1d, C) None\nTHERE array(float64, 1d, C) omitted(default=None)\nHERE\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;ll pull master, just in case",
  "id": "5da0856f57c2517c6aed7da0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:36:47.745Z",
  "text": "I'll pull master, just in case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "still failing, maybe the problem is the combination with the new <code>sum</code>implementation. Could you run <code>test_mean_axis</code> in /tests/test_array_methods.py from PR <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4480\" class=\"issue\">#4480</a>",
  "id": "5da0860a894dee56e524c688",
  "issues": [
   {
    "number": "4480"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:39:22.162Z",
  "text": "still failing, maybe the problem is the combination with the new `sum`implementation. Could you run `test_mean_axis` in /tests/test_array_methods.py from PR #4480",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i can replicate.  ",
  "id": "5da087c04afd703a4ebfdd48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:46:40.587Z",
  "text": "i can replicate.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "checking why now",
  "id": "5da087cc80e62056e4e6edd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:46:52.506Z",
  "text": "checking why now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I commented in the PR: <a href=\"https://github.com/numba/numba/pull/4480/files#r334000929\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/pull/4480/files#r334000929</a>",
  "id": "5da088ad158cfd6735113082",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:50:37.290Z",
  "text": "I commented in the PR: https://github.com/numba/numba/pull/4480/files#r334000929",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4480/files#r334000929"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s really due to the odd inconsistence in numba in handling default argument",
  "id": "5da088d239e2ef28adc3a6b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T13:51:14.484Z",
  "text": "it\u2019s really due to the odd inconsistence in numba in handling default argument",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>, it works like a charm. I think the PR will be ready soon for review.",
  "id": "5da08afe4afd703a4ebff4e1",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T14:00:30.489Z",
  "text": "thanks @sklam, it works like a charm. I think the PR will be ready soon for review.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": ":thumbsup: ",
  "id": "5da08eb8f1c89c0758ce6e29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T14:16:24.779Z",
  "text": ":thumbsup: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "question about migrating <code>mean</code>to <code>overload</code> to add <code>axis</code>.  The current <code>mean</code>is able to deal with <code>np.datetime64</code> but an overload-based version fails because of <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4540\" class=\"issue\">#4540</a>. To go ahead and break support for <code>np.datetime64</code> does not feel right, but I have no idea how to fix <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4540\" class=\"issue\">#4540</a>. Opinions? Is <code>axis</code> more important than <code>np.datetime64</code>? Probably yes but not breaking functionality is probably more important than adding new stuff. ",
  "id": "5da0c85565dd8569a0bd1c1c",
  "issues": [
   {
    "number": "4540"
   },
   {
    "number": "4540"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T18:22:13.047Z",
  "text": "question about migrating `mean`to `overload` to add `axis`.  The current `mean`is able to deal with `np.datetime64` but an overload-based version fails because of #4540. To go ahead and break support for `np.datetime64` does not feel right, but I have no idea how to fix #4540. Opinions? Is `axis` more important than `np.datetime64`? Probably yes but not breaking functionality is probably more important than adding new stuff. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> I&#39;ll queue up <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4540\" class=\"issue\">#4540</a> for a fix, seems like its blocking a couple of things. And yes, not breaking stuff that works is a good idea :)",
  "id": "5da0ce2880e62056e4e90043",
  "issues": [
   {
    "number": "4540"
   }
  ],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T18:47:04.056Z",
  "text": "@luk-f-a I'll queue up #4540 for a fix, seems like its blocking a couple of things. And yes, not breaking stuff that works is a good idea :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> ",
  "id": "5da0ceb757c2517c6aef9e82",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T18:49:27.439Z",
  "text": "thanks @stuartarchibald ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "np",
  "id": "5da0d0b5dbf676673441def6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T18:57:57.961Z",
  "text": "np",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I&#39;m trying to write a test for <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4432\" href=\"https://github.com/numba/numba/pull/4432\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4432</a> mimicking the existing tests. How do I create the <code>return_type</code> for <code>compile_isolated</code>?",
  "id": "5da0f1c7c87a1d28ac9268c9",
  "issues": [
   {
    "number": "4432",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:19:03.591Z",
  "text": "I'm trying to write a test for https://github.com/numba/numba/pull/4432 mimicking the existing tests. How do I create the `return_type` for `compile_isolated`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I tried just calling the Python function on the input and using <code>typeof</code>, but I get ",
  "id": "5da0f1e665dd8569a0be5096",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:19:34.094Z",
  "text": "I tried just calling the Python function on the input and using `typeof`, but I get ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<pre><code>No conversion from <span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(float64, <span class=\"number\">1</span>d, A)</span></span> to <span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(float64, <span class=\"number\">1</span>d, C)</span></span> <span class=\"keyword\">for</span> <span class=\"string\">'$0.9'</span>, defined at None</code></pre>",
  "id": "5da0f1e939e2ef28adc69ffc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:19:37.932Z",
  "text": "```\nNo conversion from array(float64, 1d, A) to array(float64, 1d, C) for '$0.9', defined at None\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I think I figured it out. Something to do with the numba runtime accidentally being disabled.",
  "id": "5da0f764c87a1d28ac929302",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:43:00.082Z",
  "text": "I think I figured it out. Something to do with the numba runtime accidentally being disabled.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I&#39;m not getting a memory leak error in my test. How can I debug that?",
  "id": "5da0f76f39d0c70757925e74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:43:11.030Z",
  "text": "I'm not getting a memory leak error in my test. How can I debug that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I&#39;d also like to  know about debugging memory leaks.",
  "id": "5da0f79b158cfd6735143cd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:43:55.345Z",
  "text": "I'd also like to  know about debugging memory leaks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I&#39;d like to know if it&#39;s possible to print reference counts of all or specific reference-counted objects and what the borrow/steal policy is for functions (if there&#39;s a general rule).",
  "id": "5da0f82739e2ef28adc6c8aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:46:15.293Z",
  "text": "I'd like to know if it's possible to print reference counts of all or specific reference-counted objects and what the borrow/steal policy is for functions (if there's a general rule).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "It looks like it&#39;s handled by the numba runtime. I&#39;m trying to see if there&#39;s anything in there that would let you do that. ",
  "id": "5da0f8b739e2ef28adc6cd13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:48:39.891Z",
  "text": "It looks like it's handled by the numba runtime. I'm trying to see if there's anything in there that would let you do that. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<p>I&#39;ve been putting in</p><pre><code><span class=\"keyword\">if</span> context<span class=\"class\">.enable_nrt</span>:\n    context<span class=\"class\">.nrt</span><span class=\"class\">.incref</span>(...)</code></pre><p>in particular places that would segfault otherwise, but I could be missing spots (or being too coarse and causing leaks). I&#39;d like to do it more systematically. Having this information in a public place\u2014the extending documentation\u2014would be a good thing.</p>",
  "id": "5da0f959f88b526fb9213557",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:51:21.330Z",
  "text": "I've been putting in\n```\nif context.enable_nrt:\n    context.nrt.incref(...)\n```\nin particular places that would segfault otherwise, but I could be missing spots (or being too coarse and causing leaks). I'd like to do it more systematically. Having this information in a public place\u2014the extending documentation\u2014would be a good thing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Is there documentation on the Numba Runtime? If so, I&#39;d like to read it, too.",
  "id": "5da0f9a457c2517c6af0cba3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:52:36.589Z",
  "text": "Is there documentation on the Numba Runtime? If so, I'd like to read it, too.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I guess there is this ",
  "id": "5da0f9b539e2ef28adc6d27b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:52:53.443Z",
  "text": "I guess there is this ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<a href=\"https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html</a>",
  "id": "5da0f9b58e2e9a7c6be005b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:52:53.888Z",
  "text": "https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html",
  "unread": false,
  "urls": [
   {
    "url": "https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Thanks! (I just found this a second earlier, just web-searching the question I had asked.)",
  "id": "5da0f9dc4afd703a4ec32c6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:53:32.857Z",
  "text": "Thanks! (I just found this a second earlier, just web-searching the question I had asked.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "There is also the memory leak mixin used in the numba tests that you could probably use in your own test suite to detect leaks ",
  "id": "5da0f9ff894dee56e528126a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:54:07.287Z",
  "text": "There is also the memory leak mixin used in the numba tests that you could probably use in your own test suite to detect leaks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "although all it does is check the allocation stats before and after ",
  "id": "5da0fa2c89acff6ff5dc693d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:54:52.452Z",
  "text": "although all it does is check the allocation stats before and after ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I haven&#39;t been able to find that mixin yet...",
  "id": "5da0fa5d89acff6ff5dc6ae8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:55:41.494Z",
  "text": "I haven't been able to find that mixin yet...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "it&#39;s in numba.tests.support",
  "id": "5da0fa724afd703a4ec32fe1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-10-11T21:56:02.293Z",
  "text": "it's in numba.tests.support",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/master/numba/tests/support.py#L627\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/master/numba/tests/support.py#L627</a>",
  "id": "5da0fa9039e2ef28adc6d836",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-10-11T21:56:32.398Z",
  "text": "https://github.com/numba/numba/blob/master/numba/tests/support.py#L627",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/master/numba/tests/support.py#L627"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Thank you!",
  "id": "5da0fa99dbf6766734430260",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-10-11T21:56:41.377Z",
  "text": "Thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "it only works with unittest but it&#39;s not too complicated of logic ",
  "id": "5da0faba4afd703a4ec3323f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-10-11T21:57:14.757Z",
  "text": "it only works with unittest but it's not too complicated of logic ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "How about this: <a href=\"https://github.com/numba/numba/blob/c5461dd295663559b55f7e59280df9317062887c/numba/runtime/nrtdynmod.py#L11-L12\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/c5461dd295663559b55f7e59280df9317062887c/numba/runtime/nrtdynmod.py#L11-L12</a>",
  "id": "5da0fc04158cfd6735145df7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2019-10-11T22:02:44.149Z",
  "text": "How about this: https://github.com/numba/numba/blob/c5461dd295663559b55f7e59280df9317062887c/numba/runtime/nrtdynmod.py#L11-L12",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/c5461dd295663559b55f7e59280df9317062887c/numba/runtime/nrtdynmod.py#L11-L12"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "that&#39;s interesting ",
  "id": "5da0fc79f88b526fb9214628",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:04:41.789Z",
  "text": "that's interesting ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "We&#39;d get a runtime printout whenever <code>numba.runtime.nrtdynmod._define_nrt_incref</code> or <code>_define_nrt_decref</code> gets called.",
  "id": "5da0fc7a8e2e9a7c6be01a3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:04:42.944Z",
  "text": "We'd get a runtime printout whenever `numba.runtime.nrtdynmod._define_nrt_incref` or `_define_nrt_decref` gets called.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "it seems to just print stuff like",
  "id": "5da0fc8565dd8569a0be9de7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:04:53.590Z",
  "text": "it seems to just print stuff like",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<pre><code><span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span> NRT_Incref 1 [0x55ab49a36e70]\n<span class=\"keyword\">*</span><span class=\"keyword\">*</span><span class=\"keyword\">*</span> NRT_Decref 2 [0x55ab49a36e70]</code></pre>",
  "id": "5da0fc8e57c2517c6af0e0f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:05:02.766Z",
  "text": "```\n*** NRT_Incref 1 [0x55ab49a36e70]\n*** NRT_Decref 2 [0x55ab49a36e70]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I mean, when the code generated by those two functions gets called.",
  "id": "5da0fc94870fa33a4dd6fa96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:05:08.494Z",
  "text": "I mean, when the code generated by those two functions gets called.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "That would be enough in <em>simple</em> tests to find out if they balance.",
  "id": "5da0fca64afd703a4ec3419e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:05:26.698Z",
  "text": "That would be enough in _simple_ tests to find out if they balance.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I&#39;m a little confused, though. They seem to be balanced for my function that has a leak and only printing decref for the one that doesn&#39;t. ",
  "id": "5da0fccc8e2e9a7c6be01cff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:06:04.590Z",
  "text": "I'm a little confused, though. They seem to be balanced for my function that has a leak and only printing decref for the one that doesn't. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "it must not be the case that every incref or decref goes through the function that looks at that print flag ",
  "id": "5da0fd13c87a1d28ac92b9ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:07:15.036Z",
  "text": "it must not be the case that every incref or decref goes through the function that looks at that print flag ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "It looks like <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> was the primary author, 2-5 years ago.",
  "id": "5da0fd3d39e2ef28adc6ebdc",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:07:57.949Z",
  "text": "It looks like @sklam was the primary author, 2-5 years ago.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "you can also set the debug  variables in C ",
  "id": "5da0fda339d0c70757928619",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:09:39.178Z",
  "text": "you can also set the debug  variables in C ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<a href=\"https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html#debugging-leaks-in-c\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html#debugging-leaks-in-c</a>",
  "id": "5da0fda3158cfd67351466ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:09:39.698Z",
  "text": "https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html#debugging-leaks-in-c",
  "unread": false,
  "urls": [
   {
    "url": "https://numba.pydata.org/numba-doc/dev/developer/numba-runtime.html#debugging-leaks-in-c"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Are you compiling NRT? (I&#39;m not.)",
  "id": "5da0fdd9158cfd67351468ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:10:33.901Z",
  "text": "Are you compiling NRT? (I'm not.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "if you change the <code>if 0</code> to <code>if 1</code> that seems to print all allocations ",
  "id": "5da0fddc4afd703a4ec34a9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:10:36.337Z",
  "text": "if you change the `if 0` to `if 1` that seems to print all allocations ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yeah I&#39;m trying to write a test for numba itself, so recompiling numba is not a big deal ",
  "id": "5da0fdeff1c89c0758d189c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:10:55.275Z",
  "text": "yeah I'm trying to write a test for numba itself, so recompiling numba is not a big deal ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I guess in general you&#39;d have to have a debug build of numba ",
  "id": "5da0fdfd89acff6ff5dc802e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:11:09.124Z",
  "text": "I guess in general you'd have to have a debug build of numba ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I guess the thing to do would be to have a... yes. I separate debug build.",
  "id": "5da0fe0ec87a1d28ac92c15d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:11:26.955Z",
  "text": "I guess the thing to do would be to have a... yes. I separate debug build.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "interesting. With those debug flags enabled I get",
  "id": "5da0fe1365dd8569a0bea7da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:11:31.958Z",
  "text": "interesting. With those debug flags enabled I get",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<pre><code>NRT_Allocate bytes=<span class=\"number\">40</span> ptr=<span class=\"number\">0x56010e5627a0</span>\nNRT_adapt_ndarray_from_python <span class=\"number\">0x56010e5627a0</span>\n*** NRT_Incref <span class=\"number\">1</span> [<span class=\"number\">0x56010e5627a0</span>]\n*** NRT_Decref <span class=\"number\">2</span> [<span class=\"number\">0x56010e5627a0</span>]</code></pre>",
  "id": "5da0fe184afd703a4ec34cb6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:11:36.764Z",
  "text": "```\nNRT_Allocate bytes=40 ptr=0x56010e5627a0\nNRT_adapt_ndarray_from_python 0x56010e5627a0\n*** NRT_Incref 1 [0x56010e5627a0]\n*** NRT_Decref 2 [0x56010e5627a0]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Compare that to the test that doesn&#39;t have any leaks:",
  "id": "5da0fe2180e62056e4ea6043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:11:45.572Z",
  "text": "Compare that to the test that doesn't have any leaks:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<pre><code>NRT_Allocate bytes=<span class=\"number\">40</span> ptr=<span class=\"number\">0x555a720072f0</span>\nNRT_adapt_ndarray_from_python <span class=\"number\">0x555a720072f0</span>\n*** NRT_Decref <span class=\"number\">1</span> [<span class=\"number\">0x555a720072f0</span>]\nNRT_MemInfo_call_dtor <span class=\"number\">0x555a720072f0</span>\nNRT_Free <span class=\"number\">0x555a720072f0</span>\nNRT_Allocate bytes=<span class=\"number\">40</span> ptr=<span class=\"number\">0x555a720072f0</span>\nNRT_adapt_ndarray_from_python <span class=\"number\">0x555a720072f0</span>\n*** NRT_Decref <span class=\"number\">1</span> [<span class=\"number\">0x555a720072f0</span>]\nNRT_MemInfo_call_dtor <span class=\"number\">0x555a720072f0</span>\nNRT_Free <span class=\"number\">0x555a720072f0</span></code></pre>",
  "id": "5da0fe2bf88b526fb921526b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:11:55.845Z",
  "text": "```\nNRT_Allocate bytes=40 ptr=0x555a720072f0\nNRT_adapt_ndarray_from_python 0x555a720072f0\n*** NRT_Decref 1 [0x555a720072f0]\nNRT_MemInfo_call_dtor 0x555a720072f0\nNRT_Free 0x555a720072f0\nNRT_Allocate bytes=40 ptr=0x555a720072f0\nNRT_adapt_ndarray_from_python 0x555a720072f0\n*** NRT_Decref 1 [0x555a720072f0]\nNRT_MemInfo_call_dtor 0x555a720072f0\nNRT_Free 0x555a720072f0\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "So the <code>nrtdynmod</code> debug flag shows <code>nrt.incref</code>/<code>nrt.decref</code> while the C compiler flag shows actual allocations and frees?",
  "id": "5da0fe8965dd8569a0beaa98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:13:29.609Z",
  "text": "So the `nrtdynmod` debug flag shows `nrt.incref`/`nrt.decref` while the C compiler flag shows actual allocations and frees?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "so why isn&#39;t the NRT_Decref printed from the dynamic module accompanied from a NRT_Free from the runtime?",
  "id": "5da0fe9639e2ef28adc6f93d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:13:42.661Z",
  "text": "so why isn't the NRT_Decref printed from the dynamic module accompanied from a NRT_Free from the runtime?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yeah",
  "id": "5da0fe9f158cfd67351470a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:13:51.299Z",
  "text": "yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "presumably if you have a leak you could enter a debugger and try to figure out what the memory address is referencing ",
  "id": "5da0fed939d0c70757929007",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:14:49.781Z",
  "text": "presumably if you have a leak you could enter a debugger and try to figure out what the memory address is referencing ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I was just looking at the <code>nrtdynmod</code> code and the pointer is the reference count itself.",
  "id": "5da0fefff88b526fb9215766",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:15:27.538Z",
  "text": "I was just looking at the `nrtdynmod` code and the pointer is the reference count itself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "ah ok",
  "id": "5da0ff1539d0c707579290b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:15:49.520Z",
  "text": "ah ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<pre><code class=\"python\">    <span class=\"keyword\">if</span> _debug_print:\n        cgutils.printf(builder, <span class=\"string\">\"*** NRT_Decref %zu [%p]\\n\"</span>, builder.load(ptr),\n                       ptr)</code></pre>",
  "id": "5da0ff2780e62056e4ea68ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:16:07.544Z",
  "text": "```python\n    if _debug_print:\n        cgutils.printf(builder, \"*** NRT_Decref %zu [%p]\\n\", builder.load(ptr),\n                       ptr)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I think that&#39;s what the <code>1</code> and the <code>2</code> are.",
  "id": "5da0ff36158cfd673514741a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:16:22.649Z",
  "text": "I think that's what the `1` and the `2` are.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I guess the 1 and 2 are the ref counts before they are incremented/decremented ",
  "id": "5da0ff56870fa33a4dd70c1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:16:54.635Z",
  "text": "I guess the 1 and 2 are the ref counts before they are incremented/decremented ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Yes, before.",
  "id": "5da0ff6a870fa33a4dd70c37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-10-11T22:17:14.127Z",
  "text": "Yes, before.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "So in this case:<pre><code>NRT_Allocate bytes=<span class=\"number\">40</span> ptr=<span class=\"number\">0x56010e5627a0</span>\nNRT_adapt_ndarray_from_python <span class=\"number\">0x56010e5627a0</span>\n*** NRT_Incref <span class=\"number\">1</span> [<span class=\"number\">0x56010e5627a0</span>]\n*** NRT_Decref <span class=\"number\">2</span> [<span class=\"number\">0x56010e5627a0</span>]</code></pre>",
  "id": "5da0ffa9f88b526fb9215b8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:18:17.660Z",
  "text": "So in this case:\n```\nNRT_Allocate bytes=40 ptr=0x56010e5627a0\nNRT_adapt_ndarray_from_python 0x56010e5627a0\n*** NRT_Incref 1 [0x56010e5627a0]\n*** NRT_Decref 2 [0x56010e5627a0]\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Someone else is incrementing it.",
  "id": "5da0ffb2f88b526fb9215c08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:18:26.543Z",
  "text": "Someone else is incrementing it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "And that goes unreported.",
  "id": "5da0ffcadbf6766734432481",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:18:50.596Z",
  "text": "And that goes unreported.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "This is the function ",
  "id": "5da10003dbf6766734432727",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:19:47.844Z",
  "text": "This is the function ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<a href=\"https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-650170031c867f1277477fa1d82c925eR17-R19\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-650170031c867f1277477fa1d82c925eR17-R19</a>",
  "id": "5da1000480e62056e4ea6da2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:19:48.254Z",
  "text": "https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-650170031c867f1277477fa1d82c925eR17-R19",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-650170031c867f1277477fa1d82c925eR17-R19"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "except the problem is with bounds checking enabled specifically ",
  "id": "5da1001a4afd703a4ec35b1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:20:10.376Z",
  "text": "except the problem is with bounds checking enabled specifically ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "something about the array being created from the slice, and the exception being raised ",
  "id": "5da1003257c2517c6af0f6b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:20:34.745Z",
  "text": "something about the array being created from the slice, and the exception being raised ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "maybe my logic is wrong here <a href=\"https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-36c9ab8fa31f756e0da52905db0a95deR706\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-36c9ab8fa31f756e0da52905db0a95deR706</a>",
  "id": "5da1007280e62056e4ea7006",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:21:38.049Z",
  "text": "maybe my logic is wrong here https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-36c9ab8fa31f756e0da52905db0a95deR706",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-36c9ab8fa31f756e0da52905db0a95deR706"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "or rather here <a href=\"https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-81d8f85ead1fb3ae948c94ed8d2a969eR355\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-81d8f85ead1fb3ae948c94ed8d2a969eR355</a>",
  "id": "5da100ad80e62056e4ea7213",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:22:37.607Z",
  "text": "or rather here https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-81d8f85ead1fb3ae948c94ed8d2a969eR355",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/4432/files/035daf4d1ce29fb35bf9fb047d5382c24a634ff5#diff-81d8f85ead1fb3ae948c94ed8d2a969eR355"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Is the test supposed to fail bounds checking? Maybe there&#39;s a memory leak when the return path is through the exception, rather than the normal return?",
  "id": "5da100cc894dee56e528436f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:23:08.276Z",
  "text": "Is the test supposed to fail bounds checking? Maybe there's a memory leak when the return path is through the exception, rather than the normal return?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yes, that is definitely it ",
  "id": "5da100d58e2e9a7c6be035bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:23:17.178Z",
  "text": "yes, that is definitely it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Okay.",
  "id": "5da100d98e2e9a7c6be035be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:23:21.026Z",
  "text": "Okay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I commented out the other lines, it fails on the one that raises the exception ",
  "id": "5da100dd89acff6ff5dc95cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:23:25.261Z",
  "text": "I commented out the other lines, it fails on the one that raises the exception ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Another thing I don&#39;t know about NRT: does all of the memory allocated during a jitted function get dropped in bulk at the end (like a process) or do functions have to be exactly right in the reference count (like a function)?",
  "id": "5da10135f1c89c0758d19efe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:24:53.438Z",
  "text": "Another thing I don't know about NRT: does all of the memory allocated during a jitted function get dropped in bulk at the end (like a process) or do functions have to be exactly right in the reference count (like a function)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I think it&#39;s because my slice is noncontinguous, so it creates a copy.",
  "id": "5da1015b8e2e9a7c6be0388c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:25:31.805Z",
  "text": "I think it's because my slice is noncontinguous, so it creates a copy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "Like, if NRT is allocating into a custom arena, it could just drop that arena. But if it uses <code>malloc</code>, it needs to be exactly right because the Python process continues after the Numbafied function is done.",
  "id": "5da10176870fa33a4dd71b21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-10-11T22:25:58.074Z",
  "text": "Like, if NRT is allocating into a custom arena, it could just drop that arena. But if it uses `malloc`, it needs to be exactly right because the Python process continues after the Numbafied function is done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "(Spotty internet; I&#39;m on a train.)",
  "id": "5da1018857c2517c6af10122",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-10-11T22:26:16.706Z",
  "text": "(Spotty internet; I'm on a train.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I don&#39;t know. ",
  "id": "5da101b357c2517c6af10319",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-10-11T22:26:59.333Z",
  "text": "I don't know. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "That makes sense (slice creating a copy). Although this particular slice <code>[10:,10]</code> isn&#39;t non-contiguous. It shouldn&#39;t, in principle, need to make a copy.",
  "id": "5da101c1809de9699f201ecd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-10-11T22:27:13.087Z",
  "text": "That makes sense (slice creating a copy). Although this particular slice `[10:,10]` isn't non-contiguous. It shouldn't, in principle, need to make a copy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yeah I could be wrong about that ",
  "id": "5da101d165dd8569a0bebf67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-10-11T22:27:29.881Z",
  "text": "yeah I could be wrong about that ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "If it wasn&#39;t out of bounds, there&#39;s a shape/stride that would provide it.",
  "id": "5da101f6dbf67667344336a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-10-11T22:28:06.058Z",
  "text": "If it wasn't out of bounds, there's a shape/stride that would provide it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "This function: <code>numba.targets.arrayobj.getitem_array_tuple</code> performs the array tuple slicing.",
  "id": "5da1028e39e2ef28adc715c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-10-11T22:30:38.494Z",
  "text": "This function: `numba.targets.arrayobj.getitem_array_tuple` performs the array tuple slicing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arrayobj.py#L427-L449\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arrayobj.py#L427-L449</a>",
  "id": "5da102b0dbf6766734433bc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-10-11T22:31:12.873Z",
  "text": "https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arrayobj.py#L427-L449",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arrayobj.py#L427-L449"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "It calls <code>impl_ret_borrowed</code>.",
  "id": "5da102be8e2e9a7c6be040b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-10-11T22:31:26.301Z",
  "text": "It calls `impl_ret_borrowed`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "interesting ",
  "id": "5da102e4870fa33a4dd72466",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-11T22:32:04.054Z",
  "text": "interesting ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "the function called before that is the one that generates the exception raising instruction ",
  "id": "5da102ef39d0c7075792a952",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-11T22:32:15.962Z",
  "text": "the function called before that is the one that generates the exception raising instruction ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "<a href=\"https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/targets/imputils.py#L429-L437\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/targets/imputils.py#L429-L437</a>",
  "id": "5da102f24afd703a4ec36e65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-11T22:32:18.901Z",
  "text": "https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/targets/imputils.py#L429-L437",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/bdd8e312a24c5b76ee4fe480abe553cff349aa51/numba/targets/imputils.py#L429-L437"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<code>_getitem_array_generic</code>, which calls <code>basic_indexing</code> which calls <code>boundscheck</code>",
  "id": "5da1030339e2ef28adc7186f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-11T22:32:35.707Z",
  "text": "`_getitem_array_generic`, which calls `basic_indexing` which calls `boundscheck`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "There&#39;s an <code>incref</code> in it. Does that particular <code>incref</code> trigger the debug message?",
  "id": "5da10307f1c89c0758d1ab5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-11T22:32:39.552Z",
  "text": "There's an `incref` in it. Does that particular `incref` trigger the debug message?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yeah that incref is being called ",
  "id": "5da1032f39e2ef28adc71991",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-11T22:33:19.804Z",
  "text": "yeah that incref is being called ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "I&#39;m curious to know if that &quot;internal&quot; incref triggers a debug message (because I want to know if the debug message is useful).",
  "id": "5da10352f88b526fb921745c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-11T22:33:54.624Z",
  "text": "I'm curious to know if that \"internal\" incref triggers a debug message (because I want to know if the debug message is useful).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jpivarski",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1852447?v=4&s=60",
   "displayName": "Jim Pivarski",
   "gv": "4",
   "id": "5a4e9793d73408ce4f862a26",
   "url": "/jpivarski",
   "username": "jpivarski",
   "v": 47
  },
  "html": "It seems like some incref is not getting logged because you see a ref count of <code>2</code> with only one incref logged.",
  "id": "5da10372f88b526fb9217522",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-11T22:34:26.545Z",
  "text": "It seems like some incref is not getting logged because you see a ref count of `2` with only one incref logged.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I&#39;m not sure how I could link them ",
  "id": "5da103c7894dee56e52858c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-11T22:35:51.279Z",
  "text": "I'm not sure how I could link them ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "anyway, I think it won&#39;t be called. because the exception raising instruction will be called first ",
  "id": "5da10441809de9699f202d4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-11T22:37:53.653Z",
  "text": "anyway, I think it won't be called. because the exception raising instruction will be called first ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "it is being generated",
  "id": "5da1044739e2ef28adc72043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-11T22:37:59.610Z",
  "text": "it is being generated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-13T15:53:56.871Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "<p>Hi, could someone explain to me the state of strings in numba?  String inputs seemed to be skipped here <a href=\"https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arraymath.py#L3686-L3719\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arraymath.py#L3686-L3719</a> but work with numpy  </p><pre><code>def <span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(x)</span></span>:\n    <span class=\"tag\">a</span> = np.<span class=\"function\"><span class=\"title\">asarray</span><span class=\"params\">(x)</span></span>\n    <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(repr(a)</span></span>, <span class=\"tag\">a</span>.shape)\n<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span></span>\n<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>\n<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(True)</span></span>\n<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">((False, True)</span></span>)\n<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(<span class=\"string\">\"\"</span>)</span></span>\n<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(<span class=\"string\">\"Hello\"</span>)</span></span>\n\nclass <span class=\"function\"><span class=\"title\">Foo</span><span class=\"params\">(object)</span></span>:\n    pass\n\n<span class=\"function\"><span class=\"title\">f</span><span class=\"params\">(Foo()</span></span>)</code></pre><p>returns</p><pre><code><span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span></span> (<span class=\"number\">3</span>,)\n<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span> ()\n<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(True)</span></span> ()\n<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([False,  True])</span></span> (<span class=\"number\">2</span>,)\n<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(<span class=\"string\">''</span>, dtype=<span class=\"string\">'&lt;U1'</span>)</span></span> ()\n<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(<span class=\"string\">'Hello'</span>, dtype=<span class=\"string\">'&lt;U5'</span>)</span></span> ()\n<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(&lt;__main__.Foo object at <span class=\"number\">0</span>x117077550&gt;, dtype=object)</span></span> ()</code></pre><p>I see code like this <a href=\"https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/tests/test_array_manipulation.py#L785-L786\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/tests/test_array_manipulation.py#L785-L786</a> which makes me think that maybe unicode isn&#39;t supported yet in numba?  Would it be difficult to add support for it in <code>np.asarray</code> (and by proxy a lot of <code>@overload</code>ed methods that use it)?</p>",
  "id": "5da34882c87a1d28aca25692",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-13T15:53:38.187Z",
  "text": "Hi, could someone explain to me the state of strings in numba?  String inputs seemed to be skipped here https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arraymath.py#L3686-L3719 but work with numpy  \n```\ndef f(x):\n    a = np.asarray(x)\n    print(repr(a), a.shape)\nf([1, 2, 3])\nf(0)\nf(True)\nf((False, True))\nf(\"\")\nf(\"Hello\")\n\nclass Foo(object):\n    pass\n\nf(Foo())\n``` \nreturns\n ```\narray([1, 2, 3]) (3,)\narray(0) ()\narray(True) ()\narray([False,  True]) (2,)\narray('', dtype='<U1') ()\narray('Hello', dtype='<U5') ()\narray(<__main__.Foo object at 0x117077550>, dtype=object) ()\n```\nI see code like this https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/tests/test_array_manipulation.py#L785-L786 which makes me think that maybe unicode isn't supported yet in numba?  Would it be difficult to add support for it in `np.asarray` (and by proxy a lot of `@overload`ed methods that use it)?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/targets/arraymath.py#L3686-L3719"
   },
   {
    "url": "https://github.com/numba/numba/blob/80978f3a53eae8344c69cb1e8269e129dfd411df/numba/tests/test_array_manipulation.py#L785-L786"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2019-10-13T16:01:19.965Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "as far as I know it&#39;s not possible to have a numpy array of python string (unicode) objects, that&#39;s why numpy provides the <code>U*</code> dtype that you see there.",
  "id": "5da34a45dbf6766734525c68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-13T16:01:09.510Z",
  "text": "as far as I know it's not possible to have a numpy array of python string (unicode) objects, that's why numpy provides the `U*` dtype that you see there.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I mean, it&#39;s not possible in plain python and therefore not possible in numba",
  "id": "5da34ac880e62056e4f9f0e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-13T16:03:20.569Z",
  "text": "I mean, it's not possible in plain python and therefore not possible in numba",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "And we just don&#39;t support those dtypes yet in numba?",
  "id": "5da3511a158cfd673524362e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-13T16:30:18.158Z",
  "text": "And we just don't support those dtypes yet in numba?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "yes, numba does support them but very recently, from 0.45 or 0.46",
  "id": "5da35547158cfd673524542c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-13T16:48:07.931Z",
  "text": "yes, numba does support them but very recently, from 0.45 or 0.46",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I think this didn&#39;t work in 0.45.1 but it does in 0.46<pre><code><span class=\"decorator\">@numba.njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(unicode_arr)</span>:</span>\n    <span class=\"keyword\">if</span> unicode_arr[<span class=\"number\">0</span>]==<span class=\"string\">'print'</span>:\n        print(<span class=\"string\">'success!'</span>)\n\nfoo(np.asarray([<span class=\"string\">'print'</span>]))</code></pre>",
  "id": "5da35f1d39d0c70757a28dae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-13T17:30:05.239Z",
  "text": "I think this didn't work in 0.45.1 but it does in 0.46\n```\n@numba.njit\ndef foo(unicode_arr):\n    if unicode_arr[0]=='print':\n        print('success!')\n    \nfoo(np.asarray(['print']))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "Okay but we don&#39;t currently support doing this conversion ourselves? I.e. something like<pre><code><span class=\"decorator\">@numba.njit()</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">g</span><span class=\"params\">(x)</span>:</span>\n    <span class=\"keyword\">return</span> np.asarray(x)\n\ng([<span class=\"string\">\"hello\"</span>])</code></pre>",
  "id": "5da3938cc87a1d28aca486fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-13T21:13:48.812Z",
  "text": "Okay but we don't currently support doing this conversion ourselves? I.e. something like\n```\n@numba.njit()\ndef g(x):\n    return np.asarray(x)\n\ng([\"hello\"])\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hadn&#39;t tried before but apparently that&#39;s not supported",
  "id": "5da41c7d39d0c70757a78428",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-14T06:58:05.625Z",
  "text": "hadn't tried before but apparently that's not supported",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EPronovost\" class=\"mention\">@EPronovost</span> In 0.46 consumption of an arg which is <code>np.array</code> with a unicode type was added (unicode character array support, see <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4425\" href=\"https://github.com/numba/numba/pull/4425\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4425</a>), creation was not.",
  "id": "5da451dc80e62056e4010997",
  "issues": [
   {
    "number": "4425",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "EPronovost",
    "userId": "5d9034d0d73408ce4fcc5a07",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-14T10:45:48.548Z",
  "text": "@EPronovost In 0.46 consumption of an arg which is `np.array` with a unicode type was added (unicode character array support, see https://github.com/numba/numba/pull/4425), creation was not.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> Is this behavior expected with Unicode characters?</p><pre><code><span class=\"tag\">a</span> = np.<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"string\">\"Hi\"</span>, <span class=\"string\">\"\"</span>])</span></span>\n<span class=\"tag\">b</span> = np.<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"number\">0</span>, <span class=\"number\">1</span>])</span></span>\n\n<span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(numba.typeof(a[<span class=\"number\">0</span>])</span></span>, numba.<span class=\"function\"><span class=\"title\">typeof</span><span class=\"params\">(b[<span class=\"number\">0</span>])</span></span>)\n<span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(numba.typeof(a)</span></span>, numba.<span class=\"function\"><span class=\"title\">typeof</span><span class=\"params\">(b)</span></span>)</code></pre><p>returns</p><pre><code>unicode_type int64\n<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([unichr x <span class=\"number\">2</span>], <span class=\"number\">1</span>d, C)</span></span> <span class=\"function\"><span class=\"title\">array</span><span class=\"params\">(int64, <span class=\"number\">1</span>d, C)</span></span></code></pre><p>I would have expected <code>numba.typeof(a)</code> to be something like <code>array(unichr, 1d, C)</code></p>",
  "id": "5da54c7f65dd8569a0dbfa6e",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T04:35:11.968Z",
  "text": "@stuartarchibald Is this behavior expected with Unicode characters?\n```\na = np.array([\"Hi\", \"\"])\nb = np.array([0, 1])\n\nprint(numba.typeof(a[0]), numba.typeof(b[0]))\nprint(numba.typeof(a), numba.typeof(b))\n```\nreturns\n```\nunicode_type int64\narray([unichr x 2], 1d, C) array(int64, 1d, C)\n```\nI would have expected `numba.typeof(a)` to be something like `array(unichr, 1d, C)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "This presents an issue when trying to use <code>np.nonzero</code> for example <code>No definition for lowering &lt;class &#39;bool&#39;&gt;([unichr x 2],) -&gt; bool</code>",
  "id": "5da54f1465dd8569a0dc0b48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T04:46:12.803Z",
  "text": "This presents an issue when trying to use `np.nonzero` for example `No definition for lowering <class 'bool'>([unichr x 2],) -> bool`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EPronovost\" class=\"mention\">@EPronovost</span> yes, it mirrors NumPy.",
  "id": "5da5b11557c2517c6a112a26",
  "issues": [],
  "mentions": [
   {
    "screenName": "EPronovost",
    "userId": "5d9034d0d73408ce4fcc5a07",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T11:44:21.230Z",
  "text": "@EPronovost yes, it mirrors NumPy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>In [<span class=\"number\">3</span>]: np.<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"string\">\"hello\"</span>])</span></span>                                                                                                     \nOut[<span class=\"number\">3</span>]: <span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"string\">'hello'</span>], dtype=<span class=\"string\">'&lt;U5'</span>)</span></span>\n\nIn [<span class=\"number\">4</span>]: np.<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"string\">\"hello1\"</span>])</span></span>                                                                                                    \nOut[<span class=\"number\">4</span>]: <span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"string\">'hello1'</span>], dtype=<span class=\"string\">'&lt;U6'</span>)</span></span></code></pre>",
  "id": "5da5b12480e62056e40abffd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T11:44:36.914Z",
  "text": "```\nIn [3]: np.array([\"hello\"])                                                                                                     \nOut[3]: array(['hello'], dtype='<U5')\n\nIn [4]: np.array([\"hello1\"])                                                                                                    \nOut[4]: array(['hello1'], dtype='<U6')\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the dtype encodes the number of chars",
  "id": "5da5b130c87a1d28acb3984a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T11:44:48.448Z",
  "text": "the dtype encodes the number of chars",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EPronovost\" class=\"mention\">@EPronovost</span> maybe a workaround could be something like:",
  "id": "5da5b3b557c2517c6a113dc6",
  "issues": [],
  "mentions": [
   {
    "screenName": "EPronovost",
    "userId": "5d9034d0d73408ce4fcc5a07",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T11:55:33.673Z",
  "text": "@EPronovost maybe a workaround could be something like:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<pre><code>In [<span class=\"number\">14</span>]: @numba<span class=\"class\">.jit</span>\n    ...: def <span class=\"function\"><span class=\"title\">bar</span><span class=\"params\">()</span></span>:\n    ...:     <span class=\"tag\">a</span> = np.<span class=\"function\"><span class=\"title\">array</span><span class=\"params\">([<span class=\"string\">\"Hi\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"Lo\"</span>])</span></span>\n    ...:     <span class=\"keyword\">for</span> <span class=\"tag\">i</span> <span class=\"keyword\">in</span> <span class=\"tag\">a</span>:\n    ...:         <span class=\"keyword\">if</span> <span class=\"function\"><span class=\"title\">len</span><span class=\"params\">(i)</span></span> != <span class=\"number\">0</span>:\n    ...:             <span class=\"function\"><span class=\"title\">print</span><span class=\"params\">(i)</span></span></code></pre>",
  "id": "5da5b3d380e62056e40ad403",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T11:56:03.333Z",
  "text": "```\nIn [14]: @numba.jit\n    ...: def bar():\n    ...:     a = np.array([\"Hi\", \"\", \"Lo\"])\n    ...:     for i in a:\n    ...:         if len(i) != 0:\n    ...:             print(i)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "instead of <code>np.nonzero</code>?",
  "id": "5da5b3e48e2e9a7c6b005f8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-15T11:56:20.792Z",
  "text": "instead of `np.nonzero`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> I made a PR to extend <code>bool</code> overloads.  This works for explicit calls to <code>bool</code>, but isn&#39;t being found in the implicit call made inside the <code>is_true</code> of <code>nonzero</code>.  Any ideas why it&#39;s not appearing in the context for <code>nonzero</code>? <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4715\" href=\"https://github.com/numba/numba/pull/4715\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4715</a>",
  "id": "5da9358cdbf67667347c3e1e",
  "issues": [
   {
    "number": "4715",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-18T03:46:20.145Z",
  "text": "@esc I made a PR to extend `bool` overloads.  This works for explicit calls to `bool`, but isn't being found in the implicit call made inside the `is_true` of `nonzero`.  Any ideas why it's not appearing in the context for `nonzero`? https://github.com/numba/numba/pull/4715",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> what is the status of <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4445\" class=\"issue\">#4445</a>? I tried to make casts explicit in Numba IR in <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4717\" class=\"issue\">#4717</a> but that turns out to be tricky b/c you basically have to insert casts for anything that might be assigned twice (ie pretty much everything). <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4445\" class=\"issue\">#4445</a> would make things a lot easier.",
  "id": "5da9df71ea0d6159fd88b510",
  "issues": [
   {
    "number": "4445"
   },
   {
    "number": "4717"
   },
   {
    "number": "4445"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-18T15:51:13.424Z",
  "text": "@sklam what is the status of #4445? I tried to make casts explicit in Numba IR in #4717 but that turns out to be tricky b/c you basically have to insert casts for anything that might be assigned twice (ie pretty much everything). #4445 would make things a lot easier.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "is there anyone here who can help me with writing numba ir? ",
  "id": "5daa1b59c864f3650610e7a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-18T20:06:49.126Z",
  "text": "is there anyone here who can help me with writing numba ir? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "In investigating a problem where implementations for <code>bool</code> are not being found at compile time, I found that there are two <code>builtin_registry</code>: one in <code>typing/templates</code> and another in <code>targets/imputils</code>.   The former is used by <code>@overload</code> and the later is used by <code>@lower_builtin</code>.  Can someone explain to me what the difference between the two is supposed to be?  For different use cases, I seem to need to register an implementation in one or the other.",
  "id": "5dab8ff4fa637359fcab8363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-19T22:36:36.211Z",
  "text": "In investigating a problem where implementations for `bool` are not being found at compile time, I found that there are two `builtin_registry`: one in `typing/templates` and another in `targets/imputils`.   The former is used by `@overload` and the later is used by `@lower_builtin`.  Can someone explain to me what the difference between the two is supposed to be?  For different use cases, I seem to need to register an implementation in one or the other.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EPronovost\" class=\"mention\">@EPronovost</span> answered on your PR.",
  "id": "5dad87ad253dce0537d481a8",
  "issues": [],
  "mentions": [
   {
    "screenName": "EPronovost",
    "userId": "5d9034d0d73408ce4fcc5a07",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T10:25:49.222Z",
  "text": "@EPronovost answered on your PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> what are you interested in doing?",
  "id": "5dad87c20fdc4b6507285743",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T10:26:10.663Z",
  "text": "@asmeurer what are you interested in doing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> it&#39;s for <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4615\" href=\"https://github.com/numba/numba/pull/4615\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4615</a>. I am trying to modify the parfor reduction stage to mask threads. But it is written in numba IR, and I&#39;m having a hard time writing it. ",
  "id": "5dadf2723783af4571c96e11",
  "issues": [
   {
    "number": "4615",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-21T18:01:22.512Z",
  "text": "@stuartarchibald it's for https://github.com/numba/numba/pull/4615. I am trying to modify the parfor reduction stage to mask threads. But it is written in numba IR, and I'm having a hard time writing it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Specifically, I am having a hard time figuring out how to",
  "id": "5dadf2801ee9bc0fca6a5d34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-21T18:01:36.394Z",
  "text": "Specifically, I am having a hard time figuring out how to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<ul>\n<li>Call the get_num_threads function</li>\n</ul>\n",
  "id": "5dadf28a1ee9bc0fca6a5d37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-21T18:01:46.992Z",
  "text": "- Call the get_num_threads function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-21T18:02:18.887Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<ul>\n<li>Have an if/then to skip operations if threads are masked </li>\n</ul>\n",
  "id": "5dadf29fef575b3610a8b37a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-21T18:02:07.957Z",
  "text": "- Have an if/then to skip operations if threads are masked ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EPronovost\" class=\"mention\">@EPronovost</span> sorry, I  was AFK for a few days, is your question still relevant?",
  "id": "5daeb3acfb4dab784ae3034e",
  "issues": [],
  "mentions": [
   {
    "screenName": "EPronovost",
    "userId": "5d9034d0d73408ce4fcc5a07",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-22T07:45:48.680Z",
  "text": "@EPronovost sorry, I  was AFK for a few days, is your question still relevant?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> you should be able to just <code>builder.call</code> it assuming you&#39;ve registered the symbol. What specifically is the issue with calling this function? Here&#39;s an example of how to mangle IR and do things like if/then <a href=\"https://gist.github.com/stuartarchibald/491a85e4d56596d6bf97efb74a8966e2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://gist.github.com/stuartarchibald/491a85e4d56596d6bf97efb74a8966e2</a>",
  "id": "5daed3b19825bd6baca8aac1",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-22T10:02:25.812Z",
  "text": "@asmeurer you should be able to just `builder.call` it assuming you've registered the symbol. What specifically is the issue with calling this function? Here's an example of how to mangle IR and do things like if/then https://gist.github.com/stuartarchibald/491a85e4d56596d6bf97efb74a8966e2",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/stuartarchibald/491a85e4d56596d6bf97efb74a8966e2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Thank you I&#39;ll take a look and see if it helps. I think my problem is with the &quot;assuming you&#39;ve registered the symbol&quot; part. ",
  "id": "5daf27c710bd4128a14038f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-22T16:01:11.277Z",
  "text": "Thank you I'll take a look and see if it helps. I think my problem is with the \"assuming you've registered the symbol\" part. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> No <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> clarified for me... thanks",
  "id": "5db3b50ee886fb5aa2f8decf",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   },
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-26T02:53:02.409Z",
  "text": "@esc No @stuartarchibald clarified for me... thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-26T02:56:31.191Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "<p>Is there something similar to <code>inspect_types()</code> for a jited function for one that has been overloaded?  i.e. I&#39;d like to do</p><pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(arg0, arg1)</span>:</span>\n    <span class=\"keyword\">pass</span>\n\n<span class=\"decorator\">@overload(foo)</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo_impl</span><span class=\"params\">(arg0, arg1)</span>:</span>\n    ...\n\nnumba.inspect_types(foo)</code></pre><p>To basically get at the contents of the compiled overloads for that function in the typing context.</p>",
  "id": "5db3b55da03ae1584f0ea5e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-26T02:54:21.838Z",
  "text": "Is there something similar to `inspect_types()` for a jited function for one that has been overloaded?  i.e. I'd like to do\n```\ndef foo(arg0, arg1):\n    pass\n\n@overload(foo)\ndef foo_impl(arg0, arg1):\n    ...\n\nnumba.inspect_types(foo)\n```\nTo basically get at the contents of the compiled overloads for that function in the typing context.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"EPronovost\" class=\"mention\">@EPronovost</span> don&#39;t think so. What is it you are trying to do? It sounds like you possibly want the <code>typemap</code>",
  "id": "5db6cc0cef84ab3786b0b0cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "EPronovost",
    "userId": "5d9034d0d73408ce4fcc5a07",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-28T11:07:56.243Z",
  "text": "@EPronovost don't think so. What is it you are trying to do? It sounds like you possibly want the `typemap`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> I though about getting the function from the jitted functions dict but wasn&#39;t sure where to start looking, any idea where to start?",
  "id": "5db6d01c9825bd6bace20db7",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-28T11:25:16.561Z",
  "text": "@stuartarchibald I though about getting the function from the jitted functions dict but wasn't sure where to start looking, any idea where to start?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/EPronovost",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8582453?v=4&s=60",
   "displayName": "Ethan Pronovost",
   "gv": "4",
   "id": "5d9034d0d73408ce4fcc5a07",
   "url": "/EPronovost",
   "username": "EPronovost",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>  I was trying something with overloads but it didn&#39;t pan out",
  "id": "5db7ba4f7477946badeb212a",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-29T04:04:31.023Z",
  "text": "@stuartarchibald  I was trying something with overloads but it didn't pan out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Why do the numba docs build off the installed numba? <a href=\"https://github.com/numba/numba/blob/8c6658375c1f8fe50e1a5ccd11d4e7bf5a8053de/docs/source/conf.py#L23-L29\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/8c6658375c1f8fe50e1a5ccd11d4e7bf5a8053de/docs/source/conf.py#L23-L29</a>",
  "id": "5dba095da3f0b17849ba4abc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-30T22:06:21.998Z",
  "text": "Why do the numba docs build off the installed numba? https://github.com/numba/numba/blob/8c6658375c1f8fe50e1a5ccd11d4e7bf5a8053de/docs/source/conf.py#L23-L29",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/8c6658375c1f8fe50e1a5ccd11d4e7bf5a8053de/docs/source/conf.py#L23-L29"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "It seems to me that it should always build from the git version ",
  "id": "5dba09687477946badfc47fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-30T22:06:32.698Z",
  "text": "It seems to me that it should always build from the git version ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think that&#39;s &quot;if numba is installed use it (assumes a doc build from source would have installed numba already cf. the numba build scripts), else assume it&#39;s a source build and look in ../..&quot;",
  "id": "5dbc1b7f3d669b28a015eb73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-11-01T11:48:15.554Z",
  "text": "I think that's \"if numba is installed use it (assumes a doc build from source would have installed numba already cf. the numba build scripts), else assume it's a source build and look in ../..\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Why would it assume that? I never install the dev numba ",
  "id": "5dbc231810bd4128a19ddefa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-11-01T12:20:40.788Z",
  "text": "Why would it assume that? I never install the dev numba ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I guess you don&#39;t want to import the dev numba if you haven&#39;t done an inplace build, but it seems to me the logic is backwards. ",
  "id": "5dbc2366a03ae1584f4a2812",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-11-01T12:21:58.722Z",
  "text": "I guess you don't want to import the dev numba if you haven't done an inplace build, but it seems to me the logic is backwards. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "think it&#39;s written with buildscripts in mind",
  "id": "5dbc237c9c39821509c2eb03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-11-01T12:22:20.749Z",
  "text": "think it's written with buildscripts in mind",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I was confused why my docs changes weren&#39;t being shown in the build until I noticed it was using the installed numba ",
  "id": "5dbc2389ef84ab3786d7e375",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-11-01T12:22:33.745Z",
  "text": "I was confused why my docs changes weren't being shown in the build until I noticed it was using the installed numba ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "why have you got an installed numba and a source checkout that are different?!",
  "id": "5dbc239f9c39821509c2ebc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-11-01T12:22:55.070Z",
  "text": "why have you got an installed numba and a source checkout that are different?!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "That&#39;s how I always work ",
  "id": "5dbc23c89825bd6bac08bb67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-11-01T12:23:36.507Z",
  "text": "That's how I always work ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Installing dev stuff is terrible ",
  "id": "5dbc23d37477946bad0bc4cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-11-01T12:23:47.608Z",
  "text": "Installing dev stuff is terrible ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Completely screws up your environment ",
  "id": "5dbc23e110bd4128a19de52f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-11-01T12:24:01.085Z",
  "text": "Completely screws up your environment ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "some stuff only works if numba is installed, e.g. <code>numba -s</code> and extension points",
  "id": "5dbc240af26ea4729d352a13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:24:42.316Z",
  "text": "some stuff only works if numba is installed, e.g. `numba -s` and extension points",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I&#39;ve never run into problems with it. ",
  "id": "5dbc2428e1c5e915081312e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:25:12.658Z",
  "text": "I've never run into problems with it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I seem to remember the docs even saying to build inplace but I could be remembering a different project ",
  "id": "5dbc2442ef84ab3786d7e7ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:25:38.218Z",
  "text": "I seem to remember the docs even saying to build inplace but I could be remembering a different project ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-11-01T12:35:16.673Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "given the things you&#39;ve worked on (in the Numba code base) I don&#39;t think you would have hit these issues",
  "id": "5dbc24493d669b28a0162ea0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:25:45.623Z",
  "text": "given the things you've worked on (in the Numba code base) I don't think you would have hit these issues",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yes, inplace is recommended",
  "id": "5dbc2451ef84ab3786d7e938",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:25:53.752Z",
  "text": "yes, inplace is recommended",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "In the buildscripts we always install so we can run these things that need installation, the docs build from buildscripts.",
  "id": "5dbc247ce1c5e91508131718",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:26:36.863Z",
  "text": "In the buildscripts we always install so we can run these things that need installation, the docs build from buildscripts.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m not suggesting it&#39;s &quot;right&quot;, it&#39;s just what happens at present",
  "id": "5dbc249d7477946bad0bc9b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:27:09.982Z",
  "text": "I'm not suggesting it's \"right\", it's just what happens at present",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "There&#39;s also the problem with having an installed numba that is different to the source in that you can get in a mess with the rest of the tool chain, e.g. numba 0.44 installed would not work with a 0.46 source checkout.",
  "id": "5dbc24d49c39821509c2f433",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:28:04.172Z",
  "text": "There's also the problem with having an installed numba that is different to the source in that you can get in a mess with the rest of the tool chain, e.g. numba 0.44 installed would not work with a 0.46 source checkout.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Patches/suggestions on how to do it better are welcome as always!",
  "id": "5dbc24eaf26ea4729d352ff5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:28:26.229Z",
  "text": "Patches/suggestions on how to do it better are welcome as always!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> is the problem with the current logic that there&#39;s stuff you&#39;ve got locally i.e. definitions which are being <code>auto*</code> doc&#39;d which are not present because the logic is picking the &quot;wrong&quot; numba ?",
  "id": "5dbc26efa3f0b17849c9d134",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:37:03.285Z",
  "text": "@asmeurer is the problem with the current logic that there's stuff you've got locally i.e. definitions which are being `auto*` doc'd which are not present because the logic is picking the \"wrong\" numba ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m wondering if we just invert the logic if it will solve your problem and have no impact on the buildscripts, because the buildscripts would have installed numba anyway, and source or no source it&#39;ll be the same thing in their isolated envs.",
  "id": "5dbc27a2fb4dab784a446be1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-01T12:40:02.596Z",
  "text": "I'm wondering if we just invert the logic if it will solve your problem and have no impact on the buildscripts, because the buildscripts would have installed numba anyway, and source or no source it'll be the same thing in their isolated envs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yeah that&#39;s what I was thinking. ",
  "id": "5dc0e1ae8fbe1d5faba1fd8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-05T02:42:54.104Z",
  "text": "yeah that's what I was thinking. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "also not of major importance, but one of your sphinx extensions is forcing a full docs rebuild every time you run <code>make html</code>, which is a little annoying ",
  "id": "5dc21548f26ea4729d5ff4e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-06T00:35:20.770Z",
  "text": "also not of major importance, but one of your sphinx extensions is forcing a full docs rebuild every time you run `make html`, which is a little annoying ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4781\" href=\"https://github.com/numba/numba/pull/4781\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4781</a> &lt;-- yay, test turn around times should be significantly reduced now.",
  "id": "5dc28638a3f0b17849f75157",
  "issues": [
   {
    "number": "4781",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-06T08:37:12.591Z",
  "text": "https://github.com/numba/numba/pull/4781 <-- yay, test turn around times should be significantly reduced now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>, what does slicing mean in that context?",
  "id": "5dc2897b2f8a034357457f5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-06T08:51:07.229Z",
  "text": "@esc, what does slicing mean in that context?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "it means, that the test suite is sliced into chunks and each worker only executes one of these chunks",
  "id": "5dc28d7ba3f0b17849f78787",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-06T09:08:11.532Z",
  "text": "it means, that the test suite is sliced into chunks and each worker only executes one of these chunks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<blockquote>\n<p>also not of major importance, but one of your sphinx extensions is forcing a full docs rebuild every time you run <code>make html</code>, which is a little annoying </p></blockquote>\n<p><span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> hmmm, thanks for raising this, is there an easy patch to fix (in which case PR welcome :) thanks) else please could you open a ticket? Thanks.</p>",
  "id": "5dc2932be1c5e9150841c6b9",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-11-06T09:32:27.458Z",
  "text": "> also not of major importance, but one of your sphinx extensions is forcing a full docs rebuild every time you run `make html`, which is a little annoying \n\n@asmeurer hmmm, thanks for raising this, is there an easy patch to fix (in which case PR welcome :) thanks) else please could you open a ticket? Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "<a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4900\" class=\"issue\">#4900</a> is redady for review",
  "id": "5dde6487550662459824f55b",
  "issues": [
   {
    "number": "4900"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-11-27T11:56:55.565Z",
  "text": "#4900 is redady for review",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asodeur\" class=\"mention\">@asodeur</span> thanks I queued it for review.",
  "id": "5dde6eb440f1940ca9e14306",
  "issues": [],
  "mentions": [
   {
    "screenName": "asodeur",
    "userId": "5b39e8fbd73408ce4f9f4daf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-11-27T12:40:20.169Z",
  "text": "@asodeur thanks I queued it for review.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "great, thx",
  "id": "5dde885c26eeb8518f273a15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-11-27T14:29:48.106Z",
  "text": "great, thx",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "are there any existing tests that test the behavior of an environment variable that I can model after? ",
  "id": "5de6cb6c05eec2433dcae7fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-12-03T20:54:04.213Z",
  "text": "are there any existing tests that test the behavior of an environment variable that I can model after? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> <a href=\"https://github.com/numba/numba/blob/42ebf13f62632aa5b008abc11b4dfdbd8c32b283/numba/tests/support.py#L464-L484\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/42ebf13f62632aa5b008abc11b4dfdbd8c32b283/numba/tests/support.py#L464-L484</a> might be what you are looking for? If it meets your then grep around for that? Else shout and we can try and refine the search.  There&#39;s quite a few tests that mangle envvars in various ways for various purposes, the above is the most common.",
  "id": "5de775f032df1245cbde81a9",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-12-04T09:01:36.821Z",
  "text": "@asmeurer https://github.com/numba/numba/blob/42ebf13f62632aa5b008abc11b4dfdbd8c32b283/numba/tests/support.py#L464-L484 might be what you are looking for? If it meets your then grep around for that? Else shout and we can try and refine the search.  There's quite a few tests that mangle envvars in various ways for various purposes, the above is the most common.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/42ebf13f62632aa5b008abc11b4dfdbd8c32b283/numba/tests/support.py#L464-L484"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asmeurer\" class=\"mention\">@asmeurer</span> you about?",
  "id": "5df3cf04e7265623013adf5e",
  "issues": [],
  "mentions": [
   {
    "screenName": "asmeurer",
    "userId": "529c69c1ed5ab0b3bf04d173",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:48:52.307Z",
  "text": "@asmeurer you about?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yes",
  "id": "5df3cf0e2c54ff4c6c3bcb34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:49:02.823Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Easier having a conversation on here than over github message blocks :)",
  "id": "5df3cf1bce2b2e652bcdb7a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:49:15.696Z",
  "text": "Easier having a conversation on here than over github message blocks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "yes",
  "id": "5df3cf29dd4be1390966509e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:49:29.088Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "You seeing this:",
  "id": "5df3cf30c6ce6027ebb5fde5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:49:36.954Z",
  "text": "You seeing this:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<pre><code>numba<span class=\"class\">.errors</span><span class=\"class\">.LoweringError</span>: Failed <span class=\"keyword\">in</span> nopython mode pipeline (step: nopython mode backend)\n<span class=\"string\">'$12call_method.5_size0.190'</span></code></pre>",
  "id": "5df3cf350dc628523e2d6164",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:49:41.208Z",
  "text": "```\nnumba.errors.LoweringError: Failed in nopython mode pipeline (step: nopython mode backend)\n'$12call_method.5_size0.190'\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "or similar ?",
  "id": "5df3cf38e7265623013ae08d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:49:44.782Z",
  "text": "or similar ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-12-13T17:50:50.141Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "",
  "id": "5df3cf4e7ce7ea1e357aab86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:50:06.546Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "<pre><code>[<span class=\"number\">1</span>] During: lowering <span class=\"string\">\"id=16[LoopNest(index_variable = parfor_index.998, range = (0, <span class=\"variable\">$12call_method</span>.5_size0.978, 1)), LoopNest(index_variable = parfor_index.999, range = (0, <span class=\"variable\">$12call_method</span>.5_size1.979, 1))]{150: &lt;ir.Block at /Users/aaronmeurer/Documents/numba/numba/tests/test_num_threads.py (342)&gt;}Var(<span class=\"variable\">$parfor_index_tuple_var</span>.1005, test_num_threads.py:342)\"</span> at /Users/aaronmeurer/Documents/numba/numba/tests/<span class=\"built_in\">test</span>_num_threads.py (<span class=\"number\">342</span>)</code></pre>",
  "id": "5df3cf512c54ff4c6c3bcb36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:50:09.633Z",
  "text": "```\n[1] During: lowering \"id=16[LoopNest(index_variable = parfor_index.998, range = (0, $12call_method.5_size0.978, 1)), LoopNest(index_variable = parfor_index.999, range = (0, $12call_method.5_size1.979, 1))]{150: <ir.Block at /Users/aaronmeurer/Documents/numba/numba/tests/test_num_threads.py (342)>}Var($parfor_index_tuple_var.1005, test_num_threads.py:342)\" at /Users/aaronmeurer/Documents/numba/numba/tests/test_num_threads.py (342)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, so that&#39;s nothing to do with llvmlite call convention changes",
  "id": "5df3cf63c6ce6027ebb5ff10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:50:27.987Z",
  "text": "yeah, so that's nothing to do with llvmlite call convention changes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s probably an update to parfors that&#39;s broken something",
  "id": "5df3cf76dbf24d0bece349b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:50:46.302Z",
  "text": "that's probably an update to parfors that's broken something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "and the same as the one you posed for the first test",
  "id": "5df3cf7c53738c653dfe2fd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:50:52.695Z",
  "text": "and the same as the one you posed for the first test",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I just don&#39;t understand why it worked the other day ",
  "id": "5df3cf8cc5d2ca36108d43ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:51:08.109Z",
  "text": "I just don't understand why it worked the other day ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "it&#39;s possible I&#39;m misremembering it working ",
  "id": "5df3cf94a7877a33fd25b7ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:51:16.125Z",
  "text": "it's possible I'm misremembering it working ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Did you merge master into this branch ?",
  "id": "5df3cfa755d939230005551e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:51:35.429Z",
  "text": "Did you merge master into this branch ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I did, but I checked an old commit and it&#39;s the same error ",
  "id": "5df3cfb3a9850524b47b617e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:51:47.416Z",
  "text": "I did, but I checked an old commit and it's the same error ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmmm, peculiar",
  "id": "5df3cfc4578ecf4b1f99df09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:52:04.027Z",
  "text": "hmmm, peculiar",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-12-13T17:54:11.653Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;ll take a look",
  "id": "5df3d0387d382b523f700397",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:54:00.662Z",
  "text": "I'll take a look",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I just confirmed that you get the same error on linux ",
  "id": "5df3d0aa3ea7e0796eaf29e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:55:54.909Z",
  "text": "I just confirmed that you get the same error on linux ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, so a604ee5 with <code>git cherry-pick -m 1 50a00b1</code> works fine",
  "id": "5df3d0b0f1cc6c27ea433f51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2019-12-13T17:56:00.179Z",
  "text": "ok, so a604ee5 with `git cherry-pick -m 1 50a00b1` works fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "the cherry-pick is to get the LLVM change included.",
  "id": "5df3d0bc0dc628523e2d6e21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:56:12.469Z",
  "text": "the cherry-pick is to get the LLVM change included.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "is that in a PR that isn&#39;t merged yet?",
  "id": "5df3d0d6dd4be139096650a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:56:38.060Z",
  "text": "is that in a PR that isn't merged yet?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that&#39;s on master",
  "id": "5df3d0ea55d9392300055e13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:56:58.683Z",
  "text": "that's on master",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "but a604ee5 is before that",
  "id": "5df3d0f42bca3016aa740af5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:57:08.300Z",
  "text": "but a604ee5 is before that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so I pulled that in so I don&#39;t have to mess about getting an old llvmlite",
  "id": "5df3d104e47fb31eb7a7871b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:57:24.176Z",
  "text": "so I pulled that in so I don't have to mess about getting an old llvmlite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I just merged in the latest master and it still fails ",
  "id": "5df3d11c3ea7e0796eaf29e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:57:48.993Z",
  "text": "I just merged in the latest master and it still fails ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "and the test fails for me after running that cherry pick command ",
  "id": "5df3d1528046982c6cb608f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:58:42.250Z",
  "text": "and the test fails for me after running that cherry pick command ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, there&#39;s two different issues",
  "id": "5df3d159c6ce6027ebb60e74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:58:49.691Z",
  "text": "yeah, there's two different issues",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "oh I didn&#39;t start off of a604ee5",
  "id": "5df3d187dd4be139096650a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:59:35.019Z",
  "text": "oh I didn't start off of a604ee5",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<ol>\n<li>The LLVM level change, which is fine and in <code>50a00b1</code> but requires the newest llvmlite</li>\n</ol>\n",
  "id": "5df3d189dbf24d0bece35dd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T17:59:37.207Z",
  "text": "1. The LLVM level change, which is fine and in `50a00b1` but requires the newest llvmlite",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "if I do that it works ",
  "id": "5df3d18ac5d2ca36108d43ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T17:59:38.894Z",
  "text": "if I do that it works ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "right :thumbsup: ",
  "id": "5df3d1910616d6515e329b85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T17:59:45.135Z",
  "text": "right :thumbsup: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<code>fcf7c7ca</code> + cherry-pick is also ok",
  "id": "5df3d1b142784416abdfbce9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:00:17.631Z",
  "text": "`fcf7c7ca` + cherry-pick is also ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "which points at the merge <code>89a75d27</code> as being the cause of problems",
  "id": "5df3d1d12cc1b31e34124d34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:00:49.900Z",
  "text": "which points at the merge `89a75d27` as being the cause of problems",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I see ",
  "id": "5df3d1e9dd4be139096650a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:01:13.930Z",
  "text": "I see ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "so some merged parfor PR conflicts with the llvmlite fix",
  "id": "5df3d1f9c5d2ca36108d43f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:01:29.130Z",
  "text": "so some merged parfor PR conflicts with the llvmlite fix",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I think the llvmlite fix is a red herring",
  "id": "5df3d2090616d6515e329f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:01:45.547Z",
  "text": "I think the llvmlite fix is a red herring",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "all that did was update a call convention, if we got that wrong pretty much everything would fail (it&#39;s a patch to memcpy/memset)",
  "id": "5df3d2280616d6515e329fe8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:02:16.121Z",
  "text": "all that did was update a call convention, if we got that wrong pretty much everything would fail (it's a patch to memcpy/memset)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m going to try replaying merges to find what broke it",
  "id": "5df3d3b2e47fb31eb7a79eb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:08:50.339Z",
  "text": "I'm going to try replaying merges to find what broke it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "thanks for looking into this ",
  "id": "5df3d3bddd4be139096650aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:09:01.653Z",
  "text": "thanks for looking into this ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "np, I was working on some updates to this and had just got my new tests passing and then found that the old ones were broken with this!",
  "id": "5df3d3e3dbf24d0bece37083",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:09:39.915Z",
  "text": "np, I was working on some updates to this and had just got my new tests passing and then found that the old ones were broken with this!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Right. It&#39;s this <code>[b7300f5f0e4c8b09cf58716101392c916b54d669] Experiment with union type</code> that broke it",
  "id": "5df3dae92cc1b31e34128ddb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T18:39:37.860Z",
  "text": "Right. It's this `[b7300f5f0e4c8b09cf58716101392c916b54d669] Experiment with union type` that broke it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "Are you able to figure out a simpler reproducer? ",
  "id": "5df3db9553738c653dfe2fea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T18:42:29.116Z",
  "text": "Are you able to figure out a simpler reproducer? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://github.com/numba/numba/issues/4963#\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/issues/4963#</a>",
  "id": "5df3dc18578ecf4b1f9a3319",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T18:44:40.980Z",
  "text": "https://github.com/numba/numba/issues/4963#",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/4963#"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "what is the simplest workaround for continuing on this PR? Do a temp revert of that commit? ",
  "id": "5df3dc59a9850524b47b619b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T18:45:45.048Z",
  "text": "what is the simplest workaround for continuing on this PR? Do a temp revert of that commit? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m not sure what the knock-on effects will be",
  "id": "5df3dc8855d939230005a821",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2019-12-13T18:46:32.144Z",
  "text": "I'm not sure what the knock-on effects will be",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "TBH, if you can rip the merge out of history, that&#39;ll let you/me carry on and <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span>/I will try and sort out the problem on mainline.",
  "id": "5df3dcb92cc1b31e34129a6e",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:47:21.132Z",
  "text": "TBH, if you can rip the merge out of history, that'll let you/me carry on and @sklam/I will try and sort out the problem on mainline.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "the merge is needed unfortunately because there were problems with some of the guvectorize tests ",
  "id": "5df3dce43ea7e0796eaf2a0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:48:04.913Z",
  "text": "the merge is needed unfortunately because there were problems with some of the guvectorize tests ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "before merging ",
  "id": "5df3dceaa9850524b47b619d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:48:10.125Z",
  "text": "before merging ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "maybe if I go back far enough it won&#39;t be there. I would have to test it out ",
  "id": "5df3dcf38046982c6cb60911",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:48:19.458Z",
  "text": "maybe if I go back far enough it won't be there. I would have to test it out ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "that merge is huge :)",
  "id": "5df3dcf90dc628523e2dc906",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:48:25.976Z",
  "text": "that merge is huge :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "may not need all of it",
  "id": "5df3dcff2bca3016aa7460d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T18:48:31.615Z",
  "text": "may not need all of it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "tests pass with <code>git revert -m 1 d46a516e1852a3b66226f63cac9a96a1521fba8a</code> ",
  "id": "5df3e16f3ea7e0796eaf2a0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:07:27.758Z",
  "text": "tests pass with `git revert -m 1 d46a516e1852a3b66226f63cac9a96a1521fba8a` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "yeah, that pulls in the union type patch",
  "id": "5df3e24a7d382b523f70804a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:11:06.346Z",
  "text": "yeah, that pulls in the union type patch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so reverting would likely fix",
  "id": "5df3e25e2cc1b31e3412c4cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:11:26.897Z",
  "text": "so reverting would likely fix",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I can work with this locally. Tests will still fail on CI until I can merge in a master with the fix, but I don&#39;t want to muddy the history with reverting that PR, and I think trying to mess with the merges in the history will be too much work ",
  "id": "5df3e26053738c653dfe2fef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:11:28.849Z",
  "text": "I can work with this locally. Tests will still fail on CI until I can merge in a master with the fix, but I don't want to muddy the history with reverting that PR, and I think trying to mess with the merges in the history will be too much work ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "unless it&#39;s unlikely that <a href=\"https://github.com/numba/numba/issues/4963#\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/issues/4963#</a> will be fixed soon ",
  "id": "5df3e26dc5d2ca36108d4405",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:11:41.202Z",
  "text": "unless it's unlikely that https://github.com/numba/numba/issues/4963# will be fixed soon ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/issues/4963#"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "ok, sounds good",
  "id": "5df3e27255d939230005d11f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:11:46.135Z",
  "text": "ok, sounds good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "we&#39;ll need to fix that soon! :)",
  "id": "5df3e27b2cc1b31e3412c689",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:11:55.470Z",
  "text": "we'll need to fix that soon! :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "I guess it has to be fixed one way or another before my PR can be merged anyway ",
  "id": "5df3e288dd4be139096650c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:12:08.005Z",
  "text": "I guess it has to be fixed one way or another before my PR can be merged anyway ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "indeed",
  "id": "5df3e290ce2b2e652bce3bc7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:12:16.431Z",
  "text": "indeed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "actually wouldn&#39;t CI break in my PR regardless, since it always merges master",
  "id": "5df3e2973ea7e0796eaf2a0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:12:23.787Z",
  "text": "actually wouldn't CI break in my PR regardless, since it always merges master",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "so there&#39;s no point to doing that. Just detaching and doing a manual revert works for me locally ",
  "id": "5df3e2a38046982c6cb60913",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:12:35.988Z",
  "text": "so there's no point to doing that. Just detaching and doing a manual revert works for me locally ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks for working around it!",
  "id": "5df3e2aaf1cc6c27ea43bd83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:12:42.908Z",
  "text": "thanks for working around it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asmeurer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/71486?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/71486?v=4&s=60",
   "displayName": "Aaron Meurer",
   "gv": "4",
   "id": "529c69c1ed5ab0b3bf04d173",
   "url": "/asmeurer",
   "username": "asmeurer",
   "v": 49
  },
  "html": "thanks for bisecting ",
  "id": "5df3e30ca7877a33fd25b7f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T19:14:20.460Z",
  "text": "thanks for bisecting ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "no problem",
  "id": "5df3f609ce2b2e652bcec582",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-13T20:35:21.914Z",
  "text": "no problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "numba <code>unbox</code> and <code>box</code> decorators handle object argument passing and return, respectively, within a njitted function. For objects that njitted functions access via namespace lookup, <code>lower_constant</code> decorator can be used. My question is how to &quot;box&quot; objects (from return of a njitted function) that are passed in via namespace lookup?<br>Should the <code>lower_constant</code> store the object pointer so that it could be retrieved from the <code>box</code> decoratored function?<br>^ <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> ",
  "id": "5df54d3ace2b2e652bd7c900",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2019-12-14T20:59:38.048Z",
  "text": "numba `unbox` and `box` decorators handle object argument passing and return, respectively, within a njitted function. For objects that njitted functions access via namespace lookup, `lower_constant` decorator can be used. My question is how to \"box\" objects (from return of a njitted function) that are passed in via namespace lookup?\nShould the `lower_constant` store the object pointer so that it could be retrieved from the `box` decoratored function?\n^ @sklam ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Nevermind my question above, found a better approach in modelling first-class functions..",
  "id": "5df67a9b2bca3016aa8583a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2019-12-15T18:25:31.095Z",
  "text": "Nevermind my question above, found a better approach in modelling first-class functions..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pearu\" class=\"mention\">@pearu</span>, in general, we would want to avoid storing an object pointer in to the LLVM IR, because that will break caching.  The currently preferred way to store an object is to serialize it into the IR. e.g. lines like: <a href=\"https://github.com/numba/numba/blob/77cb53ba8966a38bfbd3413559e4f04b12812535/numba/targets/boxing.py#L505\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/77cb53ba8966a38bfbd3413559e4f04b12812535/numba/targets/boxing.py#L505</a>",
  "id": "5df790c42cc1b31e342b50e1",
  "issues": [],
  "mentions": [
   {
    "screenName": "pearu",
    "userId": "54f9b3c315522ed4b3dce583",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2019-12-16T14:12:20.222Z",
  "text": "@pearu, in general, we would want to avoid storing an object pointer in to the LLVM IR, because that will break caching.  The currently preferred way to store an object is to serialize it into the IR. e.g. lines like: https://github.com/numba/numba/blob/77cb53ba8966a38bfbd3413559e4f04b12812535/numba/targets/boxing.py#L505",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/77cb53ba8966a38bfbd3413559e4f04b12812535/numba/targets/boxing.py#L505"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> thanks, the hint is noted.",
  "id": "5dfb34bd0cb24d1d44e6241c",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-12-19T08:28:45.363Z",
  "text": "@sklam thanks, the hint is noted.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pearu",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/402156?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/402156?v=4&s=60",
   "displayName": "Pearu Peterson",
   "gv": "4",
   "id": "54f9b3c315522ed4b3dce583",
   "url": "/pearu",
   "username": "pearu",
   "v": 12
  },
  "html": "Heads up regarding the first-class functions support: <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4967\" href=\"https://github.com/numba/numba/pull/4967\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4967</a><br>Early feedback is welcome.<br>As an interesting application, it can be used to call any library function (if its pointer value is known) from a njitted functions. There is a test case that demonstrates calling clib time function from the njitted function.",
  "id": "5dfb6ab8e0131f50c96e4014",
  "issues": [
   {
    "number": "4967",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-12-19T12:19:04.457Z",
  "text": "Heads up regarding the first-class functions support: https://github.com/numba/numba/pull/4967\nEarly feedback is welcome.\nAs an interesting application, it can be used to call any library function (if its pointer value is known) from a njitted functions. There is a test case that demonstrates calling clib time function from the njitted function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-12-20T12:07:22.210Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "hmm, something is up with the closure handling:<pre><code><span class=\"keyword\">from</span> numba <span class=\"keyword\">import</span> njit\n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n\n<span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">problem</span><span class=\"params\">()</span>:</span>\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(a, b, kw1=False)</span>:</span>\n        print(a, b, kw1)\n\n    foo(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"string\">\"x\"</span>)\n    foo(<span class=\"number\">1</span>, <span class=\"number\">2</span>, kw1=<span class=\"string\">\"y\"</span>)\n    foo(<span class=\"number\">1</span>, <span class=\"number\">2</span>, kw1=<span class=\"keyword\">True</span>)\n\nproblem()</code></pre>",
  "id": "5dfcb97384c21677093495f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-12-20T12:07:15.076Z",
  "text": "hmm, something is up with the closure handling:\n```\nfrom numba import njit\nimport numpy as np\n\n@njit\ndef problem():\n\n    def foo(a, b, kw1=False):\n        print(a, b, kw1)\n\n    foo(1, 2, \"x\")\n    foo(1, 2, kw1=\"y\")\n    foo(1, 2, kw1=True)\n\nproblem()\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hi everyone, happy new year! I have a question about the Q1 roadmap that was shared recently. v 48 says &quot;Merge as many in-flight PRs as we can&quot; and v49 says &quot;move [...] to the newer <span data-link-type=\"mention\" data-screen-name=\"overload\" class=\"mention\">@overload</span> style&quot;. I have <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"4480\" href=\"https://github.com/numba/numba/pull/4480\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#4480</a> in flight, which is about moving <code>mean</code> with <code>overload</code>. Should that go in v48 or v49?",
  "id": "5e138938e0f13b70c9418482",
  "issues": [
   {
    "number": "4480",
    "repo": "numba/numba"
   }
  ],
  "mentions": [
   {
    "screenName": "overload",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2020-01-06T19:23:36.514Z",
  "text": "hi everyone, happy new year! I have a question about the Q1 roadmap that was shared recently. v 48 says \"Merge as many in-flight PRs as we can\" and v49 says \"move [...] to the newer @overload style\". I have https://github.com/numba/numba/pull/4480 in flight, which is about moving `mean` with `overload`. Should that go in v48 or v49?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-01-06T20:06:37.535Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span>, the core devs are planning to do some major refactoring for v49; hence, v48 is to try to get anything in-flight merged before rebasing gets hard.  That said, the refactoring work is similar to what you have in the PR; e.g move away from <code>@lower_builtin</code>. So, i will prefer your PR to be merged in early v49 cycle if it can\u2019t make it in v48.",
  "id": "5e13933d0ba7b60f2034472e",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2020-01-06T20:06:21.384Z",
  "text": "@luk-f-a, the core devs are planning to do some major refactoring for v49; hence, v48 is to try to get anything in-flight merged before rebasing gets hard.  That said, the refactoring work is similar to what you have in the PR; e.g move away from `@lower_builtin`. So, i will prefer your PR to be merged in early v49 cycle if it can\u2019t make it in v48.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I can put the work in the next weeks to make it in v48. However, <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4540\" href=\"https://github.com/numba/numba/issues/4540\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#4540</a> needs fixing first, and I don&#39;t know how to fix it myself.",
  "id": "5e1394b83679536f961da0d7",
  "issues": [
   {
    "number": "4540",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2020-01-06T20:12:40.444Z",
  "text": "I can put the work in the next weeks to make it in v48. However, https://github.com/numba/numba/issues/4540 needs fixing first, and I don't know how to fix it myself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I can have a go at <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4540\" class=\"issue\">#4540</a>, but some pointers would be useful",
  "id": "5e139812a74ac8537763f109",
  "issues": [
   {
    "number": "4540"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2020-01-06T20:26:58.179Z",
  "text": "I can have a go at #4540, but some pointers would be useful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "for example, what&#39;s different in <code>timedelta64</code> that makes this fail, and where is the type class defined?",
  "id": "5e139887e409da486cd6a629",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2020-01-06T20:28:55.367Z",
  "text": "for example, what's different in `timedelta64` that makes this fail, and where is the type class defined?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "the type class for <code>timedelta64</code> is defined at <a href=\"https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/types/scalars.py#L163\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/types/scalars.py#L163</a>",
  "id": "5e13a2165597551890314337",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2020-01-06T21:09:42.689Z",
  "text": "the type class for `timedelta64` is defined at https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/types/scalars.py#L163",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/types/scalars.py#L163"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "because of <a href=\"https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L1008\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L1008</a>, <code>type</code> can be expanded by defining a <code>__class__</code> attribute for the type.",
  "id": "5e13a2a4c395034902563a07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2020-01-06T21:12:04.352Z",
  "text": "because of https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L1008, `type` can be expanded by defining a `__class__` attribute for the type.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L1008"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "other types do not have this problem, so I thought <code>__class__</code> would have been defined for other scalars, like <code>Float</code>. I cannot <code>__class__</code> being defined anywhere for <code>Float</code> or any of the parent classes. What am I missing? I wanted to see an example of how it was done for other types but couldn&#39;t find it.",
  "id": "5e13ae0ee52f6353789670b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2020-01-06T22:00:46.761Z",
  "text": "other types do not have this problem, so I thought `__class__` would have been defined for other scalars, like `Float`. I cannot `__class__` being defined anywhere for `Float` or any of the parent classes. What am I missing? I wanted to see an example of how it was done for other types but couldn't find it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "it\u2019s defined for <code>types.Number</code> in <a href=\"https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L700\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L700</a> using the old style",
  "id": "5e13b28e3679536f961e7e5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2020-01-06T22:19:58.456Z",
  "text": "it\u2019s defined for `types.Number` in https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L700 using the old style",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/blob/88e3dad3d43a59c79e6295f72fc344d77f13330c/numba/typing/builtins.py#L700"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "would it be fair to say that it&#39;s not obvious that <code>NPTimedelta</code> is to <code>timedelta64</code> what <code>NumberAttribute</code> is to <code>float64</code>? I thought the equivalent concept would be <code>Float</code>in the same module.",
  "id": "5e13b703a1e150490113d56e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-06T22:38:59.627Z",
  "text": "would it be fair to say that it's not obvious that `NPTimedelta` is to `timedelta64` what `NumberAttribute` is to `float64`? I thought the equivalent concept would be `Float`in the same module.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "if <code>types.Number</code> is in the old style, then can I use it as an example of what to do for <code>NPTimedelta</code>? Would adding a <code>resolve___class__</code> method do the trick?",
  "id": "5e13b74009534142ca1fe897",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T22:40:00.488Z",
  "text": "if `types.Number` is in the old style, then can I use it as an example of what to do for `NPTimedelta`? Would adding a `resolve___class__` method do the trick?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m having a hard time understanding the relationship between <code>Number</code>,  <code>NumberClass</code>, <code>NumberAttribute</code> in order to figure out what&#39;s missing in <code>NPTimedelta</code>.",
  "id": "5e13b8c3821b826f5a77d6c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T22:46:27.302Z",
  "text": "I'm having a hard time understanding the relationship between `Number`,  `NumberClass`, `NumberAttribute` in order to figure out what's missing in `NPTimedelta`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "I agree that it\u2019s not obvious; hence, we are aiming to get rid of the old spelling. Now, I am not sure if you should add the old-style and then we refactor it in 0.49 or we should do something proper for <code>type(timedelta64)</code> during 0.49",
  "id": "5e13be800ba7b60f203583b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T23:10:56.770Z",
  "text": "I agree that it\u2019s not obvious; hence, we are aiming to get rid of the old spelling. Now, I am not sure if you should add the old-style and then we refactor it in 0.49 or we should do something proper for `type(timedelta64)` during 0.49",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "but to answer your question, <code>NumberAttribute.key</code> tells it what base class to match on, i.e. <code>key = types.Number</code> matches on all subclass of <code>types.Number</code>. ",
  "id": "5e13bef309534142ca2026ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T23:12:51.661Z",
  "text": "but to answer your question, `NumberAttribute.key` tells it what base class to match on, i.e. `key = types.Number` matches on all subclass of `types.Number`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "for datetime/timedelta, key can be <code>types._NPDatetimeBase</code>",
  "id": "5e13bf0b04adee486b4294e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T23:13:15.132Z",
  "text": "for datetime/timedelta, key can be `types._NPDatetimeBase`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "The <code>NumberClass</code> is weird because it was added to provide an instance of <code>types.Type</code> for the \u201ctype class&quot;",
  "id": "5e13bf44e0f13b70c942fa16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T23:14:12.105Z",
  "text": "The `NumberClass` is weird because it was added to provide an instance of `types.Type` for the \u201ctype class\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-01-06T23:17:11.222Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span>, ^ this makes me think we should consider a refactoring pass to cleanup the type hierarchy as well.",
  "id": "5e13bff2810a1042cb77d4f2",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T23:17:06.407Z",
  "text": "@stuartarchibald, ^ this makes me think we should consider a refactoring pass to cleanup the type hierarchy as well.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "need to look at how these are used: <code>NumberClass</code>, <code>DTypeSpec</code>, <code>DType</code>, <code>TypeRef</code> ",
  "id": "5e13c017810a1042cb77d519",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-06T23:17:43.519Z",
  "text": "need to look at how these are used: `NumberClass`, `DTypeSpec`, `DType`, `TypeRef` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> agree, let&#39;s schedule it. I once drew the graph of the type hierarchy, it was massive and really involved, work to simplify it will likely help. Also on the back of the <a href=\"https://github.com/numba/numba/pull/5018#discussion_r362553658\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/pull/5018#discussion_r362553658</a>, a type factory might be a good approach.",
  "id": "5e149642e409da486cdd8185",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-07T14:31:30.298Z",
  "text": "@sklam agree, let's schedule it. I once drew the graph of the type hierarchy, it was massive and really involved, work to simplify it will likely help. Also on the back of the https://github.com/numba/numba/pull/5018#discussion_r362553658, a type factory might be a good approach.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/5018#discussion_r362553658"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2020-01-07T15:03:04.152Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "yes, type factory will be good",
  "id": "5e149da691129970ca866b49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-07T15:03:02.692Z",
  "text": "yes, type factory will be good",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "task issue made: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"5042\" href=\"https://github.com/numba/numba/issues/5042\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#5042</a>",
  "id": "5e149e5da1e15049011a2898",
  "issues": [
   {
    "number": "5042",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-07T15:06:05.401Z",
  "text": "task issue made: https://github.com/numba/numba/issues/5042",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":thumbsup: thanks",
  "id": "5e149faa5597551890384772",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-07T15:11:38.645Z",
  "text": ":thumbsup: thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hi, a question about jitclasses: by default a jitclass (python side) is unboxed into a jitclass (native side). would it be possible to register another python class to also unbox into a given jitclass (native side)? ",
  "id": "5e1ba2651cf5106b350e166c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2020-01-12T22:49:09.205Z",
  "text": "hi, a question about jitclasses: by default a jitclass (python side) is unboxed into a jitclass (native side). would it be possible to register another python class to also unbox into a given jitclass (native side)? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> <span data-link-type=\"mention\" data-screen-name=\"seibert\" class=\"mention\">@seibert</span> please could you direct message me ASAP, thanks :)",
  "id": "5e1c39720aba1f0d8026c2df",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   },
   {
    "screenName": "seibert",
    "userId": "55b68af40fc9f982beab2a3c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-13T09:33:38.505Z",
  "text": "@sklam @seibert please could you direct message me ASAP, thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> thanks for quickly looking at the PR. any chance you can give me a hand with the missing part (copying of the class attributes from the python object into the jitclass)?",
  "id": "5e25737dad195a0f673d7142",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-20T09:31:41.365Z",
  "text": "@esc thanks for quickly looking at the PR. any chance you can give me a hand with the missing part (copying of the class attributes from the python object into the jitclass)?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> not sure which PR you mean?",
  "id": "5e29be4e183449313bc4fea7",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-23T15:39:58.199Z",
  "text": "@luk-f-a not sure which PR you mean?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "the one you had just replied to at the time. :smile: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"5111\" class=\"issue\">#5111</a> But don&#39;t worry about the missing part anymore, I talked to <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> in the meantime and he said it will be looked into after all the Q1 cleaning is over",
  "id": "5e2a113201914e3e0438248b",
  "issues": [
   {
    "number": "5111"
   }
  ],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-23T21:33:38.232Z",
  "text": "the one you had just replied to at the time. :smile: #5111 But don't worry about the missing part anymore, I talked to @stuartarchibald in the meantime and he said it will be looked into after all the Q1 cleaning is over",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-01-24T06:56:03.411Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> We tried something similar with custom extension types. The major problem is that <code>@lower_constant</code> is currently expected to return borrowed references (see <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4494\" class=\"issue\">#4494</a>). As far as I can tell you are returning a new reference via <code>nrt.meminfo_alloc_dtor</code>. The best we could come-up with was changing the conventions for <code>@lower_cast</code> and <code>@lower_constant</code> but that is much more work than initially anticipated as we could not get this working w/o Numba IR in SSA. ",
  "id": "5e2a94df1a1c2739e3ed6b38",
  "issues": [
   {
    "number": "4494"
   }
  ],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2020-01-24T06:55:27.946Z",
  "text": "@luk-f-a We tried something similar with custom extension types. The major problem is that `@lower_constant` is currently expected to return borrowed references (see #4494). As far as I can tell you are returning a new reference via `nrt.meminfo_alloc_dtor`. The best we could come-up with was changing the conventions for `@lower_cast` and `@lower_constant` but that is much more work than initially anticipated as we could not get this working w/o Numba IR in SSA. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "thanks for the context <span data-link-type=\"mention\" data-screen-name=\"asodeur\" class=\"mention\">@asodeur</span> I didn&#39;t know something like <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4506\" class=\"issue\">#4506</a> was needed, thanks for working on it! it looks quite a big PR! At the moment my code runs, but I guess it&#39;s creating a refcount problem?",
  "id": "5e2aa9d6f196225bd64b2a7b",
  "issues": [
   {
    "number": "4506"
   }
  ],
  "mentions": [
   {
    "screenName": "asodeur",
    "userId": "5b39e8fbd73408ce4f9f4daf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2020-01-24T08:24:54.984Z",
  "text": "thanks for the context @asodeur I didn't know something like #4506 was needed, thanks for working on it! it looks quite a big PR! At the moment my code runs, but I guess it's creating a refcount problem?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "Yes, I&#39;d think you&#39;ll run into refcounting issues.  I am afraid <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4506\" class=\"issue\">#4506</a> got out-of-hand completely ... we have something working for us locally but many things like <code>parralel=True</code> are not working. I do not think there is a chance to pull this off before Numba IR is SSA.",
  "id": "5e2aacb99ad22d5bd5ced35d",
  "issues": [
   {
    "number": "4506"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2020-01-24T08:37:13.290Z",
  "text": "Yes, I'd think you'll run into refcounting issues.  I am afraid #4506 got out-of-hand completely ... we have something working for us locally but many things like `parralel=True` are not working. I do not think there is a chance to pull this off before Numba IR is SSA.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "That said I think you might get creative for your use-case. AFAIK jitclasses do cache the native instance on the Python instance somewhere. You could try to make sure the class was used as argument once and then get the cached native instance inside <code>@lower_constant</code> or similar ...",
  "id": "5e2aad78183449313bcb7cd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2020-01-24T08:40:24.221Z",
  "text": "That said I think you might get creative for your use-case. AFAIK jitclasses do cache the native instance on the Python instance somewhere. You could try to make sure the class was used as argument once and then get the cached native instance inside `@lower_constant` or similar ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I&#39;m not in a hurry with this one, and Stuart indicated that the core devs would look into the wider problem of extension classes post Q1, so I might wait until they have more concrete plans. No point in doing this PR if it&#39;s not the general direction they want to take",
  "id": "5e2b0ffee177666195bfac81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-24T15:40:46.777Z",
  "text": "I'm not in a hurry with this one, and Stuart indicated that the core devs would look into the wider problem of extension classes post Q1, so I might wait until they have more concrete plans. No point in doing this PR if it's not the general direction they want to take",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": ":thumbsup: at the minute I&#39;m afraid it&#39;s just all hands on deck to clean and reshape the code base whilst we have the chance, it&#39;s been a long time coming and has taken a lot of planning, so we&#39;re just getting on with it as fast as we can! Of course features/discussions/bugs etc will be handled as usual, but &quot;fixes&quot; or new implementations may be a bit delayed, relative to normal, until we get through all these changes! Thanks go to everyone for your support, patience and understanding! :)",
  "id": "5e2b12e8dc07667042e60ed1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-24T15:53:12.104Z",
  "text": ":thumbsup: at the minute I'm afraid it's just all hands on deck to clean and reshape the code base whilst we have the chance, it's been a long time coming and has taken a lot of planning, so we're just getting on with it as fast as we can! Of course features/discussions/bugs etc will be handled as usual, but \"fixes\" or new implementations may be a bit delayed, relative to normal, until we get through all these changes! Thanks go to everyone for your support, patience and understanding! :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "nothing like the smell of freshly cleaned code in the morning :-)",
  "id": "5e2b26fe1a883c6196009588",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-24T17:18:54.864Z",
  "text": "nothing like the smell of freshly cleaned code in the morning :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> \ud83d\ude06",
  "id": "5e2b4c981a1c2739e3f2c912",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2020-01-24T19:59:20.736Z",
  "text": "@luk-f-a \ud83d\ude06",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> Looking through my notes notes I just realized that we already tried constant jitclasses, works except for a  potential race condition (we abandoned this approach b/c we had to preserve object identity through <code>nopython</code> for compatability with our legacy code). I&#39;ll comment on <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"5111\" class=\"issue\">#5111</a>",
  "id": "5e2e99aecd53a80aac329d5f",
  "issues": [
   {
    "number": "5111"
   }
  ],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2020-01-27T08:05:02.414Z",
  "text": "@luk-f-a Looking through my notes notes I just realized that we already tried constant jitclasses, works except for a  potential race condition (we abandoned this approach b/c we had to preserve object identity through `nopython` for compatability with our legacy code). I'll comment on #5111",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"asodeur\" class=\"mention\">@asodeur</span> , thanks a lot! I&#39;ll have a look. I put a limited version of this in numba-scipy <a target=\"_blank\" data-link-type=\"pr\" data-issue=\"16\" href=\"https://github.com/numba/numba-scipy/pull/16\" data-provider=\"github\" data-issue-repo=\"numba/numba-scipy\" class=\"pr\">numba/numba-scipy#16</a>, since it&#39;s not important to preserve the original object. With this I can get scipy&#39;s distribution objects to lower as constant jitclass instances. As for a more general use in numba itself, as you said before, we should wait until 0.49 is out. Thanks for sharing!",
  "id": "5e2f5c2a9ad22d5bd5ef1f38",
  "issues": [
   {
    "number": "16",
    "repo": "numba/numba-scipy"
   }
  ],
  "mentions": [
   {
    "screenName": "asodeur",
    "userId": "5b39e8fbd73408ce4f9f4daf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2020-01-27T21:54:50.261Z",
  "text": "Hi @asodeur , thanks a lot! I'll have a look. I put a limited version of this in numba-scipy https://github.com/numba/numba-scipy/pull/16, since it's not important to preserve the original object. With this I can get scipy's distribution objects to lower as constant jitclass instances. As for a more general use in numba itself, as you said before, we should wait until 0.49 is out. Thanks for sharing!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "I am having trouble finding reliable information on what Python version(s) support f-strings. The internet seems to suggest they were introduced in 3.6. Is there a future import or something for 3.5 and before?",
  "id": "5e314fcf58f02e34973e57db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T09:26:39.262Z",
  "text": "I am having trouble finding reliable information on what Python version(s) support f-strings. The internet seems to suggest they were introduced in 3.6. Is there a future import or something for 3.5 and before?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<a href=\"https://github.com/asottile/future-fstrings\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/asottile/future-fstrings</a> ?",
  "id": "5e315230d9895b17c3ab4b23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T09:36:48.051Z",
  "text": "https://github.com/asottile/future-fstrings ?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/asottile/future-fstrings"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>, I don&#39;t know of any built-in package, only that one",
  "id": "5e3152a9f6945f41ef374a55",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T09:38:49.458Z",
  "text": "hi @esc, I don't know of any built-in package, only that one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "Interesting, I did stumble over it here:  <a href=\"https://github.com/numba/numba/pull/5127#pullrequestreview-349963160\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://github.com/numba/numba/pull/5127#pullrequestreview-349963160</a>",
  "id": "5e315b393aca1e4c5f3fdebb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T10:15:21.544Z",
  "text": "Interesting, I did stumble over it here:  https://github.com/numba/numba/pull/5127#pullrequestreview-349963160",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/numba/numba/pull/5127#pullrequestreview-349963160"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> and thanks for your answer.",
  "id": "5e315b47d9895b17c3ab9592",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T10:15:35.792Z",
  "text": "@luk-f-a and thanks for your answer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span>, will numba follow nep 29 (<a href=\"https://numpy.org/neps/nep-0029-deprecation_policy.html)?\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://numpy.org/neps/nep-0029-deprecation_policy.html)?</a> if so, 3.5 would be out in the next release anyway",
  "id": "5e315cc415941335583382ea",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T10:21:56.328Z",
  "text": "@esc, will numba follow nep 29 (https://numpy.org/neps/nep-0029-deprecation_policy.html)? if so, 3.5 would be out in the next release anyway",
  "unread": false,
  "urls": [
   {
    "url": "https://numpy.org/neps/nep-0029-deprecation_policy.html)?"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "numpy and pandas seem to have dropped 3.5, I think dask too",
  "id": "5e315d6cfe0e6f74e9dd30b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T10:24:44.086Z",
  "text": "numpy and pandas seem to have dropped 3.5, I think dask too",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "I can confirm dask requires 3.6 too (at least on master)",
  "id": "5e315eb373ddad4acd6e1828",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T10:30:11.282Z",
  "text": "I can confirm dask requires 3.6 too (at least on master)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> that might indeed be the case",
  "id": "5e318504159413355834cc5b",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-29T13:13:40.877Z",
  "text": "@luk-f-a that might indeed be the case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<p>Hi all, I notice that numpy calls the inverse hyperbolic sine as <code>np.arcsinh</code>, as opposed to the python math library which calls <code>math.asinh</code>. </p><p>Given this, a function with the <code>njit</code> decorator using <code>math.asinh</code> will fail with an error &quot;module &#39;numpy&#39; has no attribute &#39;asinh&#39;&quot;. Is this a &quot;bug&quot;?</p>",
  "id": "5e3261b015941335583aed38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-01-30T04:55:12.587Z",
  "text": "Hi all, I notice that numpy calls the inverse hyperbolic sine as `np.arcsinh`, as opposed to the python math library which calls `math.asinh`. \n\nGiven this, a function with the `njit` decorator using `math.asinh` will fail with an error \"module 'numpy' has no attribute 'asinh'\". Is this a \"bug\"?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<a target=\"_blank\" data-link-type=\"pr\" data-issue=\"5197\" href=\"https://github.com/numba/numba/pull/5197\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"pr\">numba/numba#5197</a>",
  "id": "5e397dd46f9d3d34981e0054",
  "issues": [
   {
    "number": "5197",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-04T14:21:08.800Z",
  "text": "https://github.com/numba/numba/pull/5197",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/asodeur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38456167?v=4&s=60",
   "displayName": "Andreas Sodeur",
   "gv": "4",
   "id": "5b39e8fbd73408ce4f9f4daf",
   "url": "/asodeur",
   "username": "asodeur",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> made some progress on <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4506\" class=\"issue\">#4506</a>. Porting to 0.48+ I ditched explicit casts again. I think explicit casts are still a good idea but better in a separate PR (after SSA).  The short-term benefit of implicit casts for <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"4506\" class=\"issue\">#4506</a> is that much less rewrite passes break. The PR is passing all tests now ...",
  "id": "5e452a78f3718e705dfcbb79",
  "issues": [
   {
    "number": "4506"
   },
   {
    "number": "4506"
   }
  ],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-13T10:52:40.026Z",
  "text": "@sklam made some progress on #4506. Porting to 0.48+ I ditched explicit casts again. I think explicit casts are still a good idea but better in a separate PR (after SSA).  The short-term benefit of implicit casts for #4506 is that much less rewrite passes break. The PR is passing all tests now ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"asodeur\" class=\"mention\">@asodeur</span>, thanks, I have commented on the PR",
  "id": "5e45a6c019597421f3c913f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "asodeur",
    "userId": "5b39e8fbd73408ce4f9f4daf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-13T19:42:56.196Z",
  "text": "@asodeur, thanks, I have commented on the PR",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hey everyone! Numba currenlty exposes quite a lot of numpy/math functions out of the box. It would be possible to see the llvm code generated for some of those functions? I am trying to see the implementation of <code>np.sinh</code> or <code>np.trunc</code> and <code>inspect_llvm()</code> only shows the following declaration <code>declare double @&quot;trunc&quot;(double %&quot;.1&quot;) nounwind readonly</code><pre><code>; ModuleID = <span class=\"string\">\"trunc$1\"</span>\ntarget triple = <span class=\"string\">\"x86_64-apple-darwin19.0.0\"</span>\ntarget datalayout = <span class=\"string\">\"e-m:o-i64:64-f80:128-n8:16:32:64-S128\"</span>\n\n@<span class=\"string\">\"_ZN08NumbaEnv8__main__9trunc$241Ed\"</span> = common global <span class=\"keyword\">i8</span>* null\ndefine <span class=\"keyword\">i32</span> @<span class=\"string\">\"_ZN8__main__9trunc$241Ed\"</span>(<span class=\"keyword\">i64</span>* noalias nocapture %<span class=\"string\">\"retptr\"</span>, {<span class=\"keyword\">i8</span>*, <span class=\"keyword\">i32</span>}** noalias nocapture %<span class=\"string\">\"excinfo\"</span>, double %<span class=\"string\">\"arg.x\"</span>)\n{\nentry:\n  %<span class=\"string\">\"x\"</span> = alloca double\n  store double <span class=\"number\">0.0</span>, double* %<span class=\"string\">\"x\"</span>\n  %<span class=\"string\">\"$0.1\"</span> = alloca <span class=\"keyword\">i8</span>*\n  store <span class=\"keyword\">i8</span>* null, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.1\"</span>\n  %<span class=\"string\">\"$0.2\"</span> = alloca <span class=\"keyword\">i8</span>*\n  store <span class=\"keyword\">i8</span>* null, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.2\"</span>\n  %<span class=\"string\">\"$0.4\"</span> = alloca <span class=\"keyword\">i64</span>\n  store <span class=\"keyword\">i64</span> <span class=\"number\">0</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.4\"</span>\n  %<span class=\"string\">\"$0.5\"</span> = alloca <span class=\"keyword\">i64</span>\n  store <span class=\"keyword\">i64</span> <span class=\"number\">0</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.5\"</span>\n  br label %<span class=\"string\">\"B0\"</span>\nB0:\n  %<span class=\"string\">\".6\"</span> = load double, double* %<span class=\"string\">\"x\"</span>\n  store double %<span class=\"string\">\"arg.x\"</span>, double* %<span class=\"string\">\"x\"</span>\n  %<span class=\"string\">\".9\"</span> = load <span class=\"keyword\">i8</span>*, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.1\"</span>\n  store <span class=\"keyword\">i8</span>* null, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.1\"</span>\n  %<span class=\"string\">\".11\"</span> = load <span class=\"keyword\">i8</span>*, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.1\"</span>\n  %<span class=\"string\">\".13\"</span> = load <span class=\"keyword\">i8</span>*, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.2\"</span>\n  store <span class=\"keyword\">i8</span>* null, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.2\"</span>\n  %<span class=\"string\">\".15\"</span> = load <span class=\"keyword\">i8</span>*, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.1\"</span>\n  store <span class=\"keyword\">i8</span>* null, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.1\"</span>\n  %<span class=\"string\">\".17\"</span> = load double, double* %<span class=\"string\">\"x\"</span>\n  %<span class=\"string\">\".18\"</span> = call double @<span class=\"string\">\"trunc\"</span>(double %<span class=\"string\">\".17\"</span>)\n  %<span class=\"string\">\".19\"</span> = fptosi double %<span class=\"string\">\".18\"</span> to <span class=\"keyword\">i64</span>\n  %<span class=\"string\">\".21\"</span> = load <span class=\"keyword\">i64</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.4\"</span>\n  store <span class=\"keyword\">i64</span> %<span class=\"string\">\".19\"</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.4\"</span>\n  %<span class=\"string\">\".23\"</span> = load double, double* %<span class=\"string\">\"x\"</span>\n  store double <span class=\"number\">0.0</span>, double* %<span class=\"string\">\"x\"</span>\n  %<span class=\"string\">\".25\"</span> = load <span class=\"keyword\">i8</span>*, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.2\"</span>\n  store <span class=\"keyword\">i8</span>* null, <span class=\"keyword\">i8</span>** %<span class=\"string\">\"$0.2\"</span>\n  %<span class=\"string\">\".27\"</span> = load <span class=\"keyword\">i64</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.4\"</span>\n  %<span class=\"string\">\".29\"</span> = load <span class=\"keyword\">i64</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.5\"</span>\n  store <span class=\"keyword\">i64</span> %<span class=\"string\">\".27\"</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.5\"</span>\n  %<span class=\"string\">\".31\"</span> = load <span class=\"keyword\">i64</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.4\"</span>\n  store <span class=\"keyword\">i64</span> <span class=\"number\">0</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.4\"</span>\n  %<span class=\"string\">\".33\"</span> = load <span class=\"keyword\">i64</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"$0.5\"</span>\n  store <span class=\"keyword\">i64</span> %<span class=\"string\">\".33\"</span>, <span class=\"keyword\">i64</span>* %<span class=\"string\">\"retptr\"</span>\n  ret <span class=\"keyword\">i32</span> <span class=\"number\">0</span>\n}\n\ndeclare double @<span class=\"string\">\"trunc\"</span>(double %<span class=\"string\">\".1\"</span>) nounwind readonly\n\n================================================================================</code></pre>",
  "id": "5e4ae455b3023d5025f6ea03",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T19:07:01.295Z",
  "text": "Hey everyone! Numba currenlty exposes quite a lot of numpy/math functions out of the box. It would be possible to see the llvm code generated for some of those functions? I am trying to see the implementation of `np.sinh` or `np.trunc` and `inspect_llvm()` only shows the following declaration `declare double @\"trunc\"(double %\".1\") nounwind readonly`\n\n```llvm\n; ModuleID = \"trunc$1\"\ntarget triple = \"x86_64-apple-darwin19.0.0\"\ntarget datalayout = \"e-m:o-i64:64-f80:128-n8:16:32:64-S128\"\n\n@\"_ZN08NumbaEnv8__main__9trunc$241Ed\" = common global i8* null\ndefine i32 @\"_ZN8__main__9trunc$241Ed\"(i64* noalias nocapture %\"retptr\", {i8*, i32}** noalias nocapture %\"excinfo\", double %\"arg.x\")\n{\nentry:\n  %\"x\" = alloca double\n  store double 0.0, double* %\"x\"\n  %\"$0.1\" = alloca i8*\n  store i8* null, i8** %\"$0.1\"\n  %\"$0.2\" = alloca i8*\n  store i8* null, i8** %\"$0.2\"\n  %\"$0.4\" = alloca i64\n  store i64 0, i64* %\"$0.4\"\n  %\"$0.5\" = alloca i64\n  store i64 0, i64* %\"$0.5\"\n  br label %\"B0\"\nB0:\n  %\".6\" = load double, double* %\"x\"\n  store double %\"arg.x\", double* %\"x\"\n  %\".9\" = load i8*, i8** %\"$0.1\"\n  store i8* null, i8** %\"$0.1\"\n  %\".11\" = load i8*, i8** %\"$0.1\"\n  %\".13\" = load i8*, i8** %\"$0.2\"\n  store i8* null, i8** %\"$0.2\"\n  %\".15\" = load i8*, i8** %\"$0.1\"\n  store i8* null, i8** %\"$0.1\"\n  %\".17\" = load double, double* %\"x\"\n  %\".18\" = call double @\"trunc\"(double %\".17\")\n  %\".19\" = fptosi double %\".18\" to i64\n  %\".21\" = load i64, i64* %\"$0.4\"\n  store i64 %\".19\", i64* %\"$0.4\"\n  %\".23\" = load double, double* %\"x\"\n  store double 0.0, double* %\"x\"\n  %\".25\" = load i8*, i8** %\"$0.2\"\n  store i8* null, i8** %\"$0.2\"\n  %\".27\" = load i64, i64* %\"$0.4\"\n  %\".29\" = load i64, i64* %\"$0.5\"\n  store i64 %\".27\", i64* %\"$0.5\"\n  %\".31\" = load i64, i64* %\"$0.4\"\n  store i64 0, i64* %\"$0.4\"\n  %\".33\" = load i64, i64* %\"$0.5\"\n  store i64 %\".33\", i64* %\"retptr\"\n  ret i32 0\n}\n\ndeclare double @\"trunc\"(double %\".1\") nounwind readonly\n\n================================================================================\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> I&#39;m not sure how you are generating that? <code>trunc</code> is an llvm intrinsic so I&#39;d have thought it&#39;d appear as such.",
  "id": "5e4aebcd5f82805026e264cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T19:38:53.634Z",
  "text": "@guilhermeleobas I'm not sure how you are generating that? `trunc` is an llvm intrinsic so I'd have thought it'd appear as such.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<a href=\"https://releases.llvm.org/9.0.0/docs/LangRef.html#llvm-trunc-intrinsic\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://releases.llvm.org/9.0.0/docs/LangRef.html#llvm-trunc-intrinsic</a>",
  "id": "5e4aec0a18ac9b0fb5c6e6e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T19:39:54.003Z",
  "text": "https://releases.llvm.org/9.0.0/docs/LangRef.html#llvm-trunc-intrinsic",
  "unread": false,
  "urls": [
   {
    "url": "https://releases.llvm.org/9.0.0/docs/LangRef.html#llvm-trunc-intrinsic"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if for some reason that&#39;s not available on your target, it&#39;ll probably be a libm function, just run in a debugger and break on the libm symbol to check",
  "id": "5e4aeca1292ff243d3d2783d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T19:42:25.412Z",
  "text": "if for some reason that's not available on your target, it'll probably be a libm function, just run in a debugger and break on the libm symbol to check",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Hey Stuart, I&#39;ve used the code below and dumped the IR using <code>NUMBA_DUMP_LLVM=1</code> flag<pre><code class=\"python\"><span class=\"decorator\">@njit</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">trunc</span><span class=\"params\">(x)</span>:</span>\n  <span class=\"keyword\">return</span> math.trunc(x)\n\nprint(trunc(<span class=\"number\">3.3</span>))</code></pre>",
  "id": "5e4aefa39d4c83598b978201",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T19:55:15.457Z",
  "text": "Hey Stuart, I've used the code below and dumped the IR using `NUMBA_DUMP_LLVM=1` flag\n```python\n@njit\ndef trunc(x):\n  return math.trunc(x)\n\nprint(trunc(3.3))\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guilhermeleobas\" class=\"mention\">@guilhermeleobas</span> hi, it looks like you are getting a libm call to <code>trunc</code> generated. I&#39;m not sure what it is you want from this?",
  "id": "5e4afb6a0c50da598c17cac7",
  "issues": [],
  "mentions": [
   {
    "screenName": "guilhermeleobas",
    "userId": "58acfe7ad73408ce4f4c08e1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T20:45:30.712Z",
  "text": "@guilhermeleobas hi, it looks like you are getting a libm call to `trunc` generated. I'm not sure what it is you want from this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-02-17T21:03:09.041Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<p>Some math functions on xnd-project/rbc generate an infinite recursion if they are named like that:</p><pre><code class=\"python\"><span class=\"decorator\">@omnisci('double(double)')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">trunc</span><span class=\"params\">(x)</span>:</span>\n    <span class=\"keyword\">return</span> np.trunc(x)\n\n<span class=\"decorator\">@omnisci('double(double)')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sinh</span><span class=\"params\">(x)</span>:</span>\n    <span class=\"keyword\">return</span> np.sinh(x)</code></pre><p>But they work just fine if one changes the name of the callee function</p><pre><code class=\"python\"><span class=\"decorator\">@omnisci('double(double)')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_trunc</span><span class=\"params\">(x)</span>:</span>\n    <span class=\"keyword\">return</span> np.trunc(x)\n\n<span class=\"decorator\">@omnisci('double(double)')</span>\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_sinh</span><span class=\"params\">(x)</span>:</span>\n    <span class=\"keyword\">return</span> np.sinh(x)</code></pre><p>obs: I do not think this is a numba issue</p>",
  "id": "5e4aff6046e99d431f80f902",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:02:24.108Z",
  "text": "Some math functions on xnd-project/rbc generate an infinite recursion if they are named like that:\n```python\n@omnisci('double(double)')\ndef trunc(x):\n    return np.trunc(x)\n\n@omnisci('double(double)')\ndef sinh(x):\n    return np.sinh(x)\n```\n\nBut they work just fine if one changes the name of the callee function\n```python\n@omnisci('double(double)')\ndef _trunc(x):\n    return np.trunc(x)\n\n@omnisci('double(double)')\ndef _sinh(x):\n    return np.sinh(x)\n```\n\nobs: I do not think this is a numba issue",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m not convinced this is a numba problem",
  "id": "5e4affb39d4c83598b97abcc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:03:47.411Z",
  "text": "I'm not convinced this is a numba problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if rbc is compiling e.g. <code>def trunc</code> to a symbol <code>trunc</code> with no mangling then trouble may ensue ",
  "id": "5e4affe148ca2e297458f302",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:04:33.790Z",
  "text": "if rbc is compiling e.g. `def trunc` to a symbol `trunc` with no mangling then trouble may ensue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "perhaps ask <span data-link-type=\"mention\" data-screen-name=\"pearu\" class=\"mention\">@pearu</span> ? think he knows about rbc",
  "id": "5e4b00190d257250fdf1c916",
  "issues": [],
  "mentions": [
   {
    "screenName": "pearu",
    "userId": "54f9b3c315522ed4b3dce583",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:05:29.863Z",
  "text": "perhaps ask @pearu ? think he knows about rbc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "This only happens in a few functions. <code>sin</code> for instance works just fine",
  "id": "5e4b003e5f82805026e29dec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:06:06.716Z",
  "text": "This only happens in a few functions. `sin` for instance works just fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "it&#39;s probably down to whether it&#39;s an llvm intrinsic or a call to a symbol",
  "id": "5e4b005fae97f1297581d2ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:06:39.235Z",
  "text": "it's probably down to whether it's an llvm intrinsic or a call to a symbol",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "if you look in the LLVM IR for the <code>@omnisci(&lt;&gt;)def sin:</code> function, it&#39;s probably got <code>call @llvm.sin.f64</code> or similar",
  "id": "5e4b00a29d4c83598b97adf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:07:46.829Z",
  "text": "if you look in the LLVM IR for the `@omnisci(<>)def sin:` function, it's probably got `call @llvm.sin.f64` or similar",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "whereas <code>trunc</code> for you is <code>call double @&quot;trunc&quot;</code>, but you&#39;re compiling something called the same thing?",
  "id": "5e4b00f918ac9b0fb5c7187b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:09:13.299Z",
  "text": "whereas `trunc` for you is `call double @\"trunc\"`, but you're compiling something called the same thing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(and with the same prototype)",
  "id": "5e4b01069d4c83598b97ae8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:09:26.109Z",
  "text": "(and with the same prototype)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "That&#39;s odd because now I got the following with trunc<pre><code>; Function Attrs: nounwind readnone\ndefine <span class=\"keyword\">double</span> @trunc(<span class=\"keyword\">double</span> %<span class=\"number\">.1</span>) local_unnamed_addr <span class=\"preprocessor\">#<span class=\"number\">2</span> {</span>\nentry:\n  %<span class=\"number\">.25</span>.le.i = tail call <span class=\"keyword\">double</span> @llvm.trunc.f64(<span class=\"keyword\">double</span> %<span class=\"number\">.1</span>) <span class=\"preprocessor\">#<span class=\"number\">3</span></span>\n  ret <span class=\"keyword\">double</span> %<span class=\"number\">.25</span>.le.i\n}</code></pre>",
  "id": "5e4b011fb3023d5025f73f64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:09:51.971Z",
  "text": "That's odd because now I got the following with trunc\n```llvm\n; Function Attrs: nounwind readnone\ndefine double @trunc(double %.1) local_unnamed_addr #2 {\nentry:\n  %.25.le.i = tail call double @llvm.trunc.f64(double %.1) #3\n  ret double %.25.le.i\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": ":/",
  "id": "5e4b01270d257250fdf1cab7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:09:59.830Z",
  "text": ":/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "race condition",
  "id": "5e4b01a05f82805026e2a023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:12:00.385Z",
  "text": "race condition",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "or container ordering or something like that",
  "id": "5e4b01b1ae97f1297581d53a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:12:17.802Z",
  "text": "or container ordering or something like that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "multiple things writing the same definitions in ?",
  "id": "5e4b01c7d3507e0fb61146a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:12:39.093Z",
  "text": "multiple things writing the same definitions in ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "I need to investigate if that is the case",
  "id": "5e4b01da0d257250fdf1cc7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:12:58.784Z",
  "text": "I need to investigate if that is the case",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "nevertheless, any attempt to call trunc will result in an infinite recursion",
  "id": "5e4b01f0c8da1343d458a49c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:13:20.252Z",
  "text": "nevertheless, any attempt to call trunc will result in an infinite recursion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "To summarize, rbc must mangle function names?",
  "id": "5e4b022ad56ddb68a4aee467",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:14:18.448Z",
  "text": "To summarize, rbc must mangle function names?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "well I&#39;ve no idea what it is you are trying to do, but some of the above is like doing <code>double trunc(double x) { return trunc(x); }</code>",
  "id": "5e4b0285d56ddb68a4aee5e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:15:49.450Z",
  "text": "well I've no idea what it is you are trying to do, but some of the above is like doing `double trunc(double x) { return trunc(x); }`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "so it suggests you may have code generation issues",
  "id": "5e4b02905f82805026e2a5ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:16:00.796Z",
  "text": "so it suggests you may have code generation issues",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "to do with name collisions",
  "id": "5e4b02989d4c83598b97b63d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:16:08.504Z",
  "text": "to do with name collisions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "mangling the generated function name would be one way to avoid such problems",
  "id": "5e4b02b70d257250fdf1cfd6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:16:39.917Z",
  "text": "mangling the generated function name would be one way to avoid such problems",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "(or rather, make them harder to create)",
  "id": "5e4b02bfae97f1297581dbb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2020-02-17T21:16:47.453Z",
  "text": "(or rather, make them harder to create)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "I&#39;m sorry I can&#39;t be much more help than making random guesses, I&#39;m not familiar with the code you are using.",
  "id": "5e4b0325ae97f1297581dc90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:18:29.119Z",
  "text": "I'm sorry I can't be much more help than making random guesses, I'm not familiar with the code you are using.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "No problem, <span data-link-type=\"mention\" data-screen-name=\"stuartarchibald\" class=\"mention\">@stuartarchibald</span> ",
  "id": "5e4b035f0d257250fdf1d0f9",
  "issues": [],
  "mentions": [
   {
    "screenName": "stuartarchibald",
    "userId": "5a4ba93ed73408ce4f85b795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:19:27.040Z",
  "text": "No problem, @stuartarchibald ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "I know it&#39;s not enought but I am working on this PR<br><a target=\"_blank\" data-link-type=\"pr\" data-issue=\"24\" href=\"https://github.com/xnd-project/rbc/pull/24\" data-provider=\"github\" data-issue-repo=\"xnd-project/rbc\" class=\"pr\">xnd-project/rbc#24</a>",
  "id": "5e4b036e46e99d431f8105a2",
  "issues": [
   {
    "number": "24",
    "repo": "xnd-project/rbc"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:19:42.701Z",
  "text": "I know it's not enought but I am working on this PR\nhttps://github.com/xnd-project/rbc/pull/24",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "thanks, I found that which informed my guesses a bit :)",
  "id": "5e4b03afd56ddb68a4aee854",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:20:47.512Z",
  "text": "thanks, I found that which informed my guesses a bit :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Do you know in which part of the numba codebase, calls to trunc/sinh/... are replaced by intrinsics or libm calls?",
  "id": "5e4b04079d4c83598b97b98d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:22:15.542Z",
  "text": "Do you know in which part of the numba codebase, calls to trunc/sinh/... are replaced by intrinsics or libm calls?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "they aren&#39;t replaced",
  "id": "5e4b041b46e99d431f8106b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:22:35.834Z",
  "text": "they aren't replaced",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "ok, got it",
  "id": "5e4b046f0ec5ff431e9ad8de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:23:59.118Z",
  "text": "ok, got it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "If you want to look at where they are generated in the first place, <code>numba.cpython.mathimpl.py</code>",
  "id": "5e4b04880d257250fdf1d2ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:24:24.260Z",
  "text": "If you want to look at where they are generated in the first place, `numba.cpython.mathimpl.py`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "things like <code>lc.INTR_EXP</code> are intrinsics, whereas the strings like <code>&quot;asinhf&quot;</code>are calls to externals (libm)",
  "id": "5e4b04c1ae97f1297581e07f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:25:21.882Z",
  "text": "things like `lc.INTR_EXP` are intrinsics, whereas the strings like `\"asinhf\"`are calls to externals (libm)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "&quot;trunc&quot; is declared a call to externals",
  "id": "5e4b05159d4c83598b97bb9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:26:45.474Z",
  "text": "\"trunc\" is declared a call to externals",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "but numba generates an intrisic when one uses <code>np.trunc/math.trunc</code>",
  "id": "5e4b05b90d257250fdf1d554",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-17T21:29:29.219Z",
  "text": "but numba generates an intrisic when one uses `np.trunc/math.trunc`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "probably the optimiser",
  "id": "5e4b0b6046e99d431f811589",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-17T21:53:36.220Z",
  "text": "probably the optimiser",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-02-17T21:54:54.819Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "Ok, thanks a lot for the help",
  "id": "5e4b0b6d48ca2e2974590d29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-17T21:53:49.948Z",
  "text": "Ok, thanks a lot for the help",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "np",
  "id": "5e4b0caa5f82805026e2bf5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2020-02-17T21:59:06.470Z",
  "text": "np",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "morning!",
  "id": "5e4f948f6053e67dc4d73b86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-21T08:27:59.083Z",
  "text": "morning!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/luk-f-a",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/17914484?v=4&s=60",
   "displayName": "luk-f-a",
   "gv": "4",
   "id": "5c1d6ad9d73408ce4fb2a32e",
   "url": "/luk-f-a",
   "username": "luk-f-a",
   "v": 21
  },
  "html": "good morning <span data-link-type=\"mention\" data-screen-name=\"esc\" class=\"mention\">@esc</span> ",
  "id": "5e4fa81aff00c664eed7daf9",
  "issues": [],
  "mentions": [
   {
    "screenName": "esc",
    "userId": "555b4c5115522ed4b3e09db9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-21T09:51:22.529Z",
  "text": "good morning @esc ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"luk-f-a\" class=\"mention\">@luk-f-a</span> howdy",
  "id": "5e4fa971ff00c664eed7e007",
  "issues": [],
  "mentions": [
   {
    "screenName": "luk-f-a",
    "userId": "5c1d6ad9d73408ce4fb2a32e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-21T09:57:05.320Z",
  "text": "@luk-f-a howdy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "<code>*args</code> and <code>**kwargs</code> handling in Numba considered wobbly: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"5291\" href=\"https://github.com/numba/numba/issues/5291\" data-provider=\"github\" data-issue-repo=\"numba/numba\" class=\"issue\">numba/numba#5291</a>",
  "id": "5e4fa98c40ac4a7fb9fb45a6",
  "issues": [
   {
    "number": "5291",
    "repo": "numba/numba"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2020-02-21T09:57:32.321Z",
  "text": "`*args` and `**kwargs` handling in Numba considered wobbly: https://github.com/numba/numba/issues/5291",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "I have similar issues right now trying to implement <code>l = List((1,  2, 3))</code>",
  "id": "5e4fa9adff00c664eed7e14a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-21T09:58:05.735Z",
  "text": "I have similar issues right now trying to implement `l = List((1,  2, 3))`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "My gut feeling is that something is off with correctly inferring the signature.",
  "id": "5e4fa9e1ff00c664eed7e185",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-21T09:58:57.638Z",
  "text": "My gut feeling is that something is off with correctly inferring the signature.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/stuartarchibald",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/907717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/907717?v=4&s=60",
   "displayName": "stuartarchibald",
   "gv": "4",
   "id": "5a4ba93ed73408ce4f85b795",
   "url": "/stuartarchibald",
   "username": "stuartarchibald",
   "v": 820
  },
  "html": "Think that <code>*args</code> needs to be handled such that it consumes anything up to the first kwonly bind. Basically, logic needs more work.",
  "id": "5e4fb1e50c451412667dc620",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-21T10:33:09.867Z",
  "text": "Think that `*args` needs to be handled such that it consumes anything up to the first kwonly bind. Basically, logic needs more work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/esc",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/41563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/41563?v=4&s=60",
   "displayName": "Valentin Haenel",
   "gv": "4",
   "id": "555b4c5115522ed4b3e09db9",
   "url": "/esc",
   "username": "esc",
   "v": 20
  },
  "html": "I agree",
  "id": "5e4fb22a3ca8a67fb80bda85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-21T10:34:18.563Z",
  "text": "I agree",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2020-02-24T19:04:19.080Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/guilhermeleobas",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2712115?v=4&s=60",
   "displayName": "Guilherme Leobas",
   "gv": "4",
   "id": "58acfe7ad73408ce4f4c08e1",
   "url": "/guilhermeleobas",
   "username": "guilhermeleobas",
   "v": 230
  },
  "html": "<p>Hey everyone, when implementing a numpy ufunc on numba, one must define something else other than registering the implementations and types on <code>numba/np/ufunc_db.py</code>?</p><p>edit: Had to register the function on <code>npydecl.py</code></p>",
  "id": "5e541c811ec15e02119b04c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-24T18:57:05.243Z",
  "text": "Hey everyone, when implementing a numpy ufunc on numba, one must define something else other than registering the implementations and types on `numba/np/ufunc_db.py`?\n\nedit: Had to register the function on `npydecl.py`",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "<p>I wanted to through this over the wall to <span data-link-type=\"mention\" data-screen-name=\"sklam\" class=\"mention\">@sklam</span> cause I know he was also interested in Value State Dependence Graph to SSA transformations: <a href=\"https://llvm.discourse.group/t/mlir-for-rvsdg/471/4\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://llvm.discourse.group/t/mlir-for-rvsdg/471/4</a></p><p>MLIR seems to be growing a great community, especially now that it has moved to LLVM org. </p>",
  "id": "5e557283e40da4526f14eaf7",
  "issues": [],
  "mentions": [
   {
    "screenName": "sklam",
    "userId": "55b689f50fc9f982beab2a24",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2020-02-25T19:16:19.118Z",
  "text": "I wanted to through this over the wall to @sklam cause I know he was also interested in Value State Dependence Graph to SSA transformations: https://llvm.discourse.group/t/mlir-for-rvsdg/471/4\n\nMLIR seems to be growing a great community, especially now that it has moved to LLVM org. ",
  "unread": false,
  "urls": [
   {
    "url": "https://llvm.discourse.group/t/mlir-for-rvsdg/471/4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "some one say \u201cValue State Dependence Graph\u201d =)",
  "id": "5e5572a25cd3836098cb4e7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-25T19:16:50.566Z",
  "text": "some one say \u201cValue State Dependence Graph\u201d =)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "haha",
  "id": "5e5572aa1c4f1707f8cd7d2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2020-02-25T19:16:58.951Z",
  "text": "haha",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/saulshanabrook",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1186124?v=4&s=60",
   "displayName": "Saul Shanabrook",
   "gv": "4",
   "id": "529c6f2eed5ab0b3bf04e08b",
   "url": "/saulshanabrook",
   "username": "saulshanabrook",
   "v": 218
  },
  "html": "It&#39;s my one beef with MLIR, it seems like good people but I would much prefer if they used that sort of representation instead of SSA :(",
  "id": "5e5572c03e6ef6416174f098",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2020-02-25T19:17:20.934Z",
  "text": "It's my one beef with MLIR, it seems like good people but I would much prefer if they used that sort of representation instead of SSA :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sklam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929845?v=4&s=60",
   "displayName": "Siu Kwan Lam",
   "gv": "4",
   "id": "55b689f50fc9f982beab2a24",
   "url": "/sklam",
   "username": "sklam",
   "v": 15
  },
  "html": "i like reading the discussion on it so far. ",
  "id": "5e557630d7bb4e179c9fbe38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2020-02-25T19:32:00.022Z",
  "text": "i like reading the discussion on it so far. ",
  "unread": false,
  "urls": [],
  "v": 1
 }
]